<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>장고쟁이</title>
    <link>http://djangojeng-e.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>장고쟁이의 Python, Django 공부 노트</description>
    <pubDate>Sun, 05 Jul 2020 09:15:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>TodoList 26편 - Docker 설치 (Ubuntu18.04) 기준</title>
      <link>http://djangojeng-e.github.io/2020/07/05/TodoList-26%ED%8E%B8-Docker-%EC%84%A4%EC%B9%98-Ubuntu18-04-%EA%B8%B0%EC%A4%80/</link>
      <guid>http://djangojeng-e.github.io/2020/07/05/TodoList-26%ED%8E%B8-Docker-%EC%84%A4%EC%B9%98-Ubuntu18-04-%EA%B8%B0%EC%A4%80/</guid>
      <pubDate>Sun, 05 Jul 2020 08:59:54 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Docker-설치-ubuntu18-04&quot;&gt;&lt;a href=&quot;#Docker-설치-ubuntu18-04&quot; class=&quot;headerlink&quot; title=&quot;Docker 설치 (ubuntu18.04)&quot;&gt;&lt;/a&gt;Docker 설치 (ubuntu18.04)&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Docker 란?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Linux 컨테이너라는 커널 컨테이너 기술을 이용하여 만든 컨테이너 기술 중 하나.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;운영체제를 가상화 하지 않는 컨테이너 기술이라, 가상머신에 비해 가볍다 &lt;/li&gt;
&lt;li&gt;VM 을 포함하여, 한대의 서버에 여러개의 서비스를 구동하기 좋다 &lt;/li&gt;
&lt;li&gt;가상머신 (VM) 과는 달리, 기존 리눅스 자원 (디스크, 네트워크) 들을 그대로 활용할수 있어서, 여러 서비스들을 한 서버에 돌기기가 좋은 편이다. &lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;

&lt;p&gt;구글과 아마존에서도 도커를 지원하고 있기 떄문에, 많은 사용자들이 작성해둔 소프트웨어 패키지/이미지들이 많아서, 사용성과 접근성이 좋다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;code&gt;다시 한번 정리하면, 도커란,&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;컴퓨터안에 다른 공간들과 분리된, 컨테이너 라는 가상의 공간을 만들어 주는 프로그램으로, &lt;/p&gt;
&lt;p&gt;리눅스 기반으로 되어 있다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;컨테이너를 통해, 여러 환경들을 관리할수 있고, 같은 세팅을 공유하는 일도, &lt;/p&gt;
&lt;p&gt;이미지 파일 하나만 공유한다면, 쉽게 작업할수 있다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Docker-설치-ubuntu18-04"><a href="#Docker-설치-ubuntu18-04" class="headerlink" title="Docker 설치 (ubuntu18.04)"></a>Docker 설치 (ubuntu18.04)</h2><p><br><br></p><blockquote><p><strong>Docker 란?</strong></p><p>Linux 컨테이너라는 커널 컨테이너 기술을 이용하여 만든 컨테이너 기술 중 하나.</p><ul><li>운영체제를 가상화 하지 않는 컨테이너 기술이라, 가상머신에 비해 가볍다 </li><li>VM 을 포함하여, 한대의 서버에 여러개의 서비스를 구동하기 좋다 </li><li>가상머신 (VM) 과는 달리, 기존 리눅스 자원 (디스크, 네트워크) 들을 그대로 활용할수 있어서, 여러 서비스들을 한 서버에 돌기기가 좋은 편이다. </li></ul><br><p>구글과 아마존에서도 도커를 지원하고 있기 떄문에, 많은 사용자들이 작성해둔 소프트웨어 패키지/이미지들이 많아서, 사용성과 접근성이 좋다. </p><br><p><code>다시 한번 정리하면, 도커란,</code> </p><p>컴퓨터안에 다른 공간들과 분리된, 컨테이너 라는 가상의 공간을 만들어 주는 프로그램으로, </p><p>리눅스 기반으로 되어 있다. </p><br><p>컨테이너를 통해, 여러 환경들을 관리할수 있고, 같은 세팅을 공유하는 일도, </p><p>이미지 파일 하나만 공유한다면, 쉽게 작업할수 있다. </p></blockquote><br><a id="more"></a><br><h2 id="Docker-설치하기-Ubuntu18-04"><a href="#Docker-설치하기-Ubuntu18-04" class="headerlink" title="Docker 설치하기 (Ubuntu18.04)"></a>Docker 설치하기 (Ubuntu18.04)</h2><br><p>이전 도커의 버전들은, <code>docker</code>, <code>docker.io</code> 혹은 <code>docker-engine</code>으로 불리웁니다. </p><p><br>만약 이들이 설치되어 있다면, 언인스톨 해주어야 합니다. 터미널에서 아래 명령어를 실행해줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><br><br><h3 id="Repository-셋업하기"><a href="#Repository-셋업하기" class="headerlink" title="Repository 셋업하기"></a>Repository 셋업하기</h3><br><br><ol><li><p>apt 패키지 인덱스를 업데이트 해주고, apt 가 HTTPS 를 통해 저장소를 사용할수 있게 해줍니다 </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg-agent \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><br></li><li><p>도커의 공식 GPG 키를 추가해 줍니다 </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><br></li><li><p>아래 명령어를 실행하여, 안정적인 저장소를 설정 합니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository \</span><br><span class="line">   <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">   <span class="variable">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable"</span></span><br></pre></td></tr></table></figure><br></li></ol><h3 id="Docker-Engine-인스톨-하기"><a href="#Docker-Engine-인스톨-하기" class="headerlink" title="Docker Engine 인스톨 하기"></a>Docker Engine 인스톨 하기</h3><br><p>apt 패키지 인덱스를 업데이트 해주고, 가장 최근의 도커 엔진을 설치해 줍니다 </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><br><blockquote><p>도커 엔진이 알맞게 설치 되었는지 확인 하기 위해, </p><p>hello-world 이미지를 실행 시켜 봅니다 </p></blockquote><br><p>이 커멘드를 실행 시키면, 테스트 이미지를 다운 받아서, 컨테이너 안에 실행 시킵니다. </p><p><br>컨테이너가 실행되면, 정보 메시지를 출력하고 종료됩니다. </p><br><img src="/2020/07/05/TodoList-26%ED%8E%B8-Docker-%EC%84%A4%EC%B9%98-Ubuntu18-04-%EA%B8%B0%EC%A4%80/image1.png" class=""><br><p>Docker 설치가 완료 되었습니다! </p><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/07/05/TodoList-26%ED%8E%B8-Docker-%EC%84%A4%EC%B9%98-Ubuntu18-04-%EA%B8%B0%EC%A4%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 25편 - AWS S3 정적 이미지와 CSS 파일 적용</title>
      <link>http://djangojeng-e.github.io/2020/06/16/TodoList-25%ED%8E%B8-AWS-S3-%EC%A0%95%EC%A0%81-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-CSS-%ED%8C%8C%EC%9D%BC-%EC%A0%81%EC%9A%A9/</link>
      <guid>http://djangojeng-e.github.io/2020/06/16/TodoList-25%ED%8E%B8-AWS-S3-%EC%A0%95%EC%A0%81-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-CSS-%ED%8C%8C%EC%9D%BC-%EC%A0%81%EC%9A%A9/</guid>
      <pubDate>Mon, 15 Jun 2020 15:14:43 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;AWS-S3-정적-이미지와-CSS-파일-적용&quot;&gt;&lt;a href=&quot;#AWS-S3-정적-이미지와-CSS-파일-적용&quot; class=&quot;headerlink&quot; title=&quot;AWS S3 정적 이미지와 CSS 파일 적용&quot;&gt;&lt;/a&gt;AWS S3 정적 이미지와 CSS 파일 적용&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;이전 포스팅에서, &lt;/p&gt;
&lt;p&gt;S3 를 사용해 보았는데, 그전까지 잘 보이던 CSS 와 이미지 파일들이 보이지 않았습니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;이미지와 CSS가 적용되지 않은 사이트를 보게되니, 살짝 당황 했었습니다. &lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;p&gt;아래 두가지 사유로 인해서, 적용이 되지 않는다는것을 알아냈습니다. &lt;/p&gt;
&lt;br&gt;

&lt;ol&gt;
&lt;li&gt;경로&lt;/li&gt;
&lt;li&gt;권한 (엑세스 설정) &lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="AWS-S3-정적-이미지와-CSS-파일-적용"><a href="#AWS-S3-정적-이미지와-CSS-파일-적용" class="headerlink" title="AWS S3 정적 이미지와 CSS 파일 적용"></a>AWS S3 정적 이미지와 CSS 파일 적용</h2><br><p>이전 포스팅에서, </p><p>S3 를 사용해 보았는데, 그전까지 잘 보이던 CSS 와 이미지 파일들이 보이지 않았습니다. </p><br><p>이미지와 CSS가 적용되지 않은 사이트를 보게되니, 살짝 당황 했었습니다. </p><br><br><p>아래 두가지 사유로 인해서, 적용이 되지 않는다는것을 알아냈습니다. </p><br><ol><li>경로</li><li>권한 (엑세스 설정) </li></ol><br><a id="more"></a> <br><h2 id="경로-settings-py-파일에-S3관련-세팅-재확인"><a href="#경로-settings-py-파일에-S3관련-세팅-재확인" class="headerlink" title="경로 (settings.py 파일에 S3관련 세팅 재확인)"></a>경로 (settings.py 파일에 S3관련 세팅 재확인)</h2><br><p>정적파일이 있는 URL 을 잘 찾을수 있도록, 경로를 다시 한번 확인해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django-storages</span></span><br><span class="line"><span class="comment"># django FIleStorage로 S3Boto3Storage (AWS S3) 사용 </span></span><br><span class="line">SECRETS = json.load(open(os.path.join(BASE_DIR, <span class="string">'secrets.json'</span>), <span class="string">'rt'</span>))</span><br><span class="line">DEFAULT_FILE_STORAGE = <span class="string">'storages.backends.s3boto3.S3BotoStorage'</span></span><br><span class="line">AWS_ACCESS_KEY_ID = SECRETS[<span class="string">'AWS_ACCESS_KEY_ID'</span>]</span><br><span class="line">AWS_SECRET_ACCESS_KEY = SECRETS[<span class="string">'AWS_SECRET_ACCESS_KEY'</span>]</span><br><span class="line">AWS_STORAGE_BUCKET_NAME = <span class="string">'todolist-djangojenge'</span></span><br><span class="line">AWS_S3_REGION_NAME = <span class="string">'ap-northeast-2'</span></span><br><span class="line">AWS_S3_CUSTOM_DOMAIN = <span class="string">'%s.s3.%s.amazonaws.com'</span> % (AWS_STORAGE_BUCKET_NAME, AWS_S3_REGION_NAME)</span><br><span class="line">AWS_AUTO_CREATE_BUCKET = <span class="literal">True</span></span><br><span class="line">AWS_DEFAULT_ACL = <span class="string">'public-read'</span></span><br><span class="line">AWS_S3_OBJECT_PARAMETERS = &#123;<span class="string">'CacheControl'</span>: <span class="string">'max-age=86400'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/3.0/howto/static-files/</span></span><br><span class="line">PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">STATIC_ROOT = os.path.join(PROJECT_DIR, <span class="string">'static'</span>)</span><br><span class="line">AWS_LOCATION = <span class="string">'static'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 필자의 경우, 아래 STATIC_URL 이 'https://%s/' %(AWS_S3_CUSTOM_DOMAIN) 으로만 되어 있었음</span></span><br><span class="line"><span class="comment"># S3에 있는 정적파일들의 Full 주소는, 아래 조합과 같음. </span></span><br><span class="line">STATIC_URL = <span class="string">'https://%s/%s/'</span> % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION) </span><br><span class="line"></span><br><span class="line">STATICFILES_STORAGE = <span class="string">'storages.backends.s3boto3.S3Boto3Storage'</span></span><br><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, <span class="string">'static'</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># MEDIA_ROOT 설정 </span></span><br><span class="line"><span class="comment"># user-uploaded static files 의 기본 경로 </span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'.media'</span>)</span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br></pre></td></tr></table></figure><br><p>참고로, secrets.json 파일은, 프로젝트 폴더 내에 존재하는 json 파일로, </p><p><br>이 파일에 AWS_ACCESS_KEY 값과, AWS_SECRET_ACCESS_KEY 값이 json 형태로 저장되어 있습니다. </p><p><br>이를, json.loads 를 사용하여, settings.py 파일에 적용해 줍니다. </p><br><h2 id="권한-엑세스-설정"><a href="#권한-엑세스-설정" class="headerlink" title="권한 (엑세스 설정)"></a>권한 (엑세스 설정)</h2><br><blockquote><p>기본적으로, S3 버킷은, private 으로 설정이 되어 있어서, </p><p>그냥 정적파일을 읽어 오려 하면, 안 읽어 집니다. </p></blockquote><br><p>따라서, S3 버킷 접근 속성을, Public 으로 바꾸어줘야. </p><p><br>서버를 실행 시켰을때, 정적파일들을 읽을수 있게 되어, 이 파일들을 이용해서 화면에 렌더해줄수 있습니다. </p><p><br>아래 사이트에 아주 자세히 나와 있어서, 참조하고 권한을 고쳐주면 됩니다. </p><br><p><a href="https://www.simplified.guide/aws/create-public-s3-bucket" target="_blank" rel="noopener">https://www.simplified.guide/aws/create-public-s3-bucket</a></p><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>S3 적용후에, 정적파일들이 적용 되지 않아서 당황했었지만, <br></p><p>다행히, 에러를 해결할수 있었습니다. 이제 정적파일들과 미디어 파일들은, 로컬 위치가 아닌, S3에서 불러 옵니다. <br></p><p>S3 에서 불러와도 로컬에서 불러온것처럼, 잘 적용되고 표시되는것을 확인할수 있었습니다. </p><br><img src="/2020/06/16/TodoList-25%ED%8E%B8-AWS-S3-%EC%A0%95%EC%A0%81-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-CSS-%ED%8C%8C%EC%9D%BC-%EC%A0%81%EC%9A%A9/image1.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/16/TodoList-25%ED%8E%B8-AWS-S3-%EC%A0%95%EC%A0%81-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-CSS-%ED%8C%8C%EC%9D%BC-%EC%A0%81%EC%9A%A9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 24편 - AWS S3 적용하기</title>
      <link>http://djangojeng-e.github.io/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 12 Jun 2020 05:29:41 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Amazon-S3-적용하기&quot;&gt;&lt;a href=&quot;#Amazon-S3-적용하기&quot; class=&quot;headerlink&quot; title=&quot;Amazon S3 적용하기&quot;&gt;&lt;/a&gt;Amazon S3 적용하기&lt;/h2&gt;&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;Amazon S3 란? &lt;/p&gt;
&lt;p&gt;Amazon S3 는 인터넷상 어디서나 원하는 양의 데이터를 저장하고 검색할수 있도록 구축된, &lt;/p&gt;
&lt;p&gt;객체 스토리지 입니다. 안정성이 매우 뛰어나고, 가용성이 높으며, &lt;/p&gt;
&lt;p&gt;무제한으로 확장 가능한 데이터 스토리지 인프라를 매우 저렴한 비용으로 제공하는, &lt;/p&gt;
&lt;p&gt;간단한 스토리지 서비스 입니다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Amazon-S3-적용하기"><a href="#Amazon-S3-적용하기" class="headerlink" title="Amazon S3 적용하기"></a>Amazon S3 적용하기</h2><br><blockquote><p>Amazon S3 란? </p><p>Amazon S3 는 인터넷상 어디서나 원하는 양의 데이터를 저장하고 검색할수 있도록 구축된, </p><p>객체 스토리지 입니다. 안정성이 매우 뛰어나고, 가용성이 높으며, </p><p>무제한으로 확장 가능한 데이터 스토리지 인프라를 매우 저렴한 비용으로 제공하는, </p><p>간단한 스토리지 서비스 입니다. </p></blockquote><br><a id="more"></a> <br><h2 id="Amazon-S3로-무엇을-할수-있나요"><a href="#Amazon-S3로-무엇을-할수-있나요" class="headerlink" title="Amazon S3로 무엇을 할수 있나요?"></a>Amazon S3로 무엇을 할수 있나요?</h2><br><blockquote><p>스토리지를 이용하여, 간편한 웹 서비스 인터페이스를 사용할수 있습니다. </p><p>인터넷 스토리지를 이용한 어플리케이션을 쉽게 개발할수 있습니다. </p><p>원하는 형식의 데이터를 원하는 만큼 저장하고, 동일한 데이터를 수백만번 읽거나 비상 재해 복구 용도로만 사용하고, 간단한 FTP 어플리케이션 또는, Amazon.com 소매 웹사이트와 같은 복잡한 웹 어플리케이션을 구축할수 있습니다. </p><br><p>Amazon S3 를 사용하는 개발자는 데이터 저장 방법에 대한 고민을 하기 보다, </p><p>좀더 혁신적인 것들에 집중할수 있습니다. </p></blockquote><br><br><h2 id="AWS-S3-생성하기"><a href="#AWS-S3-생성하기" class="headerlink" title="AWS S3 생성하기"></a>AWS S3 생성하기</h2><br><p>우선, S3 를 생성하기 위해서, AWS S3 Management 콘솔에 접속합니다. </p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png" class=""><br><p>버킷 만들기를 클릭합니다</p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image2.png" class=""><br><p>버킷 이름을 정하고, 버킷 만들기 버튼을 눌러서 버킷을 생성해 줍니다. </p><br><br><h2 id="필요한-패키지-설치"><a href="#필요한-패키지-설치" class="headerlink" title="필요한 패키지 설치"></a>필요한 패키지 설치</h2><br><br><p>터미널에서, 아래 명령어를 실행해서, <code>django-storages</code> 와 <code>boto3</code> 를 설치해 줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install django-storages</span><br><span class="line">pip install boto3</span><br></pre></td></tr></table></figure><br><p>그리고 나서, settings.py 에 INSTALLED_APPS 에 storage 를 등록해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="string">'todo'</span>,</span><br><span class="line">    <span class="string">'django_extensions'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># storages 설정 </span></span><br><span class="line">    <span class="string">'storages'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Bulma CSS Framework </span></span><br><span class="line">    <span class="string">'bulma'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Allauth를 위한 Apps </span></span><br><span class="line">    <span class="string">'django.contrib.sites'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'allauth'</span>,</span><br><span class="line">    <span class="string">'allauth.account'</span>,</span><br><span class="line">    <span class="string">'allauth.socialaccount'</span>, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># ... 소셜로그인을 할 제공자 리스트를 아래에 포함 </span></span><br><span class="line">    <span class="string">'allauth.socialaccount.providers.naver'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="settings-py-에-S3-기본설정"><a href="#settings-py-에-S3-기본설정" class="headerlink" title="settings.py 에 S3 기본설정"></a>settings.py 에 S3 기본설정</h2><br><p>생성된 버킷을 사용하기 위한 패키지들을 모두 설치했으면, S3를 Django 에서 사용하기 위해서,</p><p><br>settings.py 파일에, 아래 내용을 추가해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django-storages </span></span><br><span class="line"><span class="comment"># Django의 FilesStorage로 S3Boto3Storage (AWS S3) </span></span><br><span class="line">DEFAULT_FILE_STORAGE = <span class="string">'storages.backends.s3boto3.S3Boto3Storage'</span></span><br><span class="line">AWS_ACCESS_KEY_ID = <span class="string">''</span></span><br><span class="line">AWS_SECRET_ACCESS_KEY = <span class="string">''</span></span><br><span class="line">AWS_STORAGE_BUCKET_NAME = <span class="string">'todolist-djangojenge'</span></span><br><span class="line">AWS_S3_CUSTOM_DOMAIN = <span class="string">'%s.s3.amazonaws.com'</span> % AWS_STORAGE_BUCKET_NAME</span><br><span class="line">AWS_AUTO_CREATE_BUCKET = <span class="literal">True</span></span><br><span class="line">AWS_S3_REGION_NAME = <span class="string">'ap-northeast-2'</span></span><br><span class="line">AWS_DEFAULT_ACL = <span class="literal">None</span></span><br></pre></td></tr></table></figure><br><p>여기서 중요한 값들은,  아래 두가지 AWS 관련 값들입니다. </p><br><ol><li>AWS_ACCESS_KEY_ID </li><li>AWS_SECRET_ACCESS_KEY </li></ol><br><p>이 값들을 받아오기 위한 과정을 아래에 설명합니다. </p><br><h2 id="AWS-IAM-에서-ACCESS-KEY-값들-받아오기"><a href="#AWS-IAM-에서-ACCESS-KEY-값들-받아오기" class="headerlink" title="AWS IAM 에서 ACCESS_KEY 값들 받아오기"></a>AWS IAM 에서 ACCESS_KEY 값들 받아오기</h2><br><p>AWS_ACCESS_KEY_ID 와 AWS_SECRET_ACCESS_KEY 를 가져오기 위해서는, </p><p><br>AWS IAM 서비스에 접속을 해줍니다. </p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image3.png" class=""><br><br><blockquote><p>IAM (Idnetity and Access Management (IAM)) 에서, </p><p>사용자 추가를 해줍니다. </p></blockquote><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image4.png" class=""><br><p>사용자 추가 버튼을 누르면, 아래와 같이. 세부정보 설정 페이지가 나오고, </p><p><br>사용자 이름을 쓴 다음, 엑세스 유형을 프로그래밍 방식 엑세스로 선택 합니다. </p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image5.png" class=""><p><br>****</p><p><strong>다음 버튼을 누르면, 권한 설정 페이지로 넘어갑니다.</strong> </p><p><br>아래와 같이, <strong>기존 정책 직접연결 탭을 누르고</strong> , 정책 필터에 AmazonS3FullAccess 를 검색하여, </p><p>정책이름을 클릭합니다. AmazonS3FullAccess 에 표시를 하고, 다음으로 넘어갑니다. </p><br><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image6.png" class=""><br><p>다음은 태그를 설정하는 페이지인데, 그다지 중요하지 않습니다. </p><p><br>그냥 다음으로 넘어갑니다.<br></p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image7.png" class=""><br><p>검토 사항을 체크하고, 사용자 만들기를 클릭합니다.</p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image8.png" class=""><br><p>사용자 만들기를 클릭하면, 아래 화면 엑세스키 ID 와 비밀엑세스 키 밑에, <br></p><p>각각의 값들이 표시 되어서 나옵니다. </p><br><blockquote><p>ACCESS_KEY_ID 와 SECRET_ACCESS_KEY 를 여기에서 잘 복사해 둡니다. </p></blockquote><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image9.png" class=""><br><br><blockquote><p>이제 이 값들을, </p><p>settings.py 파일에 AWS_ACCESS_KEY_ID 값과 AWS_SECRET_ACCESS_KEY 값에 넣어줍니다. </p></blockquote><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># django-storages </span></span><br><span class="line"><span class="comment"># Django의 FilesStorage로 S3Boto3Storage (AWS S3) </span></span><br><span class="line">DEFAULT_FILE_STORAGE = <span class="string">'storages.backends.s3boto3.S3Boto3Storage'</span></span><br><span class="line">AWS_ACCESS_KEY_ID = <span class="string">''</span>         <span class="comment"># ACCESS_KEY_ID 입력 </span></span><br><span class="line">AWS_SECRET_ACCESS_KEY = <span class="string">''</span>     <span class="comment"># SECRET_ACCESS_KEY 입력 </span></span><br><span class="line">AWS_STORAGE_BUCKET_NAME = <span class="string">'todolist-djangojenge'</span></span><br><span class="line">AWS_S3_CUSTOM_DOMAIN = <span class="string">'%s.s3.amazonaws.com'</span> % AWS_STORAGE_BUCKET_NAME</span><br><span class="line">AWS_AUTO_CREATE_BUCKET = <span class="literal">True</span></span><br><span class="line">AWS_S3_REGION_NAME = <span class="string">'ap-northeast-2'</span></span><br><span class="line">AWS_DEFAULT_ACL = <span class="literal">None</span></span><br></pre></td></tr></table></figure><br><h2 id="정적파일-경로-설정"><a href="#정적파일-경로-설정" class="headerlink" title="정적파일 경로 설정"></a>정적파일 경로 설정</h2><p><br><br></p><p>settings.py 파일에 STATIC 관련 내용을 아래와 같이 바꿔줍니다.<br><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/3.0/howto/static-files/</span></span><br><span class="line">PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">STATIC_ROOT = os.path.join(PROJECT_DIR, <span class="string">'static'</span>)</span><br><span class="line">AWS_LOCATION = <span class="string">'static'</span></span><br><span class="line">STATIC_URL = <span class="string">'https://%s/%s/'</span> % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)</span><br><span class="line">STATICFILES_STORAGE = <span class="string">'storages.backends.s3boto3.S3Boto3Storage'</span></span><br><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, <span class="string">'static'</span>)]</span><br></pre></td></tr></table></figure><br><p>위와 같이 STATIC 관련 내용을 설정해주었으면, 아래 명령어를 실행하여, staticfiles 들을 모아줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py collectstatic </span><br><span class="line">You have requested to collect static files at the destination</span><br><span class="line">location as specified <span class="keyword">in</span> your settings.</span><br><span class="line"></span><br><span class="line">This will overwrite existing files!</span><br><span class="line">Are you sure you want to <span class="keyword">do</span> this?</span><br><span class="line"></span><br><span class="line">Type <span class="string">'yes'</span> to <span class="built_in">continue</span>, or <span class="string">'no'</span> to cancel: yes</span><br><span class="line">Found another file with the destination path <span class="string">'bulma/sass/package.json'</span>. It will be ignored since only the first encountered file is collected. If this is not what you want, make sure every static file has a unique path.</span><br><span class="line">Found another file with the destination path <span class="string">'bulma/sass/package-lock.json'</span>. It will be ignored since only the first encountered file is collected. If this is not what you want, make sure every static file has a unique path.</span><br><span class="line">Found another file with the destination path <span class="string">'bulma/sass/style.sass'</span>. It will be ignored since only the first encountered file is collected. If this is not what you want, make sure every static file has a unique path.</span><br><span class="line">Found another file with the destination path <span class="string">'bulma/css/style.css.map'</span>. It will be ignored since only the first encountered file is collected. If this is not what you want, make sure every static file has a unique path.</span><br><span class="line">Found another file with the destination path <span class="string">'bulma/css/style.min.css'</span>. It will be ignored since only the first encountered file is collected. If this is not what you want, make sure every static file has a unique path.</span><br><span class="line">Found another file with the destination path <span class="string">'bulma/css/style.css'</span>. It will be ignored since only the first encountered file is collected. If this is not what you want, make sure every static file has a unique path.</span><br><span class="line"></span><br><span class="line">144 static files copied.</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>S3에 로그인해서 들어가보면, static 하고 todo 폴더가 생성되어 있는것을 확인 할수 있었습니다. </p><p><br>정적파일과, 미디어 파일을 관리하는 폴더입니다.<br><br></p><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image10.png" class=""><br><p>그런데, 문제가 하나 생깁니다.. 정적파일을 모으고 서버를 실행시켜도. </p><p><br>정적파일들이 적용되지 않는것을 확인할수 있습니다. <br></p><br><img src="/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image11.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/12/TodoList-24%ED%8E%B8-AWS-S3-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 23편 - AWS RDS 사용하기</title>
      <link>http://djangojeng-e.github.io/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 10 Jun 2020 14:23:22 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;AWS-RDS-사용하기&quot;&gt;&lt;a href=&quot;#AWS-RDS-사용하기&quot; class=&quot;headerlink&quot; title=&quot;AWS RDS 사용하기&quot;&gt;&lt;/a&gt;AWS RDS 사용하기&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;지난 포스팅에서, 데이터베이스 인스턴스 생성하기 버튼을 눌러 RDS 인스턴스 생성을 하였습니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;이제, 사용 가능한 RDS 인스턴스가 있습니다. &lt;/p&gt;
&lt;br&gt;

&lt;img src=&quot;/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt; 

&lt;br&gt;

&lt;p&gt;이 인스턴스를 클릭하면, 엔드포인트가 생성 되어 있는것을 확인 할수 있는데. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이 앤드포인트를 Django에서 데이터베이스 설정할때 사용할것 입니다. &lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="AWS-RDS-사용하기"><a href="#AWS-RDS-사용하기" class="headerlink" title="AWS RDS 사용하기"></a>AWS RDS 사용하기</h2><br><p>지난 포스팅에서, 데이터베이스 인스턴스 생성하기 버튼을 눌러 RDS 인스턴스 생성을 하였습니다. </p><br><p>이제, 사용 가능한 RDS 인스턴스가 있습니다. </p><br><img src="/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png" class=""> <br><p>이 인스턴스를 클릭하면, 엔드포인트가 생성 되어 있는것을 확인 할수 있는데. </p><p><br>이 앤드포인트를 Django에서 데이터베이스 설정할때 사용할것 입니다. </p><a id="more"></a> <br><h2 id="settings-py-파일에-DATABASES"><a href="#settings-py-파일에-DATABASES" class="headerlink" title="settings.py 파일에 DATABASES"></a>settings.py 파일에 DATABASES</h2><br><p>settings.py 파일의 DATABASES 설정으로 가서, 아래와 같이 DATABASES 설정을 해줍니다. </p><br> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.postgresql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'todolist'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'djangojenge'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'django12!'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'todolist-django.r2tcewdefdf1.ap-northeast-2.rds.amazonaws.com'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="number">5432</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>위 DATABASES 설정에서, </p><p>‘NAME’ 과 ‘PASSWORD’는 아직 정해지지 않았습니다. </p><p>NAME  과 PASSWORD 는 직접 설정해 주어야 합니다. </p></blockquote><br><br><h2 id="RDS-보안그룹-생성하기"><a href="#RDS-보안그룹-생성하기" class="headerlink" title="RDS 보안그룹 생성하기"></a>RDS 보안그룹 생성하기</h2><br><p>EC2 Management Console 로 가서, </p><p><br>네트워크 및 보안탭에 가장 첫번째 메뉴인, 보안그룹을 클릭하여</p><p><br>아래와 같이 보안그룹을 하나 생성 해줍니다. </p><br><br><img src="/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/image2.png" class=""><br><p>이 보안 그룹을, RDS 인스턴스에 적용해 줍니다. </p><p><br>RDS 인스턴스 수정 버튼을 눌러서, 네트워크 및 보안 섹션에, 아래와 같이 EC2 에서 생성한 보안그룹을 정하고, </p><p><br>퍼블릭 엑세스 가능성을 ‘예’ 로 표시합니다. </p><br><br><img src="/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/image3.png" class=""><br><img src="/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/image4.png" class=""><br><p>보안그룹이 활성이라고 하는 상태가 보이면 적용이 된것입니다. </p><br><br><h2 id="postgres-계정-설정"><a href="#postgres-계정-설정" class="headerlink" title="postgres 계정 설정"></a>postgres 계정 설정</h2><p><br><br></p><p>위의 설정을 다 마쳤으면, 터미널에서, psql 명령어를 사용하여, postgres 계정 설정을 진행합니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">psql --host=todolist-django.ctskq7umc1ur.ap-northeast-2.rds.amazonaws.com --username=todo-list123456 --dbname=postgres</span><br><span class="line">Password <span class="keyword">for</span> user todo-list123456:</span><br></pre></td></tr></table></figure><br><p>여기서 사용되는 username 과 password 는 RDS를 처음 생성할때 입력했던, </p><p><br>username 과 password 입니다. 알맞는 username 과 password 를 입력하면, </p><p><br>아래와 같이 postgres 에 접속이 됩니다. </p><br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">psql (10.12 (Ubuntu 10.12-0ubuntu0.18.04.1), server 11.6)</span><br><span class="line">WARNING: psql major version 10, server major version 11.</span><br><span class="line">         Some psql features might not work.</span><br><span class="line">SSL connection (protocol: TLSv1.2, cipher: ECDHE-RSA-AES256-GCM-SHA384, bits: 256, compression: off)</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 아래 명령어를 실행하여, 데이터베이스를 생성 해줍니다. </span></span><br><span class="line"></span><br><span class="line">postgres=&gt; CREATE DATABASE todolist OWNER=todolist1234 TEMPLATE template0 LC_COLLATE <span class="string">'C'</span>;</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="settings-py-파일에-DATABASES-값-수정"><a href="#settings-py-파일에-DATABASES-값-수정" class="headerlink" title="settings.py 파일에 DATABASES 값 수정"></a>settings.py 파일에 DATABASES 값 수정</h2><br><p>settings.py 파일에 DATABASES 값을 고쳐 줍니다 <br><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.postgresql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'todolist'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'todolist1234'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'&lt;데이터베이스 생성할때 사용한 패스워드&gt;'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'&lt;데이터베이스 앤드포인트 주소&gt;'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="number">5432</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="pyscopg2-설치하기"><a href="#pyscopg2-설치하기" class="headerlink" title="pyscopg2 설치하기"></a>pyscopg2 설치하기</h2><br><p>settings.py 파일에 DATABASES 설정을 마쳤으니, 서버를 시작해보면<br></p><p>psycopg2 를 설치해야 한다는 메시지가 나옵니다. 설치를 진행 해 줍시다. <br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install psycopg2-binary</span><br></pre></td></tr></table></figure><br><p>설치뒤에, 서버를 실행해 보면, 아래와 같은 화면이 나옵니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">System check identified no issues (0 silenced).</span><br><span class="line"></span><br><span class="line">You have 29 unapplied migration(s). Your project may not work properly until you apply the migrations <span class="keyword">for</span> app(s): account, admin, auth, contenttypes, sessions, sites, socialaccount, todo.</span><br><span class="line">Run <span class="string">'python manage.py migrate'</span> to apply them.</span><br><span class="line"></span><br><span class="line">May 20, 2020 - 14:09:47</span><br><span class="line">Django version 3.0.6, using settings <span class="string">'config.settings'</span></span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure><p><br><br></p><p>python manage.py migrate 를 실행하여, migrate 를 해줍니다. </p><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><br><p>migrate 를 해준뒤에, 서버를 실행 시키고, 브라우저로 접속해 보면, </p><p><br>이제까지 개발한 main 페이지가 나옵니다</p><br><img src="/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/image5.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/10/TodoList-23%ED%8E%B8-AWS-RDS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 22편 - AWS RDS 생성하기</title>
      <link>http://djangojeng-e.github.io/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 09 Jun 2020 10:39:19 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;AWS-RDS-생성하기&quot;&gt;&lt;a href=&quot;#AWS-RDS-생성하기&quot; class=&quot;headerlink&quot; title=&quot;AWS RDS 생성하기&quot;&gt;&lt;/a&gt;AWS RDS 생성하기&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;지난 포스팅에서는, 진행한건 아래와 같습니다. &lt;/p&gt;
&lt;br&gt;

&lt;ol&gt;
&lt;li&gt;AWS EC2 생성&lt;/li&gt;
&lt;li&gt;EC2 인스턴스에 프로젝트 폴더 업로드 &lt;/li&gt;
&lt;li&gt;EC2 인스턴스 안에서 서버 실행 &lt;/li&gt;
&lt;li&gt;브라우저로 EC2 접속 &lt;/li&gt;
&lt;li&gt;프로젝트 동작 확인  &lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;

&lt;p&gt;하지만, 문제가 하나 있었습니다. &lt;/p&gt;
&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;static 파일을 읽어오지 못해서, 이미지와 CSS 적용이 되질 않았었습니다. &lt;/p&gt;
&lt;p&gt;일단 이 부분에 대해서는, 나중에 찾아가면서 해결해 보도록 하고, &lt;/p&gt;
&lt;p&gt;데이터 베이스를 기본 데이터베이스인 Sqlite3 대신에, 다른 DB 를 적용 해 보려 합니다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="AWS-RDS-생성하기"><a href="#AWS-RDS-생성하기" class="headerlink" title="AWS RDS 생성하기"></a>AWS RDS 생성하기</h2><br><p>지난 포스팅에서는, 진행한건 아래와 같습니다. </p><br><ol><li>AWS EC2 생성</li><li>EC2 인스턴스에 프로젝트 폴더 업로드 </li><li>EC2 인스턴스 안에서 서버 실행 </li><li>브라우저로 EC2 접속 </li><li>프로젝트 동작 확인  </li></ol><br><p>하지만, 문제가 하나 있었습니다. </p><br><blockquote><p>static 파일을 읽어오지 못해서, 이미지와 CSS 적용이 되질 않았었습니다. </p><p>일단 이 부분에 대해서는, 나중에 찾아가면서 해결해 보도록 하고, </p><p>데이터 베이스를 기본 데이터베이스인 Sqlite3 대신에, 다른 DB 를 적용 해 보려 합니다. </p></blockquote><br><a id="more"></a><br><h2 id="AWS-RDS-사이트-접속"><a href="#AWS-RDS-사이트-접속" class="headerlink" title="AWS RDS 사이트 접속"></a>AWS RDS 사이트 접속</h2><br><p><a href="https://ap-northeast-2.console.aws.amazon.com/rds/home?region=ap-northeast-2#databases:" target="_blank" rel="noopener">https://ap-northeast-2.console.aws.amazon.com/rds/</a></p><br><p>AWS에 접속하여, RDS 인스턴스 생성 과정으로 넘어갑니다. </p><p>데이터베이스 인스턴스 창으로 가서, 우측 상단에 데이터베이스 생성 버튼을 눌러줍니다. </p><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image1.png" class=""><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image2.png" class=""><br><p>PostgreSQL 로 설정해 주고, 프리티어를 선택합니다. </p><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image3.png" class=""> <br><p>DB 계정 정보, 인스턴스 식별자, 사용자 이름, 암호를 설정해 줍니다. </p><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image4.png" class=""> <br><p>쭈욱 내리면서, 바꿀 내용이 있는지 확인해 봅니다. 딱히 바꿀것은 없습니다. </p><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image5.png" class=""><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image6.png" class=""><br><p>손댈곳은 없는것 같고, 데이터베이스 생성 버튼을 눌러서, 생성 진행을 해줍니다. </p><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image7.png" class=""><br><p>생성 버튼을 누르면, 아래와 같이 생성중 이라고 표시가 됩니다. </p><br><p>생성이 완료 된 후에 사용 시작 하면 됩니다. </p><br><img src="/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image8.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/09/TodoList-22%ED%8E%B8-AWS-RDS-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 21편 - AWS EC2에 배포 시작</title>
      <link>http://djangojeng-e.github.io/2020/06/08/TodoList-21%ED%8E%B8-AWS-EC2%EC%97%90-%EB%B0%B0%ED%8F%AC-%EC%8B%9C%EC%9E%91/</link>
      <guid>http://djangojeng-e.github.io/2020/06/08/TodoList-21%ED%8E%B8-AWS-EC2%EC%97%90-%EB%B0%B0%ED%8F%AC-%EC%8B%9C%EC%9E%91/</guid>
      <pubDate>Mon, 08 Jun 2020 13:06:28 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;AWS-EC2에-배포-시작&quot;&gt;&lt;a href=&quot;#AWS-EC2에-배포-시작&quot; class=&quot;headerlink&quot; title=&quot;AWS EC2에 배포 시작&quot;&gt;&lt;/a&gt;AWS EC2에 배포 시작&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;지난 포스팅에서, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;EC2 인스턴스에 연결도 진행하였고, 프로젝트 폴더도 해당 인스턴스에 업로드도 가능했습니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;이제 기본 배포 진행을 해보려 합니다. 우선 EC2 인스턴스에 접속해서, 기본 우분투 세팅을 해줍니다. &lt;/p&gt;
&lt;br&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ubuntu@ip-172-31-32-46:~$ sudo apt update &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ubuntu@ip-172-31-32-46:~$ sudo apt install python3-pip vim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="AWS-EC2에-배포-시작"><a href="#AWS-EC2에-배포-시작" class="headerlink" title="AWS EC2에 배포 시작"></a>AWS EC2에 배포 시작</h2><br><p>지난 포스팅에서, </p><p><br>EC2 인스턴스에 연결도 진행하였고, 프로젝트 폴더도 해당 인스턴스에 업로드도 가능했습니다. </p><br><p>이제 기본 배포 진행을 해보려 합니다. 우선 EC2 인스턴스에 접속해서, 기본 우분투 세팅을 해줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-172-31-32-46:~$ sudo apt update </span><br><span class="line">ubuntu@ip-172-31-32-46:~$ sudo apt install python3-pip vim</span><br></pre></td></tr></table></figure><br><a id="more"></a><br><h2 id="관련-패키지들-설치"><a href="#관련-패키지들-설치" class="headerlink" title="관련 패키지들 설치"></a>관련 패키지들 설치</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-pip vim</span><br></pre></td></tr></table></figure><br><p>python3, pip, vim 을 설치해줍니다. </p><br><h2 id="nginx-설치-및-세팅"><a href="#nginx-설치-및-세팅" class="headerlink" title="nginx 설치 및 세팅"></a>nginx 설치 및 세팅</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><br><blockquote><p>nginx 란? </p><p>2002년부터 러시아의 프로그래머 이고르 시쇼브(Игорь Сысоев)가 Apache HTTPd를 코딩하다 Apache의 C10K 문제[1]를 보고, 이를 극복하기 위해서 네이티브 Win32 환경에도 돌아갈 무설치 웹 서버 데몬 프로그램에 대한 개발을 시작하여 2004년 스푸트니크 1호 발사일에 발표한 <strong>오픈 소스 웹 서버 프로그램</strong>. 현재 이고르 시쇼브와 그가 설립한 회사인 NGINX, Inc.가 이 프로젝트를 운영 중에 있다.[2] 목표는 가벼우면서도 강력한 프로그램이라고 한다. HTTP와 리버스 프록시, IMAP/POP3 등의 서버 구동이 가능하다. Java 서블릿은 대개 Apache의 톰캣을 연동해서 구동하고, PHP의 경우 PHP-FPM(FastCGI Process Manager)을 연동해서 구동한다. </p></blockquote><br><p>nginx 설치가 완료되었으면, 환경 설정을 위해서, sudo su 를 사용. 루트로 들어가준다 </p><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-available/ 폴더에 접속해본다 </span><br><span class="line"></span><br><span class="line">접속한 후에, ls 를 실행하여, 폴더안에 무엇이 있는지 확인 해보면, </span><br><span class="line">default 라는 항목만 존재하는것을 확인 할수 있다. </span><br><span class="line"></span><br><span class="line">ubuntu@ip-172-31-32-46:~$ sudo su</span><br><span class="line">root@ip-172-31-32-46:/home/ubuntu# cd /etc/nginx/sites-available/</span><br><span class="line">root@ip-172-31-32-46:/etc/nginx/sites-available# ls</span><br><span class="line">default</span><br><span class="line">root@ip-172-31-32-46:/etc/nginx/sites-available# mv default default.bak</span><br><span class="line">root@ip-172-31-32-46:/etc/nginx/sites-available# ls</span><br><span class="line">default.bak</span><br><span class="line">root@ip-172-31-32-46:/etc/nginx/sites-available# vim default</span><br></pre></td></tr></table></figure><br><br><p>default 파일을 vim 을 통해서, 아래와 같은 내용을 추가후 저장 종료 </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">upstream django&#123;</span><br><span class="line">    server 127.0.0.1:8000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  proxy_set_header X-Forwarded-Photo <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># gunicorn app</span></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header X-Url-Scheme <span class="variable">$scheme</span>;</span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line">    proxy_redirect off;</span><br><span class="line"></span><br><span class="line">    proxy_pass http://django;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /static/ &#123;</span><br><span class="line">  autoindex on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location /media/ &#123;</span><br><span class="line">  autoindex on;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>service nginx restart 명령어 실행 </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ip-172-31-32-46:/etc/nginx/sites-available<span class="comment"># service nginx restart</span></span><br></pre></td></tr></table></figure><br><br><p>EC2 에서 일반 우분투 터미널로 복귀 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ip-172-31-32-46:/etc/nginx/sites-available<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">ubuntu@ip-172-31-32-46:~$ ls</span><br><span class="line">ubuntu@ip-172-31-32-46:~$</span><br></pre></td></tr></table></figure><br><br><h2 id="업로드된-프로젝트로-이동"><a href="#업로드된-프로젝트로-이동" class="headerlink" title="업로드된 프로젝트로 이동"></a>업로드된 프로젝트로 이동</h2><br><p>지난 포스팅에서 프로젝트 폴더를 EC2 에 업로드 해주었었는데.</p><p><br>해당 폴더로 EC2에서 들어가 줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-172-31-32-46:~$ ls</span><br><span class="line">todolist</span><br><span class="line">ubuntu@ip-172-31-32-46:~$ <span class="built_in">cd</span> todolist</span><br><span class="line">ubuntu@ip-172-31-32-46:~/todolist$ ls</span><br><span class="line">config      deploy.sh  requirements.txt  static     todo</span><br><span class="line">db.sqlite3  manage.py  secrets.json      templates</span><br></pre></td></tr></table></figure><br><p>pip3 install -r requirements.txt 명령어를 실행하여, 패키지를 설치해줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-172-31-32-46:~/todolist$ pip3 install -r requirements.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># 실행후, makemigrations, migrate 를 해줍니다. </span></span><br><span class="line">ubuntu@ip-172-31-32-46:~$ python3 manage.py makemigrations </span><br><span class="line">ubuntu@ip-172-31-32-46:~$ python3 manage.py migrate</span><br></pre></td></tr></table></figure><br><h2 id="settings-py-파일-수정"><a href="#settings-py-파일-수정" class="headerlink" title="settings.py 파일 수정"></a>settings.py 파일 수정</h2><br><p>settings.py 파일안에, ALLOWED_HOSTS 에, EC2 주소를 추가해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ALLOWED_HOSTS = [</span><br><span class="line">    <span class="string">'localhost'</span>,</span><br><span class="line">    <span class="string">'127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'15.164.97.104'</span>,]  <span class="comment"># EC2 주소</span></span><br></pre></td></tr></table></figure><br><br><h2 id="EC2에서-서버-실행-작동-테스트"><a href="#EC2에서-서버-실행-작동-테스트" class="headerlink" title="EC2에서 서버 실행 작동 테스트"></a>EC2에서 서버 실행 작동 테스트</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ip-172-31-32-46:~$ python3 manage.py runserver</span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line">May 20, 2020 - 02:11:11</span><br><span class="line">Django version 3.0.6, using settings <span class="string">'config.settings'</span></span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure><br><p>서버를 실행 시켜 놓은 상태로, 브라우저에 접속해서, EC2 IP 주소를 입력해 보면<br><br>투두리스트가 뜨긴 뜨는데.. CSS와 이미지 적용이 전혀 되지 않은 내용이 브라우저에 표시가 되는걸 확인할수 있었습니다. <br><br></p><img src="/2020/06/08/TodoList-21%ED%8E%B8-AWS-EC2%EC%97%90-%EB%B0%B0%ED%8F%AC-%EC%8B%9C%EC%9E%91/image1.png" class=""><br><p>일단 잘 작동하는것은 확인 하였으니, 서버를 종료 시켜 줍니다.<br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>Django 에서 가장 큰 어려움은, 배포인것 같습니다. <br></p><p>특히, 위의 nginx 는 사용하지 않아도 서버를 실행시키면, 배포가 완료 되긴 하는데;;; 왜 사용하는지도 잘 모르겠고. <br></p><p>nginx 에 대한 설명과 자료들도 굉장히 빈약합니다. 무엇보다 초심자를 위한 설명은 없는듯 합니다;;;  </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/08/TodoList-21%ED%8E%B8-AWS-EC2%EC%97%90-%EB%B0%B0%ED%8F%AC-%EC%8B%9C%EC%9E%91/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 20편 - AWS EC2 인스턴스에 접속, 파일 전송</title>
      <link>http://djangojeng-e.github.io/2020/06/05/TodoList-20%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%97%90-%EC%A0%91%EC%86%8D-%ED%8C%8C%EC%9D%BC-%EC%A0%84%EC%86%A1/</link>
      <guid>http://djangojeng-e.github.io/2020/06/05/TodoList-20%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%97%90-%EC%A0%91%EC%86%8D-%ED%8C%8C%EC%9D%BC-%EC%A0%84%EC%86%A1/</guid>
      <pubDate>Thu, 04 Jun 2020 23:57:57 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;AWS-EC2-접속-파일전송&quot;&gt;&lt;a href=&quot;#AWS-EC2-접속-파일전송&quot; class=&quot;headerlink&quot; title=&quot;AWS EC2 접속, 파일전송&quot;&gt;&lt;/a&gt;AWS EC2 접속, 파일전송&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;지난 포스팅에서, AWS EC2 인스턴스를 생성 하였으니, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이제 해당 인스턴스에 자유롭게 접속도 하고, 작업한 프로젝트도 업로드 해보려 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;해당 인스턴스에 접속하는 명령어는 아래와 같습니다. &lt;/p&gt;
&lt;br&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -i &amp;lt;newtodolist.pem 이 다운로드 되있는 경로&amp;gt; ubuntu@&amp;lt;해당인스턴스public IP&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 에시는 아래와 같음. pem 파일의 경로를 잘 설정해주는것이 중요! &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh ~i ~/home/pemkeys/newkeys/newtodolist.pem ubuntu@12.111.87.111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;br&gt;

&lt;br&gt;

&lt;p&gt;해당 인스턴스에 프로젝트 폴더를 전송하여, 배포 작업을 시작할것 입니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="AWS-EC2-접속-파일전송"><a href="#AWS-EC2-접속-파일전송" class="headerlink" title="AWS EC2 접속, 파일전송"></a>AWS EC2 접속, 파일전송</h2><br><p>지난 포스팅에서, AWS EC2 인스턴스를 생성 하였으니, </p><p><br>이제 해당 인스턴스에 자유롭게 접속도 하고, 작업한 프로젝트도 업로드 해보려 합니다. </p><br><p>해당 인스턴스에 접속하는 명령어는 아래와 같습니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -i &lt;newtodolist.pem 이 다운로드 되있는 경로&gt; ubuntu@&lt;해당인스턴스public IP&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 에시는 아래와 같음. pem 파일의 경로를 잘 설정해주는것이 중요! </span></span><br><span class="line">ssh ~i ~/home/pemkeys/newkeys/newtodolist.pem ubuntu@12.111.87.111</span><br></pre></td></tr></table></figure><br><br><p>해당 인스턴스에 프로젝트 폴더를 전송하여, 배포 작업을 시작할것 입니다. </p><br><a id="more"></a> <br><h2 id="EC2-에-파일전송-하기"><a href="#EC2-에-파일전송-하기" class="headerlink" title="EC2 에 파일전송 하기"></a>EC2 에 파일전송 하기</h2><br><p>터미널에서 scp 명령어를 사용하여,<br> 생성한 인스턴스에 TodoList 프로젝트 폴더를 업로드 해봅니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -i ~/downloads/keys/newtodolist.pem -r ~/projects/todolist ubuntu@15.164.97.104:/home/ubuntu/</span><br></pre></td></tr></table></figure><br><br><blockquote><p><a href="mailto:ubuntu@15.164.87.452">ubuntu@15.164.87.452</a>, 뒤에 </p><p><code>:</code>을 꼭 붙여주어야 합니다. </p></blockquote><br><p>ssh 명령어를 실행하여, EC2 로 접속해 보면, </p><p><br>파일이 업로드 되어 있는것을 확인 할수 있습니다. </p><br><br><img src="/2020/06/05/TodoList-20%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%97%90-%EC%A0%91%EC%86%8D-%ED%8C%8C%EC%9D%BC-%EC%A0%84%EC%86%A1/image1.png" class=""> <br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/05/TodoList-20%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%97%90-%EC%A0%91%EC%86%8D-%ED%8C%8C%EC%9D%BC-%EC%A0%84%EC%86%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 19편 - AWS EC2 인스턴스 생성하기</title>
      <link>http://djangojeng-e.github.io/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Thu, 04 Jun 2020 11:14:49 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;AWS-EC2-인스턴스-생성&quot;&gt;&lt;a href=&quot;#AWS-EC2-인스턴스-생성&quot; class=&quot;headerlink&quot; title=&quot;AWS EC2 인스턴스 생성&quot;&gt;&lt;/a&gt;AWS EC2 인스턴스 생성&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;&lt;strong&gt;AWS (AMAZON WEB SERVICES)&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;투두리스트가 완전되었다고 가정하고, AWS 서버에 올려서 배포하는 작업을 시작해 보려 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;EC2 인스턴스를 하나 생성해서, 사용해 보려 합니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="AWS-EC2-인스턴스-생성"><a href="#AWS-EC2-인스턴스-생성" class="headerlink" title="AWS EC2 인스턴스 생성"></a>AWS EC2 인스턴스 생성</h2><br><p><strong>AWS (AMAZON WEB SERVICES)</strong></p><br><p>투두리스트가 완전되었다고 가정하고, AWS 서버에 올려서 배포하는 작업을 시작해 보려 합니다. </p><p><br>EC2 인스턴스를 하나 생성해서, 사용해 보려 합니다. </p><br><a id="more"></a><br><h2 id="EC2-인스턴스-생성하기"><a href="#EC2-인스턴스-생성하기" class="headerlink" title="EC2 인스턴스 생성하기"></a>EC2 인스턴스 생성하기</h2><br><p>aws.com 콘솔에 접속해서, </p><p><br>EC2 탭으로 이동합니다. 거기서, 인스턴스 시작을 눌러줍니다. </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image1.png" class=""><br><p>왼쪽 빠른 시작 탭에, 프리티어 옵션에 체크를 해줍니다. (프리 티어만 사용) </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image2.png" class=""><br><p>Ubuntu Server 18.04 LTS(HVM), SSD Volume Type 을 선택하고, </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image3.png" class=""><br><br><p>단계 2에서, 인스턴스 유형을 선택하고, </p><p><br>다음 인스턴스 세부 정보 구성으로 넘어갑니다 </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image4.png" class=""><br><ol start="3"><li>인스턴스 구성 </li><li>스토리지 추가</li><li>태그 추가 </li></ol><br><p>이 메뉴들은 그닥 중요하지 않으니, 넘어갑니다. </p><br><p><strong>하지만, 6. 보안그룹 구성에서 보안그룹을 아래와 같이 설정해 줘봅시다.</strong> </p><p><br>규칙 추가를 클릭하여, 아래와 같이 만들어 줄수 있습니다. </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image5.png" class=""><br><p>단계 7로 넘어가고, 인스턴스 시작 검토를 합니다. 검토를 다 마쳤으면, </p><p><br>시작버튼을 눌러서, EC2 생성을 마칩니다. </p><br><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image6.png" class=""><br><p>시작하기 버튼을 누르면, 기존 키페어 선택 또는 새 키 페어 생성 탭이 나오는데, <br></p><p>새 키 페이 생성을 누르고, 키페어 이름을 TodoList 로 정해 줍니다. </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image7.png" class=""><br><br><blockquote><p><strong>주의사항</strong></p><p>키 페어 다운로드를 눌러서, 키페어를 다운로드 해주는것을 절대로 잊으면 안됩니다. </p><p>그리고, 이 다운로드 된 파일의 경로를 정확히 잘 알고 있어야 합니다!</p></blockquote><p><br><br></p><p>인스턴스 시작을 눌러서, 인스턴스 생성을 마칩니다.<br></p><p>아래와 같이 인스턴스 생성이 완료 되었습니다.<br><br></p><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image8.png" class=""><p><br><br></p><h2 id="생성된-인스턴스에-접속"><a href="#생성된-인스턴스에-접속" class="headerlink" title="생성된 인스턴스에 접속"></a>생성된 인스턴스에 접속</h2><br><p>생성한 인스턴스로 접속하려면, 터미널에서 ssh 명령어를 실행하여 접속할수 있습니다. </p><br><h3 id="pem-파일-권한-바꿔주기"><a href="#pem-파일-권한-바꿔주기" class="headerlink" title="pem 파일 권한 바꿔주기"></a>pem 파일 권한 바꿔주기</h3><br><p>인스턴스에 접속을 시도하기 전에, 위 과정에서 다운로드 받았던, pem 파일. </p><p><br>즉, 키페어 파일의 권한을 수정해 주어야 합니다. <br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pem 파일이 있는 폴더로 가서, 아래와 같이 chmod 명령어를 사용하여 </span></span><br><span class="line"><span class="comment"># 파일의 권한 수정 </span></span><br><span class="line"></span><br><span class="line">chmod 400 newtodolist.pem</span><br></pre></td></tr></table></figure><p><br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -i &lt;newtodolist.pem 이 다운로드 되있는 경로&gt; ubuntu@&lt;해당인스턴스public IP&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 에시는 아래와 같음. pem 파일의 경로를 잘 설정해주는것이 중요! </span></span><br><span class="line">ssh ~i ~/home/pemkeys/newkeys/newtodolist.pem ubuntu@12.111.87.111</span><br></pre></td></tr></table></figure><br><p>yes/no 메시지가 나오면, yes 라고 타이핑을 해주고 엔터를 눌러줍니다<br></p><p>모든것이 정상적으로 이루어 졋으면, 아래와 같이 EC2 우분투에 접속 완료가 됩니다. </p><br><img src="/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/image9.png" class=""><br><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/04/TodoList-19%ED%8E%B8-AWS-EC2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 18편 - 미니프로젝트 중간 정리</title>
      <link>http://djangojeng-e.github.io/2020/06/03/TodoList-18%ED%8E%B8-%EB%AF%B8%EB%8B%88%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC/</link>
      <guid>http://djangojeng-e.github.io/2020/06/03/TodoList-18%ED%8E%B8-%EB%AF%B8%EB%8B%88%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC/</guid>
      <pubDate>Wed, 03 Jun 2020 07:19:37 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;프로젝트-중간정리&quot;&gt;&lt;a href=&quot;#프로젝트-중간정리&quot; class=&quot;headerlink&quot; title=&quot;프로젝트 중간정리&quot;&gt;&lt;/a&gt;프로젝트 중간정리&lt;/h2&gt;&lt;br&gt;



&lt;p&gt;매우 간단한,&lt;br&gt;&lt;/p&gt;
&lt;br&gt;



&lt;p&gt;그리고 빈약한 미니프로젝트 진행 상황을 중간 정리 합니다. &lt;/p&gt;
&lt;br&gt;



&lt;br&gt;



&lt;p&gt;&lt;strong&gt;아쉬운 점&lt;/strong&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;가장 아쉬운점 :&lt;/strong&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;forms.py 를 사용하여 폼을 그리고, 폼에서 넘어오는 데이터 처리 등. 전반적으로 폼이 문제인것 같음..;;&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;br&gt;



&lt;p&gt;1) 자바스크립트를 몰라서 동적으로 브라우저에서 값을 바꾸거나, 좀더 다이나믹하게 만들수가 없었다. &lt;/p&gt;
&lt;p&gt;2) 디자인 - Bulma CSS 를 사용하여, 어느정도 생으로 프론트 작업 하는것보단 편했지만, 여전히 무언가 아쉽다 &lt;/p&gt;
&lt;p&gt;3) 클래스 기반 뷰의 사용이 아직 서툴다 &lt;/p&gt;
&lt;p&gt;4) allauth 를 사용해서 로그인 로그아웃 그리고 네이버 로그인 기능까지 구현 하긴 했지만. 내부 동작을 파악하고 한것이 아니다. &lt;/p&gt;
&lt;p&gt;5) models.py 파일을 보면, 무언가 효율적으로 쓴것 같지가 않다 &lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="프로젝트-중간정리"><a href="#프로젝트-중간정리" class="headerlink" title="프로젝트 중간정리"></a>프로젝트 중간정리</h2><br><p>매우 간단한,<br></p><br><p>그리고 빈약한 미니프로젝트 진행 상황을 중간 정리 합니다. </p><br><br><p><strong>아쉬운 점</strong> </p><hr><p><strong>가장 아쉬운점 :</strong> </p><hr><p><strong>forms.py 를 사용하여 폼을 그리고, 폼에서 넘어오는 데이터 처리 등. 전반적으로 폼이 문제인것 같음..;;</strong>  </p><hr><hr><br><p>1) 자바스크립트를 몰라서 동적으로 브라우저에서 값을 바꾸거나, 좀더 다이나믹하게 만들수가 없었다. </p><p>2) 디자인 - Bulma CSS 를 사용하여, 어느정도 생으로 프론트 작업 하는것보단 편했지만, 여전히 무언가 아쉽다 </p><p>3) 클래스 기반 뷰의 사용이 아직 서툴다 </p><p>4) allauth 를 사용해서 로그인 로그아웃 그리고 네이버 로그인 기능까지 구현 하긴 했지만. 내부 동작을 파악하고 한것이 아니다. </p><p>5) models.py 파일을 보면, 무언가 효율적으로 쓴것 같지가 않다 </p><a id="more"></a><br><p><strong>현재까지 좋았던 점</strong>  </p><br><p><strong>가장 좋았던점:</strong> </p><hr><p><strong>어떻게든 꾸역꾸역 하려고 하면서, 문서도 많이 보게 되고, 다른 사람들이 짜놓은 코드 예시도 많이 접할수 있었다.</strong> <br></p><p><strong>참고해서 구현한 기능들이 동작하는것을 볼때, 묘한 성취감과 기쁨을 느낀다.</strong> </p><hr><p>****<br></p><br><p>1) Bulma CSS 를 적용하여, 프론트가 생으로 하는거보단 이쁘게 된것 같다. </p><p>2) Django 패키지 - Django-bulma 와 allauth 를 사용해 보았다. </p><p>3) 간편하게 로그인, 로그아웃, 회원가입 기능을 구현하였다. </p><p>4) 관리자 페이지에 모델을 등록하는 방법에 대해 조금 더 익숙해 졌다. </p><p>5) 여기저기 찾아서, javascript 를 구현해 보았다. </p> <br><hr><br><p>마치며.. </p><p>아주 빈약한 프로젝트지만, 다음 포스팅부터, AWS에 배포를 진행해보려 합니다.</p><p>배포를 진행하기 전에, 중간 정리를 한번 해보았네요.  </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/03/TodoList-18%ED%8E%B8-%EB%AF%B8%EB%8B%88%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 17편 - allauth로 네이버로 로그인 구현</title>
      <link>http://djangojeng-e.github.io/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Tue, 02 Jun 2020 08:28:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;allauth 를 사용하여, 소셜 로그인중 하나인 네이버로 로그인 하기를 구현 하고 싶습니다. &lt;br&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;이를 구현하기 위해서는, 네이버 개발자 센터를 방문하여 &lt;/p&gt;
&lt;p&gt;&lt;br&gt;네이버 아이디로 로그인 API 키를 발급 받아야 합니다.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://developers.naver.com/apps/#/register&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developers.naver.com/apps/#/register&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;

&lt;img src=&quot;/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image1.png&quot; class=&quot;&quot;&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>allauth 를 사용하여, 소셜 로그인중 하나인 네이버로 로그인 하기를 구현 하고 싶습니다. <br></p><br><p>이를 구현하기 위해서는, 네이버 개발자 센터를 방문하여 </p><p><br>네이버 아이디로 로그인 API 키를 발급 받아야 합니다.<br><br></p><p> <a href="https://developers.naver.com/apps/#/register" target="_blank" rel="noopener">https://developers.naver.com/apps/#/register</a></p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image1.png" class=""><p><br><br></p><a id="more"></a><h2 id="네이버-아이디-로그인-API-키-발급"><a href="#네이버-아이디-로그인-API-키-발급" class="headerlink" title="네이버 아이디 로그인 API 키 발급"></a>네이버 아이디 로그인 API 키 발급</h2><p><br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image2.png" class=""><br><br><p>서비스 URL : <a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000</a></p><p>네이버아이디로그인 Callback URL : <a href="http://127.0.0.1:8000/accounts/naver/login/callback/" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/naver/login/callback/</a></p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image3.png" class=""><br><p>등록하기 버튼을 누르면, 앱이 등록 됩니다.<br></p><p>그리고, 클라이언트 ID 와 클라이언트 secret 생성이 됩니다.<br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image4.png" class=""><br><h2 id="INSTALLED-APPS-에-네이버-추가"><a href="#INSTALLED-APPS-에-네이버-추가" class="headerlink" title="INSTALLED_APPS 에 네이버 추가"></a>INSTALLED_APPS 에 네이버 추가</h2><br><p>settings.py 안에, INSTALLED_APPS 에 <br></p><p>소셜로그인 제공자로 네이버를 추가해줍니다. <br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># Allauth를 위한 Apps </span></span><br><span class="line">    <span class="string">'django.contrib.sites'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'allauth'</span>,</span><br><span class="line">    <span class="string">'allauth.account'</span>,</span><br><span class="line">    <span class="string">'allauth.socialaccount'</span>, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># ... 소셜로그인을 할 제공자 리스트를 아래에 포함 </span></span><br><span class="line">    <span class="string">'allauth.socialaccount.providers.naver'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="어드민에서-social-application-모델-추가"><a href="#어드민에서-social-application-모델-추가" class="headerlink" title="어드민에서 social application 모델 추가"></a>어드민에서 social application 모델 추가</h2><p><br><br></p><p>어드민에 접속하여, 소셜 계정 / 소셜 어플리케이션을 추가 해줍니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image5.png" class=""> <p><br><br></p><p>이름은, 아래와 같이 네아로 라고 쓰고,</p><p>클라이언트 아이디와 비밀 키는, 네이버 개발자 센터에서 앱을 등록했을때 발급받은,  <br></p><p>아이디와 키값을 입력합니다. </p><p><br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image6.png" class=""><br><p>그리고, 하단에 있는, 이용 가능한 Sites 에, example.com 을 선택하여, </p><p><br>오른쪽으로 옮겨 줍니다 </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image7.png" class=""><br><p>여기까지 설정을 마쳤으면, 저장 버튼을 눌러줍니다. </p><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>네이버 아이디로 로그인 하기 기능을 위한 기본 세팅을 마쳤습니다. </p><p><br>이제부터 잘 작동하는지 확인해 봅니다. 우선, 서버를 실행하고, 로그인 페이지로 갑니다. </p><p><br>기존 로그인 폼 위에, Naver 라고 텍스트 링크가 생겨난걸 확인 할수 있습니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image8.png" class=""><br><p>naver 텍스트를 클릭하면, 아래와 같이 네이버 로그인 페이지가 뜹니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image9.png" class=""><br><p>네이버 페이지에서 OK 버튼을 누르면, 로그인이 완료 됩니다.<br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image10.png" class=""><p><br><br></p><p>다시 로그아웃 하고, 어드민으로 접속해서 소셜 계정 탭을 확인하면,<br></p><p>네이버 로그인을 사용해서 로그인 했던 사용자의 정보가 들어와 있는것을 확인 할수 있습니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image11.png" class=""><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 16편 - allauth를 사용하여 로그인, 로그아웃</title>
      <link>http://djangojeng-e.github.io/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/</link>
      <guid>http://djangojeng-e.github.io/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/</guid>
      <pubDate>Mon, 01 Jun 2020 02:32:02 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;allauth-사용-로그인-로그아웃-구현&quot;&gt;&lt;a href=&quot;#allauth-사용-로그인-로그아웃-구현&quot; class=&quot;headerlink&quot; title=&quot;allauth 사용 로그인, 로그아웃 구현&quot;&gt;&lt;/a&gt;allauth 사용 로그인, 로그아웃 구현&lt;/h2&gt;&lt;p&gt;지난 포스팅에서, allauth 패키지 설치를 완료 하였고, &lt;/p&gt;
&lt;p&gt;패키지를 통하여, 로그인, 로그아웃 기능을 구현 해보려 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;로그인 / 로그아웃을 사용하기 위해서는, allauth 에서 제공하는 로그인 / 로그아웃 URL 들을 알아야 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;allauth 에서, &lt;/p&gt;
&lt;p&gt;로그인 / 로그아웃을 위해 기본으로 제공하는 URL 은 아래와 같습니다 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:8000/accounts/login&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1:8000/accounts/login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:8000/accounts/logout&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1:8000/accounts/logout&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;

&lt;p&gt;이 URL 들을 사용하여, 미니프로젝트에 적용하는 방법은 아래와 같습니다. &lt;/p&gt;
&lt;br&gt;

&lt;ol&gt;
&lt;li&gt;settings.py 파일에 LOGIN_REDIRECT_URL 설정 &lt;/li&gt;
&lt;li&gt;templates 페이지들에 회원가입 / 로그인 / 로그아웃 링크 추가 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="allauth-사용-로그인-로그아웃-구현"><a href="#allauth-사용-로그인-로그아웃-구현" class="headerlink" title="allauth 사용 로그인, 로그아웃 구현"></a>allauth 사용 로그인, 로그아웃 구현</h2><p>지난 포스팅에서, allauth 패키지 설치를 완료 하였고, </p><p>패키지를 통하여, 로그인, 로그아웃 기능을 구현 해보려 합니다. </p><br><p>로그인 / 로그아웃을 사용하기 위해서는, allauth 에서 제공하는 로그인 / 로그아웃 URL 들을 알아야 합니다. </p><br><blockquote><p>allauth 에서, </p><p>로그인 / 로그아웃을 위해 기본으로 제공하는 URL 은 아래와 같습니다 </p><p><a href="http://127.0.0.1:8000/accounts/login" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/login</a></p><p><a href="http://127.0.0.1:8000/accounts/logout" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/logout</a> </p></blockquote><br><p>이 URL 들을 사용하여, 미니프로젝트에 적용하는 방법은 아래와 같습니다. </p><br><ol><li>settings.py 파일에 LOGIN_REDIRECT_URL 설정 </li><li>templates 페이지들에 회원가입 / 로그인 / 로그아웃 링크 추가 </li></ol><p><br><a id="more"></a></p><h3 id="LOGIN-REDIRECT-URL-설정"><a href="#LOGIN-REDIRECT-URL-설정" class="headerlink" title="LOGIN_REDIRECT_URL 설정"></a>LOGIN_REDIRECT_URL 설정</h3><br><p>settings.py 파일에, LOGIN_REDIRECT_URL 설정을 해 놓아야지만, </p><p><br>회원가입 / 로그인 / 로그아웃 기능이 잘 작동 합니다. </p><br><p>config/settings.py 파일에 아래 한줄을 추가해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Allauth 관련 세팅 </span></span><br><span class="line">LOGIN_REDIRECT_URL = <span class="string">'/'</span></span><br></pre></td></tr></table></figure><br><br><h2 id="템플릿-파일에-회원가입-로그인-로그아웃-링크-추가"><a href="#템플릿-파일에-회원가입-로그인-로그아웃-링크-추가" class="headerlink" title="템플릿 파일에 회원가입, 로그인, 로그아웃 링크 추가"></a>템플릿 파일에 회원가입, 로그인, 로그아웃 링크 추가</h2><br><ul><li>templates/base.html 파일, </li><li>templates/todo/todolist.html 파일 </li><li>templates/todo/update.html  파일 </li></ul><br><p>위 3개의 파일들을 수정해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span></span><br><span class="line"><span class="xml">           </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> user.is_authenticated %&#125;</span></span><br><span class="line"><span class="xml">           # 사용자가 로그인 되어 있으면, 로그아웃 버튼을 화면에 표시 </span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'account_logout' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             Log Out</span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">           </span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span></span><br><span class="line"><span class="xml">           # 그렇지 않다면, 회원가입과 로그아웃 버튼 표시 </span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'account_signup' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'account_login' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             Log in</span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">           </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><p>서버를 시작하고, 메인 페이지로 들어가서, </p><p><br>signup 을 눌러 새로운 사용자를 생성해 봅니다. </p><p><br>CSS 를 따로 적용해야 하겠지만, 그래도 BULMA 스타일로 출력되어 나오긴 합니다. </p><p><br>디테일을 입력하고, 회원가입을 진행해봅니다. </p><br><br><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image1.png" class=""><br><p>회원가입을 완료하면, 자동으로 로그인이 되고, </p><p><br>화면 상단에 로그아웃 버튼이 표시되는것을 볼수 있습니다. </p><br><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image2.png" class=""><br><p>로그아웃 버튼도 눌러보면, 로그아웃 컨펌 페이지가 표시가 되고,</p><p><br>컨펌 페이지에서, 로그아웃 버튼을 누르면, 다시 메인페이지로 이동이 되는데.  </p><p><br><br></p><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image3.png" class=""><br><p>로그인 되어 있는 상태가 아니니까, Sign Up 과 Log in 만 표시되어 나옵니다. </p><p><br><br></p><p>로그인도 한번 진행해 보면, 화면 상단에 로그인 버튼을 눌러서</p><p><br>아래와 같이 아이디와 비밀번호를 화면에 입력하고, 로그인을 진행 해 보면<br><br> <img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image4.png" class=""></p><p><br><br></p><p>아이디와 비밀번호를 입력하면, </p><p><br>메인 페이지로 다시 들어오는데, 화면 상단에 Logout 버튼이 표시가 됩니다. <br><br></p><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image5.png" class=""> <p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><p><br><br></p><p>일단, 직접 구현 하는것 보다는, <br></p><p>훨씬 간단하게 회원가입, 로그인, 로그아웃 기능을 구현해 보았습니다.<br>그렇지만, 패키지의 내부 동작을 파악하는것은 아직 다 마친것이 아니라 무엇인가 찝찝하긴 합니다<br><br></p><p>회원가입 / 로그인 / 로그아웃 폼이 좀 맘에 들지 않는다면, allauth 의 템플릿을 수정해 주면 되는데. </p><br><p>이는, 다음 미니 프로젝트때 진행해보려 합니다. <br></p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 15편 - allauth 패키지 설치</title>
      <link>http://djangojeng-e.github.io/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/</link>
      <guid>http://djangojeng-e.github.io/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/</guid>
      <pubDate>Fri, 29 May 2020 21:13:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;allauth-패키지-설치&quot;&gt;&lt;a href=&quot;#allauth-패키지-설치&quot; class=&quot;headerlink&quot; title=&quot;allauth 패키지 설치&quot;&gt;&lt;/a&gt;allauth 패키지 설치&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;django 패키지중 하나인, allauth 를 사용하여, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;기본 로그인, 로그아웃을 구현하고, 가능하면, 네이버 로그인 까지 구현해 볼까 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;로그인, 로그아웃을 직접 구현하기 보다는, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;아무래도 이런 편리한 패키지를 이용하여 소셜 로그인까지 구현이 가능해 보여서 사용해 보려 합니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="allauth-패키지-설치"><a href="#allauth-패키지-설치" class="headerlink" title="allauth 패키지 설치"></a>allauth 패키지 설치</h2><br><p>django 패키지중 하나인, allauth 를 사용하여, </p><p><br>기본 로그인, 로그아웃을 구현하고, 가능하면, 네이버 로그인 까지 구현해 볼까 합니다. </p><br><p>로그인, 로그아웃을 직접 구현하기 보다는, </p><p><br>아무래도 이런 편리한 패키지를 이용하여 소셜 로그인까지 구현이 가능해 보여서 사용해 보려 합니다. </p><br><a id="more"></a><br><p>순서는 아래와 같습니다. </p><br><ol><li><p>allauth 설치 </p></li><li><p>config/settings.py 파일 수정 </p><ul><li>TEMPLATES</li><li>AUTHENTICATION_BACKENDS</li><li>INSTALLED_APPS</li><li>SITE_ID </li></ul></li><li><p>config/urls.py 파일 수정 </p></li><li><p>python mange.py migrate </p></li><li><p>어드민에 접속해서 도메인을 위한 Site  추가 </p></li></ol><br><h2 id="allauth-설치"><a href="#allauth-설치" class="headerlink" title="allauth 설치"></a>allauth 설치</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-allauth</span><br></pre></td></tr></table></figure><br><h2 id="config-settings-py-파일-수정"><a href="#config-settings-py-파일-수정" class="headerlink" title="config/settings.py 파일 수정"></a>config/settings.py 파일 수정</h2><br><ul><li>AUTHENTICATION_BACKENDS</li><li>INSTALLED_APPS </li><li>SITE_ID </li></ul><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="comment"># allauth 와 상관없이 username 으로 장고 어드민에 로그인이 필요할때 </span></span><br><span class="line">    <span class="string">'django.contrib.auth.backends.ModelBackend'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 'allauth' 특화 인증 방법, e-mail로 로그인 하는것 같은것 </span></span><br><span class="line">    <span class="string">'allauth.account.auth_backends.AuthenticationBackend'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="string">'todo'</span>,</span><br><span class="line">    <span class="string">'django_extensions'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Bulma CSS Framework </span></span><br><span class="line">    <span class="string">'bulma'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Allauth를 위한 Apps </span></span><br><span class="line">    <span class="string">'django.contrib.sites'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'allauth'</span>,</span><br><span class="line">    <span class="string">'allauth.account'</span>,</span><br><span class="line">    <span class="string">'allauth.socialaccount'</span>, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># ... 소셜로그인을 할 제공자 리스트를 아래에 포함 </span></span><br><span class="line">    <span class="comment"># 'allauth.socialaccount.providers.naver'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">SITE_ID = <span class="number">1</span></span><br></pre></td></tr></table></figure><br><br><h2 id="config-urls-py-파일-수정"><a href="#config-urls-py-파일-수정" class="headerlink" title="config/urls.py  파일 수정"></a>config/urls.py  파일 수정</h2><br><p>allauth 의 urls 들의 경로를 추가해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">    path(<span class="string">'accounts/'</span>, include(<span class="string">'allauth.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="python-manage-py-migrate"><a href="#python-manage-py-migrate" class="headerlink" title="python manage.py migrate"></a>python manage.py migrate</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(to-do-list)  python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: account, admin, auth, contenttypes, sessions, sites, socialaccount, todo</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying account.0001_initial... OK</span><br><span class="line">  Applying account.0002_email_max_length... OK</span><br><span class="line">  Applying sites.0001_initial... OK</span><br><span class="line">  Applying sites.0002_alter_domain_unique... OK</span><br><span class="line">  Applying socialaccount.0001_initial... OK</span><br><span class="line">  Applying socialaccount.0002_token_max_lengths... OK</span><br><span class="line">  Applying socialaccount.0003_extra_data_default_dict... OK</span><br></pre></td></tr></table></figure><br><h2 id="어드민에-접속해서-설치-확인"><a href="#어드민에-접속해서-설치-확인" class="headerlink" title="어드민에 접속해서 설치 확인"></a>어드민에 접속해서 설치 확인</h2><br><p>설치후에, 어드민에 로그인하면, </p><p><br>아래와 같이 이전에는 볼수 없었던 메뉴들이 생겨납니다. </p><br><img src="/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/image1.png" class=""><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 14편 - 투두리스트 생성 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Fri, 29 May 2020 03:20:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;TodoList-Create-페이지-구현&quot;&gt;&lt;a href=&quot;#TodoList-Create-페이지-구현&quot; class=&quot;headerlink&quot; title=&quot;TodoList Create 페이지 구현&quot;&gt;&lt;/a&gt;TodoList Create 페이지 구현&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;투두리스트를 생성하는것을 구현해 보려 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;클래스 기반 뷰인 CreateView 를 사용해 보려 했었는데. 잘 모르겠어서. 함수형 으로 진행 했습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;forms 적용 하는것에서 꼬이고, 함수기반 뷰 작성할때 꼬이고, 클래스 기반 뷰에서도 꼬이고, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;Bulma CSS 적용할때 꼬이고, URL 설정할때 꼬여서. 매우 힘들게 구현한것 같습니다;;; &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;아래와 같이 진행 해봅니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TodoList-Create-페이지-구현"><a href="#TodoList-Create-페이지-구현" class="headerlink" title="TodoList Create 페이지 구현"></a>TodoList Create 페이지 구현</h2><br><p>투두리스트를 생성하는것을 구현해 보려 합니다. </p><p><br>클래스 기반 뷰인 CreateView 를 사용해 보려 했었는데. 잘 모르겠어서. 함수형 으로 진행 했습니다. </p><p><br>forms 적용 하는것에서 꼬이고, 함수기반 뷰 작성할때 꼬이고, 클래스 기반 뷰에서도 꼬이고, </p><p><br>Bulma CSS 적용할때 꼬이고, URL 설정할때 꼬여서. 매우 힘들게 구현한것 같습니다;;; </p><br><p>아래와 같이 진행 해봅니다. </p><br><a id="more"></a><br><h2 id="todo-list-html-파일-수정"><a href="#todo-list-html-파일-수정" class="headerlink" title="todo_list.html 파일 수정"></a>todo_list.html 파일 수정</h2><br><p>templates/todo/todo_list.html 파일을 수정해줍니다. </p><p><br>생성하기 버튼을 추가 하고, 링크를 연결해줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 목록</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box has-text-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist_create' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-info is-rounded is-fullwidth"</span>&gt;</span>할일 추가하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"><span class="xml">....</span></span><br></pre></td></tr></table></figure><br><h2 id="todo-forms-py-파일-생성-후-작성"><a href="#todo-forms-py-파일-생성-후-작성" class="headerlink" title="todo/forms.py 파일 생성 후 작성"></a>todo/forms.py 파일 생성 후 작성</h2><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoCreateForm</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    name = forms.CharField(</span><br><span class="line">    max_length=<span class="number">20</span>,</span><br><span class="line">    widget=forms.TextInput(</span><br><span class="line">        attrs=&#123;</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'input'</span>,</span><br><span class="line">                <span class="string">'placeholder'</span>: <span class="string">'해야할일'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">description = forms.CharField(</span><br><span class="line">max_length=<span class="number">200</span>,</span><br><span class="line">widget=forms.Textarea(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'textarea'</span>,</span><br><span class="line">            <span class="string">'placeholder'</span>: <span class="string">'할일에 대한 디테일'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">date_deadline = forms.DateField(</span><br><span class="line">widget=forms.DateInput(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'id'</span>: <span class="string">'datepicker'</span>,</span><br><span class="line">            <span class="string">'placeholder'</span>: <span class="string">'YYYY-MM-DD'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">images = forms.ImageField(</span><br><span class="line">widget=forms.ClearableFileInput(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'multiple'</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'file-input'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    ), required=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">files = forms.FileField(</span><br><span class="line">widget=forms.ClearableFileInput(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'multiple'</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'file-input'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    ), required=<span class="literal">False</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br><br><h2 id="todo-views-py-파일-수정"><a href="#todo-views-py-파일-수정" class="headerlink" title="todo/views.py 파일 수정"></a>todo/views.py 파일 수정</h2><br><p>함수기반 뷰인 TodoCreate 를 추가해줌 </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TodoCreateForm</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">TodoCreate</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">        form = TodoCreateForm(request.POST)</span><br><span class="line">        </span><br><span class="line">        name = request.POST[<span class="string">'name'</span>]</span><br><span class="line">        description = request.POST[<span class="string">'description'</span>]</span><br><span class="line">        date_deadline = request.POST[<span class="string">'date_deadline'</span>]</span><br><span class="line">        images = request.FILES.getlist(<span class="string">'images'</span>)</span><br><span class="line">        files = request.FILES.getlist(<span class="string">'files'</span>)</span><br><span class="line">        date_created = date.today()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># valid 한 date_deadline value 를 넣지 않았을때 막을 방법이 없음.</span></span><br><span class="line">        <span class="comment"># date_created 가 date_deadline 보다 지난 날짜라도, Todo는 생성되는 문제점도 있음 </span></span><br><span class="line">        </span><br><span class="line">        t = TodoList.objects.create(</span><br><span class="line">        name=name,</span><br><span class="line">        description=description,</span><br><span class="line">        date_created=date_created,</span><br><span class="line">        date_deadline=date_deadline,</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        t.save()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">            TodoList_images.objects.create(todo=t, image=image)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> file_in_list <span class="keyword">in</span> files:</span><br><span class="line">            TodoList_files.objects.create(todo=t, files=file_in_list)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">'/'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = TodoCreateForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'todo/create.html'</span>, &#123;<span class="string">'form'</span>: form&#125;)</span><br></pre></td></tr></table></figure><br><h2 id="create-html-파일-생성후-작성-폼-작성"><a href="#create-html-파일-생성후-작성-폼-작성" class="headerlink" title="create.html 파일 생성후 작성 (폼 작성)"></a>create.html 파일 생성후 작성 (폼 작성)</h2><br><p>templates/todo/create.html 파일을 생성하고, 작성해 줍니다. </p><br><p>BULMA 공식 페이지에서, components 에 대한 섹션을 참고해 가면서. 하나하나 구현 해 봅니다. </p><p><br>포인트는, forms.py 에 작성된 필드들의 클래스가 Bulma css 에 존재하는 클래스명으로 나와야 합니다. </p><br><ul><li><p>그리고, image 인풋과 file 인풋은, 다른 클래스를 가지고 있기 때문에, </p><p>field.name 이 image 혹은 file 이라면, 일반 form div 가 아닌, 클래스명을 가진 div 로 표시되게 만들었습니다. (이게 if field.name == ‘image’ or filed.name == ‘file’ 이 하는 일입니다.)</p></li><li><p><code>script</code>태그 안에, datepicker() 함수를 넣어서, deadline_date 을 선택할때, 날짜를 선택하는 위젯을 구현해 주었습니다 </p></li></ul><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/resources/demos/style.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/ui/1.12.1/jquery-ui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">$( function() &#123;</span></span><br><span class="line"><span class="xml">  $( "#datepicker" ).datepicker();</span></span><br><span class="line"><span class="xml">&#125; );</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"message is-info"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Todo List 추가<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"delete"</span> <span class="attr">aria-label</span>=<span class="string">"delete"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      새로운 투두 리스트를 추가해 보세요! </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns is-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multiplart/form-data"</span> <span class="attr">style</span>=<span class="string">"margin-top: 50px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> field <span class="keyword">in</span> form %&#125;</span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> field.name == 'images' or field.name == 'files' %&#125;</span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"file has-name"</span> <span class="attr">style</span>=<span class="string">"margin-top: 10px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"file-label"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            </span><span class="template-variable">&#123;&#123; field &#125;&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-cta"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-icon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-upload"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-label"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          Choose </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span><span class="xml"> to upload</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-name"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        Upload your </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span><span class="xml"> here</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span> <span class="attr">style</span>=<span class="string">"margin-top: 10px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; field &#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span> <span class="attr">style</span>=<span class="string">"margin-top: 30px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-light"</span>&gt;</span>Cancel<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br></pre></td></tr></table></figure><br><p>여기서 한가지 정말 아쉬운것 하나는, 날짜를 입력해야하는 필드에 date picker 를 <br>자바스크립트를 사용하여 구현하고 싶었지만, 짧은 지식으로 인하여, <br></p><p><br>아직까지 제대로 구현하지 못했다는 점입니다. </p><br><br><h2 id="URL-설정"><a href="#URL-설정" class="headerlink" title="URL 설정"></a>URL 설정</h2><br><p>todo/urls.py 파일에서, url 을 설정해주어야 합니다. </p><p><br>create/ 로 접속하면, TodoCreate 함수가 호출되게 URL 설정을 해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView, UpdateView, TodoCreate</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">    path(<span class="string">'update/&lt;int:pk&gt;/'</span>, UpdateView.as_view(), name=<span class="string">'todolist_update'</span>),</span><br><span class="line"></span><br><span class="line">    path(<span class="string">'create/'</span>, TodoCreate, name=<span class="string">'todolist_create'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>많은것이 찝찝한,,, 그리고 많이 아쉬운 부분이 많습니다;; </p><p><br>일단, 아래 같이 추가가 제대로 동작하긴 하지만, 개선점이 많아 보입니다. </p><br><br><img src="/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/image1.png" class=""><br><br><img src="/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/image2.png" class=""><p><br>submit 버튼을 누르면, 메인페이지 이동후, 방금 생성한 투두리스트가 나타나는것을 볼수 있습니다. </p><br><img src="/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/image3.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 13편 - 업데이트 기능 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Thu, 28 May 2020 18:40:31 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todolist-업데이트-기능-구현&quot;&gt;&lt;a href=&quot;#Todolist-업데이트-기능-구현&quot; class=&quot;headerlink&quot; title=&quot;Todolist - 업데이트 기능 구현&quot;&gt;&lt;/a&gt;Todolist - 업데이트 기능 구현&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;p&gt;투두 리스트를 수정할수 있는 업데이트 기능을 구현해 봅니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;클래스 기반 뷰인 UpdateView 를 사용하여, 기능을 구현해 볼것입니다. &lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;p&gt;이를 구현하기 위해선, 대략적으로, 아래의 과정을 거쳐야 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;views.py 에 generic 뷰를 상속받는 UpdateView 클래스 작성 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;templates/todo/update.html 파일 생성 및 작성 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;templates/todo/todolist_list.html 파일 수정 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;templates/todo/todolist_detail.html 파일 수정 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;todo/urls.py 파일 수정 &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todolist-업데이트-기능-구현"><a href="#Todolist-업데이트-기능-구현" class="headerlink" title="Todolist - 업데이트 기능 구현"></a>Todolist - 업데이트 기능 구현</h2><br><br><p>투두 리스트를 수정할수 있는 업데이트 기능을 구현해 봅니다. </p><p><br>클래스 기반 뷰인 UpdateView 를 사용하여, 기능을 구현해 볼것입니다. </p><br><br><p>이를 구현하기 위해선, 대략적으로, 아래의 과정을 거쳐야 합니다. </p><br><ol><li><p>views.py 에 generic 뷰를 상속받는 UpdateView 클래스 작성 </p></li><li><p>templates/todo/update.html 파일 생성 및 작성 </p></li><li><p>templates/todo/todolist_list.html 파일 수정 </p></li><li><p>templates/todo/todolist_detail.html 파일 수정 </p></li><li><p>todo/urls.py 파일 수정 </p></li></ol><br><a id="more"></a><br><h2 id="UpdateView-클래스-작성"><a href="#UpdateView-클래스-작성" class="headerlink" title="UpdateView 클래스 작성"></a>UpdateView 클래스 작성</h2><br><p>todo/views.py 파일에 아래와 같이, UpdateView 를 추가해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateView</span><span class="params">(generic.UpdateView)</span>:</span></span><br><span class="line">    model = TodoList </span><br><span class="line">    fields = [<span class="string">'name'</span>, <span class="string">'description'</span>, <span class="string">'date_deadline'</span>]</span><br><span class="line">    template_name = <span class="string">'todo/update.html'</span></span><br><span class="line">    success_url = <span class="string">"/"</span></span><br></pre></td></tr></table></figure><br><br><h2 id="update-html-파일-생성-및-작성"><a href="#update-html-파일-생성-및-작성" class="headerlink" title="update.html 파일 생성 및 작성"></a>update.html 파일 생성 및 작성</h2><br><p>templates/todo/update.html 파일을 아래와 같이 생성해주고 작성해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"has-navbar-fixed-top"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List - </span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 정보</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar is-fixed-top"</span> <span class="attr">role</span>=<span class="string">"navigation"</span> <span class="attr">aria-label</span>=<span class="string">"main navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'images/todo_list.jpg' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"112"</span> <span class="attr">height</span>=<span class="string">"28"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-burger burger"</span> <span class="attr">aria-label</span>=<span class="string">"menu"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">data-target</span>=<span class="string">"navbarBasicExample"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbarBasicExample"</span> <span class="attr">class</span>=<span class="string">"navbar-menu"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          Home</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          To Do Lists</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item has-dropdown is-hoverable"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-link"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            More</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-dropdown"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              About</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Jobs</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Contact</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">"navbar-divider"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Report an issue</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Log in</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; form.as_p &#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Update"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><p>UpdateView를 통해서, form 을 html 에 표시할수 있습니다.<br></p><br><h2 id="todolist-list-html-파일-수정"><a href="#todolist-list-html-파일-수정" class="headerlink" title="todolist_list.html 파일 수정"></a>todolist_list.html 파일 수정</h2><br><p>templates/todo/todolist_list.html 파일을 수정해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/update/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/delete/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h3 id="todolist-detail-html-파일-수정"><a href="#todolist-detail-html-파일-수정" class="headerlink" title="todolist_detail.html 파일 수정"></a>todolist_detail.html 파일 수정</h3><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"># Detail 페이지에서도 update 가 가능하게끔, </span></span><br><span class="line"><span class="xml"># update/</span><span class="template-variable">&#123;&#123; todolist.pk &#125;&#125;</span><span class="xml"> 링크를 추가해 줍니다. </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link is-fullwidth"</span>&gt;</span>뒤로가기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/update/</span></span></span><span class="template-variable">&#123;&#123; todolist.pk &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h2 id="todo-urls-py-파일-수정"><a href="#todo-urls-py-파일-수정" class="headerlink" title="todo/urls.py 파일 수정"></a>todo/urls.py 파일 수정</h2><br><p><code>update/&lt;int:pk&gt;/</code> 로 접속하면, UpdateView 를 호출하게 되는 URL 세팅을 해줍니다 </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView, UpdateView</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">    path(<span class="string">'update/&lt;int:pk&gt;/'</span>, UpdateView.as_view(), name=<span class="string">'todolist_update'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>좀 아쉬운 부분들이 많이 존재하긴 하지만, 일단 잘 작동하는지 테스트를 진행 해보았습니다. <br></p><br><img src="/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image1.png" class=""><br><br><p><strong>수정하기 버튼을 누르면, todo/update.html 파일을 읽어오고,</strong><br></p><p><strong>그안에는 해당 폼이 있습니다. 내용을 추가하고, update 버튼을 누르면, 해당 투두 리스트의 정보가 변경 됩니다.</strong></p><br><img src="/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image2.png" class=""><br><p>마찬가지로, Detail 페이지에서 수정 버튼을 누르면, 위의 폼이 뜨고,<br> update 버튼을 누르면 투두리스트가 변경됩니다. </p><p><br><br></p><p>아직까지 구현이 너무너무 딸립니다만… 일단 기능 구현만 되게 해놓고 나중에 천천히 고치려 합니다… </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 12편 - 투두리스트 삭제 기능 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Tue, 26 May 2020 15:31:20 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todo-List-투두리스트-삭제-기능-구현&quot;&gt;&lt;a href=&quot;#Todo-List-투두리스트-삭제-기능-구현&quot; class=&quot;headerlink&quot; title=&quot;Todo List - 투두리스트 삭제 기능 구현&quot;&gt;&lt;/a&gt;Todo List - 투두리스트 삭제 기능 구현&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;투두 리스트 삭제 기능을 추가해 보려 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;삭제 버튼은, 투두리스트 페이지와, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;투두리스트 디테일 페이지에 추가해 줄겁니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;DeleteView 를 사용하기 때문에, &lt;br&gt;&lt;br&gt;삭제 버튼을 누르면, ‘정말 삭제하겠습니까?’ 라는 문구를 가진 컨펌 페이지가 뜨고, &lt;br&gt;한번 더 삭제하기 버튼을 누르면, &lt;br&gt;삭제가 완료되고. &lt;br&gt;&lt;br&gt;취소 버튼을 누르면, 다시 투두리스트 리스트 페이지로 가게 됩니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todo-List-투두리스트-삭제-기능-구현"><a href="#Todo-List-투두리스트-삭제-기능-구현" class="headerlink" title="Todo List - 투두리스트 삭제 기능 구현"></a>Todo List - 투두리스트 삭제 기능 구현</h2><br><p>투두 리스트 삭제 기능을 추가해 보려 합니다. </p><br><p>삭제 버튼은, 투두리스트 페이지와, </p><p><br>투두리스트 디테일 페이지에 추가해 줄겁니다. </p><p><br>DeleteView 를 사용하기 때문에, <br><br>삭제 버튼을 누르면, ‘정말 삭제하겠습니까?’ 라는 문구를 가진 컨펌 페이지가 뜨고, <br>한번 더 삭제하기 버튼을 누르면, <br>삭제가 완료되고. <br><br>취소 버튼을 누르면, 다시 투두리스트 리스트 페이지로 가게 됩니다. </p><br><a id="more"></a><br><blockquote><p>DeleteView 는 클래스 기반 뷰로, </p><p>기본적으로, 정말로 삭제할것인지에 대한 컨펌 페이지를 가지고 있어서 </p><p>삭제 버튼을 눌렀을때, 이 컨펌 페이지를 거쳐서 삭제를 눌러야 </p><p>객체가 삭제 됩니다. </p></blockquote><br><p>구현 과정은 아래와 같습니다. </p><br><ol><li><p>todo/views.py 파일에 DeleteView 클래스를 추가 </p></li><li><p>templates/todo/delete.html 파일 생성및 작성 </p></li><li><p>templates/todo/todolist_list.html 파일 수정 (삭제버튼 설정) </p></li><li><p>templates/todo/todolist_detail.html 파일 수정 (삭제버튼 설정) </p></li><li><p>todo/urls.py 파일에서 delete URL 설정 </p></li></ol><br><br><h2 id="todo-views-py-파일에-DeleteView-클래스-추가"><a href="#todo-views-py-파일에-DeleteView-클래스-추가" class="headerlink" title="todo/views.py 파일에 DeleteView 클래스 추가"></a>todo/views.py 파일에 DeleteView 클래스 추가</h2><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeleteView</span><span class="params">(generic.DeleteView)</span>:</span></span><br><span class="line">    model = TodoList </span><br><span class="line">    success_url = <span class="string">'/'</span></span><br><span class="line">    tempalte_name = <span class="string">'todo/delete.html'</span></span><br></pre></td></tr></table></figure><br><br><h2 id="templates-todo-delete-html-파일-생성-및-작성"><a href="#templates-todo-delete-html-파일-생성-및-작성" class="headerlink" title="templates/todo/delete.html 파일 생성 및 작성"></a>templates/todo/delete.html 파일 생성 및 작성</h2><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">base.html 상속받는 대신에, </span><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span><span class="xml"> 을 사용하여, </span></span><br><span class="line"><span class="xml">static 폴더 안에 있는 style.css 파일을 직접 가져와 사용했습니다. </span></span><br><span class="line"></span><br><span class="line"><span class="xml">DeleteView 를 사용하기 때문에, </span><span class="template-variable">&#123;&#123; form &#125;&#125;</span><span class="xml"> 을 사용하여, 삭제 폼을 만들어 주었고, </span></span><br><span class="line"></span><br><span class="line"><span class="xml">삭제 버튼과 취소 버튼을 만들어 주었습니다.</span></span><br></pre></td></tr></table></figure><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; object &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; form &#125;&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"button is-danger"</span> <span class="attr">value</span>=<span class="string">"삭제"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        취소</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        해당 투두리스트를 삭제 하시겠습니까?</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><h2 id="templates-todo-todolist-list-html-파일-수정"><a href="#templates-todo-todolist-list-html-파일-수정" class="headerlink" title="templates/todo/todolist_list.html 파일 수정"></a>templates/todo/todolist_list.html 파일 수정</h2><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">삭제하기 버튼을 누르면, "/delete/</span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml">" url 로 넘어가서, </span></span><br><span class="line"><span class="xml">DeleteView 를 호출할것입니다. </span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/delete/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h2 id="templates-todo-todolist-detail-html-파일-수정"><a href="#templates-todo-todolist-detail-html-파일-수정" class="headerlink" title="templates/todo/todolist_detail.html 파일 수정"></a>templates/todo/todolist_detail.html 파일 수정</h2><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">삭제하기 버튼을 누르면, "/delete/</span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml">" url 로 넘어가서, </span></span><br><span class="line"><span class="xml">DeleteView 를 호출하게 해서, </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">Detail 페이지에서도 삭제가 가능하게 하려 했지만, </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">DeleteView 를 Detail 페이지에서 호출하면, 에러가 납니다. (이에 대한 해결 방법을 찾지 못하고 있음) </span></span><br><span class="line"></span><br><span class="line"><span class="xml">따라서, 삭제 버튼을 누르면, 다시 리스트 페이지로 되돌아오게 해주었습니다..</span></span><br></pre></td></tr></table></figure><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link is-fullwidth"</span>&gt;</span>뒤로가기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><h2 id="todo-urls-py-파일에서-delete-URL-설정"><a href="#todo-urls-py-파일에서-delete-URL-설정" class="headerlink" title="todo/urls.py 파일에서 delete URL 설정"></a>todo/urls.py 파일에서 delete URL 설정</h2><br><p>‘delete/<a href="int:pk">int:pk</a>/‘ 라는 URL 을 가지면, DeleteView 를 호출하고, </p><p>삭제 페이지로 넘어가게 됩니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><p><br>서버를 시작하고, 삭제 테스트를 해봅니다. </p><br><p>투두 리스트 페이지에서 삭제 진행 </p><br><img src="/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image1.png" class=""><br><p>삭제 버튼을 누르면, 아래 컨펌 페이지가 뜨고, 여기서 한번 더 삭제를 누르면 객체가 삭제 완료 됩니다. </p><br><img src="/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image2.png" class=""><br><p>삭제 버튼을 누르면, 투두리스트 삭제가 진행 되는것을 확인 하였습니다만. <br></p><p>디테일 페이지에서 삭제 동작을 구현하지 못한것이 아쉽습니다. <br>클래스 베이스 뷰에 있는 DeleteView 를 더 많이 경험해 봐야 알것 같습니다. </p><p><br><br></p><p><strong>만약, DeleteView 를 사용하지 않고, 함수형으로 이 기능을 구현하고 싶다면,</strong> </p><hr><p><br>views.py 에 아래와 같은 함수를 작성하고, 적절히 URL 을 연결하여 사용하면 됩니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># views.py </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_todo</span><span class="params">(request, pk)</span>:</span></span><br><span class="line">    t = TodoList.objects.get(pk=pk)</span><br><span class="line">    t.delete() </span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">'/'</span>)</span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># todo/urls.py </span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView, UpdateView, TodoCreate</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> delete_todo</span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">    path(<span class="string">'delete_todo/&lt;int:pk&gt;/'</span>, delete_todo, name=<span class="string">"delete_todo"</span>),</span><br><span class="line">    path(<span class="string">'update/&lt;int:pk&gt;/'</span>, UpdateView.as_view(), name=<span class="string">'todolist_update'</span>),</span><br><span class="line">    path(<span class="string">'create/'</span>, TodoCreate, name=<span class="string">'todolist_create'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br>다만, 이렇게 구현 하면, DeleteView 를 사용했을때랑은 다르게, </p><p>Confirm page 가 나오지 않고. 바로 삭제가 됩니다. <br></p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 11편 - 디테일 페이지에 이미지와 파일 표시</title>
      <link>http://djangojeng-e.github.io/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/</link>
      <guid>http://djangojeng-e.github.io/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/</guid>
      <pubDate>Tue, 26 May 2020 10:30:31 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;디테일-페이지에-이미지와-파일-표시&quot;&gt;&lt;a href=&quot;#디테일-페이지에-이미지와-파일-표시&quot; class=&quot;headerlink&quot; title=&quot;디테일 페이지에 이미지와 파일 표시&quot;&gt;&lt;/a&gt;디테일 페이지에 이미지와 파일 표시&lt;/h2&gt;&lt;br&gt;

&lt;h2 id=&quot;MEDIA-경로-설정&quot;&gt;&lt;a href=&quot;#MEDIA-경로-설정&quot; class=&quot;headerlink&quot; title=&quot;MEDIA 경로 설정&quot;&gt;&lt;/a&gt;MEDIA 경로 설정&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;p&gt;개발 단계에서 MEDIA 파일을 업로드 해줄 MEDIA 경로를 설정해 주어야 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;confit/settings.py 파일로 가서, 아래와 같이 MEDIA 경로를 설정해 줍니다. &lt;/p&gt;
&lt;br&gt;

&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# MEDIA_ROOT 설정 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 사용자가 업로드하는 미디어 정적 파일들의 기본 경로 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MEDIA_ROOT = os.path.join(BASE_DIR, &lt;span class=&quot;string&quot;&gt;&#39;.media&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MEDIA_URL = &lt;span class=&quot;string&quot;&gt;&#39;/media/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;br&gt;

&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="디테일-페이지에-이미지와-파일-표시"><a href="#디테일-페이지에-이미지와-파일-표시" class="headerlink" title="디테일 페이지에 이미지와 파일 표시"></a>디테일 페이지에 이미지와 파일 표시</h2><br><h2 id="MEDIA-경로-설정"><a href="#MEDIA-경로-설정" class="headerlink" title="MEDIA 경로 설정"></a>MEDIA 경로 설정</h2><br><br><p>개발 단계에서 MEDIA 파일을 업로드 해줄 MEDIA 경로를 설정해 주어야 합니다. </p><p><br>confit/settings.py 파일로 가서, 아래와 같이 MEDIA 경로를 설정해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MEDIA_ROOT 설정 </span></span><br><span class="line"><span class="comment"># 사용자가 업로드하는 미디어 정적 파일들의 기본 경로 </span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'.media'</span>)</span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br></pre></td></tr></table></figure><br><br><a id="more"></a><h2 id="image-와-file-URL-을-위한-쿼리셋-연습"><a href="#image-와-file-URL-을-위한-쿼리셋-연습" class="headerlink" title="image 와 file URL 을 위한 쿼리셋 연습"></a>image 와 file URL 을 위한 쿼리셋 연습</h2><br><p>쿼리셋을 연습하기 위해서</p><p><br>두개의 이미지 파일과, 두개의 파일을 가지고 있는 투두리스트 하나를 어드민에서 생성해 주었습니다. </p><p><br>image 의 URL을 얻기위해서, Shell_plus 에서 연습한 내용은 아래와 같습니다. </p><br><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">In [1]: t = TodoList.objects.get(pk=3)   </span><br><span class="line">In [2]: images = TodoList_images.objects.filter(todo=t) </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> images 에, 해당 todo에 관련된 TodoList_images images 들을 담고, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 이를 순회하면서, 각 image 가 어떤 속성이 있는지 프린트 해봅니다. </span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">In [3]: for image in images: </span><br><span class="line">   ...:     print(dir(image))    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 각 image 마다, image 라는 속성이 존재 하는것을 확인 할수 있습니다 </span></span><br><span class="line">In [4]: for image in images: </span><br><span class="line">   ...:     print(dir(image.image)) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> image.image 에는 url 속성이 있어서, image.image.url 을 출력하면, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 각 이미지들의 url 을 얻을수 있습니다. </span></span><br><span class="line"></span><br><span class="line">In [6]: for image in images: </span><br><span class="line">   ...:     print(image.image.url)</span><br><span class="line">/media/todo/images/2020/05/todolist_logo.jpg</span><br><span class="line">/media/todo/images/2020/05/main.jpg</span><br></pre></td></tr></table></figure><br><br><h2 id="이미지-URL-적용하기"><a href="#이미지-URL-적용하기" class="headerlink" title="이미지 URL 적용하기"></a>이미지 URL 적용하기</h2><br><p>이를 잘 활용하여, templates/todo/todo_list.html 파일에 적용해봅니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">       남은 일수 : </span><span class="template-variable">&#123;&#123; todolist.remaining_days &#125;&#125;</span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">       관련 이미지 : </span></span><br><span class="line"><span class="xml">       </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> image <span class="keyword">in</span> todolist.todolist_images_set.all %&#125;</span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; image.image.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">height</span>=<span class="string">"350px"</span> <span class="attr">alt</span>=<span class="string">"reference_image"</span>&gt;</span></span></span><br><span class="line"><span class="xml">       </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><p>이렇게 까지 작업을 하고, 다시 투두 리스트의 디테일을 확인해보면, <br>이미지가 화면에 나올것이라고 생각하고 확인해 보면, 이미지가 화면에 표시되지 않는것을 확인 할수 있습니다. </p><br><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image1.png" class=""><br><p>브라우저를 열어서 요소 검사를 해보면, 아래와 같이 HTML 은 잘 작성이 되어 있는데, </p><p><br>이미지 표시가 안됩니다. </p><br><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image2.png" class=""><br><h2 id="URL-patterns-에-MEDIA-URL-추가"><a href="#URL-patterns-에-MEDIA-URL-추가" class="headerlink" title="URL patterns 에 MEDIA_URL 추가"></a>URL patterns 에 MEDIA_URL 추가</h2><br><p>이 문제를 해결하기 위해서는, </p><p><br>config/urls.py 파일을 수정해 주어야 합니다. <br>기존 urlpatterns 에, MEDIA_URL 그리고, 루트를 설정해 주어야 합니다. <br><br></p><h3 id="config-urls-py-파일-수정"><a href="#config-urls-py-파일-수정" class="headerlink" title="config/urls.py 파일 수정"></a>config/urls.py 파일 수정</h3><p><br><br></p><ol><li>from django.conf import settings </li><li>from django.conf.urls.static import static </li></ol><p><br><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static </span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.stie.urls),</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">urlpatterns += static(</span><br><span class="line">prefix=settings.MEDIA_URL, </span><br><span class="line">    document_root=settings.MEDIA_ROOT, </span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><br><br></p><blockquote><p>위와 같이 수정을 해주었다면, </p><p>브라우저에서 한번 확인 해 봅니다. 투두리스트의 디테일을 확인하면, </p><p>해당 투두리스트의 관련 이미지가 화면에 표시되는것을 확인할수 있습니다. </p></blockquote><br><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image3.png" class=""><p><br><br></p><h2 id="파일-정보도-표시해주기"><a href="#파일-정보도-표시해주기" class="headerlink" title="파일 정보도 표시해주기"></a>파일 정보도 표시해주기</h2><br><p>매우매우 비슷한 방식으로, </p><p><br>파일 정보도 디테일 페이지에 표시해줄수 있습니다.<br><br></p><p>일단, templates/todo/todolist_detail.html 파일에, 파일정보 부분을 아래와 같이 고쳐줍니다.<br><br></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">          관련 이미지 : </span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> image <span class="keyword">in</span> todolist.todolist_images_set.all %&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; image.image.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">height</span>=<span class="string">"350px"</span> <span class="attr">alt</span>=<span class="string">"reference_image"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">          관련 파일 : <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> file <span class="keyword">in</span> todolist.todolist_files_set.all %&#125;</span></span><br><span class="line"><span class="xml">          </span><span class="template-variable">&#123;&#123; file.files.url &#125;&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; file.files.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>(파일보기)<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br></pre></td></tr></table></figure><br><p>파일과 이미지를 표시하는 templates/todo/todolist_detail.html 을 위와 같이 수정해 주었다면, <br></p><p>브라우저로 어떻게 표시되는지 확인하러 갑니다. <br><br></p><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image4.png" class=""><br><p>관련 파일이라고 하는 항목에, 파일 주소가 표시되고, <br>파일보기 링크가 표시되는것을 확인 할수 있습니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 10편 - 리스트 더보기 (디테일) 기능 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/25/TodoList-10%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B3%B4%EA%B8%B0-%EB%94%94%ED%85%8C%EC%9D%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/25/TodoList-10%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B3%B4%EA%B8%B0-%EB%94%94%ED%85%8C%EC%9D%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Mon, 25 May 2020 00:14:22 GMT</pubDate>
      <description>
      
        &lt;br&gt;

&lt;p&gt;하나의 TodoList 는, 아래의 필드들을 가지고 있습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Field&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;비고&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;할일의 제목&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;할일에 대한 설명&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date_created&lt;/td&gt;
&lt;td&gt;생성 날짜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date_deadline&lt;/td&gt;
&lt;td&gt;데드라인 날짜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TodoList_images&lt;/td&gt;
&lt;td&gt;외래키로, 관련된 이미지파일들을 보유&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TodoList_files&lt;/td&gt;
&lt;td&gt;외래키로, 관련된 파일들을 보유&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;리스트만 보여주는 페이지에서는, &lt;/p&gt;
&lt;p&gt;간략하게만 보여주기 때문에, 관련 이미지와 파일들을 보여주고 있지 않지만, &lt;/p&gt;
&lt;p&gt;더보기 버튼을 눌러서, 디테일을 보여줄때에는, 관련 이미지와 파일도 보여져야 될것 같습니다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<br><p>하나의 TodoList 는, 아래의 필드들을 가지고 있습니다. </p><p><br><br></p><table><thead><tr><th><strong>Field</strong></th><th><strong>비고</strong></th></tr></thead><tbody><tr><td>name</td><td>할일의 제목</td></tr><tr><td>description</td><td>할일에 대한 설명</td></tr><tr><td>date_created</td><td>생성 날짜</td></tr><tr><td>date_deadline</td><td>데드라인 날짜</td></tr><tr><td>TodoList_images</td><td>외래키로, 관련된 이미지파일들을 보유</td></tr><tr><td>TodoList_files</td><td>외래키로, 관련된 파일들을 보유</td></tr></tbody></table><br><blockquote><p>리스트만 보여주는 페이지에서는, </p><p>간략하게만 보여주기 때문에, 관련 이미지와 파일들을 보여주고 있지 않지만, </p><p>더보기 버튼을 눌러서, 디테일을 보여줄때에는, 관련 이미지와 파일도 보여져야 될것 같습니다. </p></blockquote><br><a id="more"></a><br><p>이를 진행하기 위해서는, 아래와 같은 순서를 거쳐야 합니다. </p><br><ol><li><p>templates/todo/todolist_detail.html 파일을 생성후 작성 </p></li><li><p>todo/views.py 파일에 detailview  를 추가 </p></li><li><p>todo/urls.py 파일에서 detailview 를 호출할 url 설정 </p></li><li><p>templates/todo/todolist_list.html 에서 todollist_detail 로 가는 URL 링크 추가 </p></li></ol><br><br><h2 id="templates-todo-todolist-detail-html"><a href="#templates-todo-todolist-detail-html" class="headerlink" title="templates/todo/todolist_detail.html"></a>templates/todo/todolist_detail.html</h2><br><br><p>templates/todo/todolist_detail.html 파일을 생성 후 아래와 같이 작성합니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 정보</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card column"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-header-title"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            할일 : </span><span class="template-variable">&#123;&#123; todolist.name &#125;&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-header-icon"</span> <span class="attr">aria-label</span>=<span class="string">"more options"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-angle-down"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            해야 할일 : </span><span class="template-variable">&#123;&#123; todolist.description &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            생성 날짜 : </span><span class="template-variable">&#123;&#123; todolist.date_created &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">            데드 라인 : </span><span class="template-variable">&#123;&#123; todolist.date_deadline &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            남은 일수 : </span><span class="template-variable">&#123;&#123; todolist.remaining_days &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            관련 이미지 : </span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> image <span class="keyword">in</span> todolist_images_set.all %&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; image &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            관련 파일 : </span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> file <span class="keyword">in</span> todolist_files_set.all %&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><span class="template-variable">&#123;&#123; file &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link is-fullwidth"</span>&gt;</span>뒤로가기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><br><br><h2 id="todo-views-py-파일에-DetailView-추가"><a href="#todo-views-py-파일에-DetailView-추가" class="headerlink" title="todo/views.py 파일에 DetailView 추가"></a>todo/views.py 파일에 DetailView 추가</h2><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render </span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoList_images </span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic </span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here. </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(generic.ListView)</span>:</span></span><br><span class="line">    context_object_name = <span class="string">'to_do_list'</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all() </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailView</span><span class="params">(generic.DetailView)</span>:</span></span><br><span class="line">    model = TodoList </span><br><span class="line">    contxt_object_name = <span class="string">'todolist'</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all()</span><br></pre></td></tr></table></figure><br><br><h2 id="DetailView-를-호출할-URL-설정"><a href="#DetailView-를-호출할-URL-설정" class="headerlink" title="DetailView 를 호출할 URL 설정"></a>DetailView 를 호출할 URL 설정</h2><br><br><p>todo/urls.py 파일을 아래와 같이 DetailView 를 호출하는 URL 을 등록해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin </span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path </span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView </span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'tdodo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="todolist-detail-로-가는-URL-링크를-추가"><a href="#todolist-detail-로-가는-URL-링크를-추가" class="headerlink" title="todolist_detail 로 가는 URL 링크를 추가"></a>todolist_detail 로 가는 URL 링크를 추가</h2><br><p>templates/todo/todolist_list.html 에서 todolist_detail 로 가는 링크를 추가 해줍니다. </p><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail/&#123;&#123; todo.id &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>투두리스트의 디테일 보기 구현이 간단하게 되었습니다. </p><p><br>순서대로 하면 잘 구현 되는것을 확인할수 있었습니다. 하지만, 문제가 하나 발생합니다. </p><p><br>투두리스트에 이미지와 파일이 있어도, 이것이 디테일 페이지에서 표시가 되지 않습니다. </p><p><br>이를 위해서는, MEDIA 경로를 설정하고, URL 패턴에 MEDIA_URL 을 추가해주어야 합니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/25/TodoList-10%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B3%B4%EA%B8%B0-%EB%94%94%ED%85%8C%EC%9D%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 9편 - 리스트페이지 카드형태로 꾸미기</title>
      <link>http://djangojeng-e.github.io/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/</guid>
      <pubDate>Sat, 23 May 2020 20:14:08 GMT</pubDate>
      <description>
      
        &lt;img src=&quot;/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;



&lt;br&gt;

&lt;p&gt;템플릿 작업을 마친 메인 페이지 하단에 보면, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;할일 목록들이 나오긴 하는데, 이쁘지가 않습니다. 이것을, BULMA CSS 를 사용하여, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;카드형태로 나오게 할겁니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/image1.png" class=""><br><p>템플릿 작업을 마친 메인 페이지 하단에 보면, </p><p><br>할일 목록들이 나오긴 하는데, 이쁘지가 않습니다. 이것을, BULMA CSS 를 사용하여, </p><p><br>카드형태로 나오게 할겁니다. </p><br><a id="more"></a><br><h2 id="todolist-list-html-파일-수정하기"><a href="#todolist-list-html-파일-수정하기" class="headerlink" title="todolist_list.html 파일 수정하기"></a>todolist_list.html 파일 수정하기</h2><br><p>templates/todo/todolist_list.html 파일을 아래와 같이 수정해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 목록</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card column"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-header-title"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        할일 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-header-icon"</span> <span class="attr">aria-label</span>=<span class="string">"more options"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-angle-down"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        해야 할일 : </span><span class="template-variable">&#123;&#123; todo.description|<span class="name">truncatechars</span>:30 &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        데드 라인 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><br><p>파일을 수정하고, 서버를 시작한다음, </p><p><br><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a> 으로 접속해 보면, 아래와 같이 투두 리스트 정보가 카드 형태로 나옵니다. </p><br><img src="/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/image2.png" class=""> <br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>디자인이 많이 아쉽습니다..<br></p><p>역시 부트스트랩이 컴포넌트도 더 많은거 같고, 예제도 더 많아서 사용하기 편리한거 같습니다. <br><br></p><p>Bulma 는 예제도, 설명도, CSS 사이즈 자체도 좀 빈약한 감이 있습니다. </p> <br><p>더보기, 수정하기, 삭제하기 버튼을 추가하게 되어서. 매우 일이 커지게 된것 같습니다만.. </p><p>진행 하면서 알아가는것이 클테니.. 계속 진행 합니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 8편 - 프로젝트 Templates 설정</title>
      <link>http://djangojeng-e.github.io/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/</link>
      <guid>http://djangojeng-e.github.io/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/</guid>
      <pubDate>Sat, 23 May 2020 02:29:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;이전 포스팅에서, &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;BULMA CSS를 프로젝트에서 사용하기 위한 준비를 하였습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;static 폴더안에 Bulma 폴더가 생성되고, 그안에 CSS 폴더안에, style.css 파일이 생성되었습니다. &lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;p&gt;이제 이 CSS 를 적용한 기본 템플릿을 생성하고, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이 기본 템플릿을 다른 페이지들이 상속받아 사용하게 해봅니다. &lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&quot;Templates-폴더-생성&quot;&gt;&lt;a href=&quot;#Templates-폴더-생성&quot; class=&quot;headerlink&quot; title=&quot;Templates 폴더 생성&quot;&gt;&lt;/a&gt;Templates 폴더 생성&lt;/h2&gt;&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>이전 포스팅에서, </p><br><p>BULMA CSS를 프로젝트에서 사용하기 위한 준비를 하였습니다. </p><p><br>static 폴더안에 Bulma 폴더가 생성되고, 그안에 CSS 폴더안에, style.css 파일이 생성되었습니다. </p><br><br><p>이제 이 CSS 를 적용한 기본 템플릿을 생성하고, </p><p><br>이 기본 템플릿을 다른 페이지들이 상속받아 사용하게 해봅니다. </p><br><h2 id="Templates-폴더-생성"><a href="#Templates-폴더-생성" class="headerlink" title="Templates 폴더 생성"></a>Templates 폴더 생성</h2><br><a id="more"></a><br><p>프로젝트 폴더안에, templates 폴더를 생성합니다.</p><p><br>그리고, 그 폴더안에, base.html 파일을 생성합니다. 아래 트리 구조 형태로 생성합니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   ├── asgi.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── db.sqlite3</span><br><span class="line">├── manage.py</span><br><span class="line">├── requirements.txt</span><br><span class="line">├── static</span><br><span class="line">│   └── bulma</span><br><span class="line">│       ├── css</span><br><span class="line">│       │   ├── style.css</span><br><span class="line">│       │   ├── style.css.map</span><br><span class="line">│       │   └── style.min.css</span><br><span class="line">│       └── sass</span><br><span class="line">│           ├── package.json</span><br><span class="line">│           ├── package-lock.json</span><br><span class="line">│           └── style.sass</span><br><span class="line">├── templates</span><br><span class="line">│   └── base.html</span><br><span class="line">└── todo</span><br><span class="line">    ├── admin.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    │   ├── 0001_initial.py</span><br><span class="line">    │   ├── 0002_auto_20200511_1242.py</span><br><span class="line">    │   ├── __init__.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── templates</span><br><span class="line">    │   └── todo</span><br><span class="line">    │       └── todo-lists.html</span><br><span class="line">    ├── tests.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── views.py</span><br></pre></td></tr></table></figure><br><br><h2 id="생성된-templates-폴더-설정하기"><a href="#생성된-templates-폴더-설정하기" class="headerlink" title="생성된 templates 폴더 설정하기"></a>생성된 templates 폴더 설정하기</h2><br><p>생성된 templates 폴더를, </p><p><br>프로젝트의 templates 폴더로 사용하기 위해서, <br>config/settings.py 파일에 templates  폴더를 지정해주어야 합니다. </p><br><p>settings.py 파일안에, TEMPLATES 부분에, DIR 값을 아래와 같이 설정해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># settings.py</span></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)], <span class="comment"># Templates folder 설정 </span></span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="base-html-파일-꾸미기"><a href="#base-html-파일-꾸미기" class="headerlink" title="base.html 파일 꾸미기"></a>base.html 파일 꾸미기</h2><br><p>templates/base.html 파일은, 다른 템플릿 페이지들이 상속받아서 사용할 페이지 입니다. <br></p><p>base.html 파일을 아래와 같이 생성해 줍니다. 이 파일은 BULMA CSS 프레임워크가 적용되어 있고, <br>이 파일을 상속받는 다른 페이지들도, BULMA CSS 적용이 될것입니다. </p><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><p>위와 같은 구조를 만들었으면, <br></p><p>이제 BULMA CSS 프레임워크를 이용하여, 기본 레이아웃 구조를 만들어 줍니다. <br></p><p><br><br></p><p>첫번째로, 네비게이션 바를 만들어 놓을겁니다. <br></p><p>이 네비게이션 바를 base.html 파일에 만들어놓고, <br>다른 페이지들이 이 base.html 파일을 확장하여 사용하면, <br></p><p>base.html 파일에 있는 네비게이션 바가, 기본으로 다른 페이지들에도 보이게 될것입니다. <br></p><p><br><br></p><p>Bulma CSS Navbar  를 적용하기 위해서, 아래 사이트를 참조합니다. </p><br><p><a href="https://bulma.io/documentation/components/navbar/" target="_blank" rel="noopener">https://bulma.io/documentation/components/navbar/</a></p><br><p>이곳에 나와 있는 Basic Navbar 를 조금 수정하여, 사용할것입니다. <br></p><p>위에 작성한, base.html 파일에, 이 Bulma Navbar 를 아래와 같이 수정하여 붙여 놓습니다. </p><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"has-navbar-fixed-top"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List - </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar is-fixed-top"</span> <span class="attr">role</span>=<span class="string">"navigation"</span> <span class="attr">aria-label</span>=<span class="string">"main navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'images/todo_list.jpg' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"112"</span> <span class="attr">height</span>=<span class="string">"28"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-burger burger"</span> <span class="attr">aria-label</span>=<span class="string">"menu"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">data-target</span>=<span class="string">"navbarBasicExample"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbarBasicExample"</span> <span class="attr">class</span>=<span class="string">"navbar-menu"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          Home</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          To Do Lists</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item has-dropdown is-hoverable"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-link"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            More</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-dropdown"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              About</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Jobs</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Contact</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">"navbar-divider"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Report an issue</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Log in</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'images/main.jpg' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml">   </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="todolist-list-html-을-메인페이지로-사용"><a href="#todolist-list-html-을-메인페이지로-사용" class="headerlink" title="todolist_list.html 을 메인페이지로 사용"></a>todolist_list.html 을 메인페이지로 사용</h2><br><p>base.html 파일을 확장하는, templates/todollist_list.html 파일을 만들고, <br></p><p>여기에 Todo list 들이 나오게 할겁니다. </p><p><br><br></p><ol><li><p>templates/todolist_list.html  파일 생성</p></li><li><p>todo/views.py 파일 수정 </p></li><li><p>todo/urls.py 파일 수정 </p></li></ol><br><h3 id="templates-todolist-list-html-파일-생성후-작성"><a href="#templates-todolist-list-html-파일-생성후-작성" class="headerlink" title="templates/todolist_list.html 파일 생성후 작성"></a>templates/todolist_list.html 파일 생성후 작성</h3><p><br><br></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 목록</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>할일 제목 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>데드라인 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="todo-views-py-파일-수정"><a href="#todo-views-py-파일-수정" class="headerlink" title="todo/views.py 파일 수정"></a>todo/views.py 파일 수정</h3><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoList_images</span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(generic.ListView)</span>:</span></span><br><span class="line">    context_object_name = <span class="string">'to_do_list'</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all()</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="config-urls-py-파일-수정"><a href="#config-urls-py-파일-수정" class="headerlink" title="config/urls.py 파일 수정"></a>config/urls.py 파일 수정</h3><p><br><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><p>위와 같은 작업을 마치고 나서, </p><br><blockquote><p>서버를 시작하고 </p><p><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a> 으로 접속하면, </p><p>아래와 같은 화면이 나옵니다. </p></blockquote><br><img src="/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/image1.png" class=""><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><p><br><br></p><p>아직 익숙치 않아서, 여러가지로 꼬이고 꼬였지만, 레슨이 하나 있었습니다.<br></p><br><p>View 에서 ListView 클래스를 사용하는데. <br></p><p>예네는 templates 을, templates/todolist_list.html 파일에서 찾습니다;;; <br><br>이 파일이 없으면, 렌더가 안되서. </p><p>이 파일을 생성하고 메인 url 로 설정해 주었습니다. </p><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 7편 - BULMA CSS 적용하기</title>
      <link>http://djangojeng-e.github.io/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 22 May 2020 06:32:33 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Bulma-CSS-Framework-적용&quot;&gt;&lt;a href=&quot;#Bulma-CSS-Framework-적용&quot; class=&quot;headerlink&quot; title=&quot;Bulma CSS Framework 적용&quot;&gt;&lt;/a&gt;Bulma CSS Framework 적용&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;img src=&quot;/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;

&lt;br&gt;

&lt;br&gt;

&lt;p&gt;부트스트랩과 비슷한 CSS Framework 의 하나인 BULMA 를, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이번 투두 리스트 미니 프로젝트에 적용해 보려 합니다.&lt;br&gt; 처음 접해보는 CSS 프레임워크지만, 시도한번 해보려 합니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Bulma-CSS-Framework-적용"><a href="#Bulma-CSS-Framework-적용" class="headerlink" title="Bulma CSS Framework 적용"></a>Bulma CSS Framework 적용</h2><br><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png" class=""><br><br><p>부트스트랩과 비슷한 CSS Framework 의 하나인 BULMA 를, </p><p><br>이번 투두 리스트 미니 프로젝트에 적용해 보려 합니다.<br> 처음 접해보는 CSS 프레임워크지만, 시도한번 해보려 합니다. </p><br><a id="more"></a><br><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><br><p>CSS 를 프로젝트에 적용하기 위한 참고 사이트는 아래와 같습니다.</p><br><ol><li>django-bulma 패키지  <a href="https://github.com/timonweb/django-bulma" target="_blank" rel="noopener">https://github.com/timonweb/django-bulma</a></li><li>bulma 공식 페이지 <a href="https://bulma.io" target="_blank" rel="noopener">https://bulma.io</a> </li></ol><br><br><h2 id="django-bulma-패키지-설치"><a href="#django-bulma-패키지-설치" class="headerlink" title="django-bulma 패키지 설치"></a>django-bulma 패키지 설치</h2><br><br><p>아래 명령어를 실행하여, bulma  프레임워크를 장고 프로젝트에 설치해 줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-bulma</span><br></pre></td></tr></table></figure><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image2.png" class=""><br><h2 id="settings-py-파일-INSTALLED-APPS-등록"><a href="#settings-py-파일-INSTALLED-APPS-등록" class="headerlink" title="settings.py 파일 INSTALLED_APPS 등록"></a>settings.py 파일 INSTALLED_APPS 등록</h2><br><br><p>config/settings.py 파일안, INSTALLED_APPS 에 아래와 같이,</p><p><br>bulma 를 등록해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="string">'todo'</span>,</span><br><span class="line">    <span class="string">'django_extensions'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Bulma CSS Framework </span></span><br><span class="line">    <span class="string">'bulma'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="Bulma-프레임워크를-사용할-static-폴더"><a href="#Bulma-프레임워크를-사용할-static-폴더" class="headerlink" title="Bulma 프레임워크를 사용할 static 폴더"></a>Bulma 프레임워크를 사용할 static 폴더</h2><br><p>프레임워크 파일들을 가지고 있을, 정적파일 폴더를 생성하고 설정해 줍니다.  </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   ├── asgi.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── db.sqlite3</span><br><span class="line">├── manage.py</span><br><span class="line">├── requirements.txt</span><br><span class="line">├── static            <span class="comment"># 프로젝트 폴더에, static 폴더를 생성 (manage.py와 같은 위치)</span></span><br><span class="line">└── todo</span><br><span class="line">    ├── admin.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── templates</span><br><span class="line">    │   └── todo</span><br><span class="line">    │       └── todo-lists.html</span><br><span class="line">    ├── tests.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── views.py</span><br></pre></td></tr></table></figure><p><br><br></p><blockquote><p>static 폴더 생성을 완료 하였으면, </p><p>settings.py 파일을 열고, STATICFILES_DIRS = [] 을 설정해주어야 합니다.</p></blockquote><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/3.0/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, <span class="string">'static'</span>)]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="Bulma-프레임워크-복사하기"><a href="#Bulma-프레임워크-복사하기" class="headerlink" title="Bulma 프레임워크 복사하기"></a>Bulma 프레임워크 복사하기</h2><p><br><br></p><p>static 폴더에, 수동으로 BULMA 프레임워크 파일들을 복사해주어도 괜찮지만, </p><p><br>아래 명령어를 실행해서, bulma css 파일들을 static 폴더로 복사해 올수 있습니다.<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py copy_bulma_static_into_project</span><br></pre></td></tr></table></figure><br><p>명령어를 실행하면,<br>static 폴더안에, bulma 폴더가 생기고, 그 안에 css 파일들이 들어 있는것을 확인 할수 있습니다.<br><br></p><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image3.png" class=""><p><br><br></p><h2 id="bulma-CSS-를-템플릿에-적용하기"><a href="#bulma-CSS-를-템플릿에-적용하기" class="headerlink" title="bulma CSS 를 템플릿에 적용하기"></a>bulma CSS 를 템플릿에 적용하기</h2><br><p>CSS 파일들을 프로젝트에 가져왔으면, 이제 적용해 보아야 겟죠? </p><br><h3 id="base-html-파일-생성하기"><a href="#base-html-파일-생성하기" class="headerlink" title="base.html 파일 생성하기"></a>base.html 파일 생성하기</h3><br><p>프로젝트 전반에 걸쳐서, 이 프레임워크를 적용시킬수 있는 base.html 파일을</p><p><br>templates/base.html 경로에 생성을 합니다<br><br></p><p>이 base.html 파일에, static 폴더에 있는 bulma css 파일들을 적용하고. <br>이 base.html 파일이 다른 페이지들에 확장되서 쓰여질겁니다.</p><br><p>templates/base.html 파일을 아래와 같이 생성하고 작성해줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"has-navbar-fixed-top"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List - </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> contents %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><h3 id="todolist-템플릿을-수정"><a href="#todolist-템플릿을-수정" class="headerlink" title="todolist 템플릿을 수정"></a>todolist 템플릿을 수정</h3><p><br>이전 포스팅에 만들어 놓은 투두리스트 - 리스트페이지인 <br></p><p>todo/templates/todo/todo-lists.html 파일 상단에 아래와 같은 내용을 추가해주고, 수정해 줍니다<br><br></p><p>base.html 파일을 상속 받습니다.</p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">내가 할일 뭐지?</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>할일 제목 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>데드라인 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="Bulma-프레임워크-적용-확인"><a href="#Bulma-프레임워크-적용-확인" class="headerlink" title="Bulma 프레임워크 적용 확인"></a>Bulma 프레임워크 적용 확인</h2><br><p>투두리스트를 리스트 해주는 페이지에 다시 접속해서, </p><p><br>CSS 프레임워크가 잘 적용 되었을지 확인 해봅니다 <br><br></p><p>적용전, </p><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image4.png" class=""><p><br><br></p><p>적용후, </p><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image5.png" class=""><p><br><br></p><p>해당 이미지는, 기본 템플릿만 적용한 이미지이지만, <br>어쨋든, 글씨꼴이나 색깔이 느낌이 전반적으로 바뀌었다면, 잘 적용 된것입니다. </p><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
