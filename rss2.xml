<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>장고쟁이</title>
    <link>http://djangojeng-e.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>장고쟁이의 Python, Django 공부 노트</description>
    <pubDate>Wed, 03 Jun 2020 07:23:52 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>TodoList 18편 - 미니프로젝트 중간 정리</title>
      <link>http://djangojeng-e.github.io/2020/06/03/TodoList-18%ED%8E%B8-%EB%AF%B8%EB%8B%88%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC/</link>
      <guid>http://djangojeng-e.github.io/2020/06/03/TodoList-18%ED%8E%B8-%EB%AF%B8%EB%8B%88%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC/</guid>
      <pubDate>Wed, 03 Jun 2020 07:19:37 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;프로젝트-중간정리&quot;&gt;&lt;a href=&quot;#프로젝트-중간정리&quot; class=&quot;headerlink&quot; title=&quot;프로젝트 중간정리&quot;&gt;&lt;/a&gt;프로젝트 중간정리&lt;/h2&gt;&lt;br&gt;



&lt;p&gt;매우 간단한,&lt;br&gt;&lt;/p&gt;
&lt;br&gt;



&lt;p&gt;그리고 빈약한 미니프로젝트 진행 상황을 중간 정리 합니다. &lt;/p&gt;
&lt;br&gt;



&lt;br&gt;



&lt;p&gt;&lt;strong&gt;아쉬운 점&lt;/strong&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;가장 아쉬운점 :&lt;/strong&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;forms.py 를 사용하여 폼을 그리고, 폼에서 넘어오는 데이터 처리 등. 전반적으로 폼이 문제인것 같음..;;&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;br&gt;



&lt;p&gt;1) 자바스크립트를 몰라서 동적으로 브라우저에서 값을 바꾸거나, 좀더 다이나믹하게 만들수가 없었다. &lt;/p&gt;
&lt;p&gt;2) 디자인 - Bulma CSS 를 사용하여, 어느정도 생으로 프론트 작업 하는것보단 편했지만, 여전히 무언가 아쉽다 &lt;/p&gt;
&lt;p&gt;3) 클래스 기반 뷰의 사용이 아직 서툴다 &lt;/p&gt;
&lt;p&gt;4) allauth 를 사용해서 로그인 로그아웃 그리고 네이버 로그인 기능까지 구현 하긴 했지만. 내부 동작을 파악하고 한것이 아니다. &lt;/p&gt;
&lt;p&gt;5) models.py 파일을 보면, 무언가 효율적으로 쓴것 같지가 않다 &lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="프로젝트-중간정리"><a href="#프로젝트-중간정리" class="headerlink" title="프로젝트 중간정리"></a>프로젝트 중간정리</h2><br><p>매우 간단한,<br></p><br><p>그리고 빈약한 미니프로젝트 진행 상황을 중간 정리 합니다. </p><br><br><p><strong>아쉬운 점</strong> </p><hr><p><strong>가장 아쉬운점 :</strong> </p><hr><p><strong>forms.py 를 사용하여 폼을 그리고, 폼에서 넘어오는 데이터 처리 등. 전반적으로 폼이 문제인것 같음..;;</strong>  </p><hr><hr><br><p>1) 자바스크립트를 몰라서 동적으로 브라우저에서 값을 바꾸거나, 좀더 다이나믹하게 만들수가 없었다. </p><p>2) 디자인 - Bulma CSS 를 사용하여, 어느정도 생으로 프론트 작업 하는것보단 편했지만, 여전히 무언가 아쉽다 </p><p>3) 클래스 기반 뷰의 사용이 아직 서툴다 </p><p>4) allauth 를 사용해서 로그인 로그아웃 그리고 네이버 로그인 기능까지 구현 하긴 했지만. 내부 동작을 파악하고 한것이 아니다. </p><p>5) models.py 파일을 보면, 무언가 효율적으로 쓴것 같지가 않다 </p><a id="more"></a><br><p><strong>현재까지 좋았던 점</strong>  </p><br><p><strong>가장 좋았던점:</strong> </p><hr><p><strong>어떻게든 꾸역꾸역 하려고 하면서, 문서도 많이 보게 되고, 다른 사람들이 짜놓은 코드 예시도 많이 접할수 있었다.</strong> <br></p><p><strong>참고해서 구현한 기능들이 동작하는것을 볼때, 묘한 성취감과 기쁨을 느낀다.</strong> </p><hr><p>****<br></p><br><p>1) Bulma CSS 를 적용하여, 프론트가 생으로 하는거보단 이쁘게 된것 같다. </p><p>2) Django 패키지 - Django-bulma 와 allauth 를 사용해 보았다. </p><p>3) 간편하게 로그인, 로그아웃, 회원가입 기능을 구현하였다. </p><p>4) 관리자 페이지에 모델을 등록하는 방법에 대해 조금 더 익숙해 졌다. </p><p>5) 여기저기 찾아서, javascript 를 구현해 보았다. </p> <br><hr><br><p>마치며.. </p><p>아주 빈약한 프로젝트지만, 다음 포스팅부터, AWS에 배포를 진행해보려 합니다.</p><p>배포를 진행하기 전에, 중간 정리를 한번 해보았네요.  </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/03/TodoList-18%ED%8E%B8-%EB%AF%B8%EB%8B%88%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 17편 - allauth로 네이버로 로그인 구현</title>
      <link>http://djangojeng-e.github.io/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Tue, 02 Jun 2020 08:28:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;allauth 를 사용하여, 소셜 로그인중 하나인 네이버로 로그인 하기를 구현 하고 싶습니다. &lt;br&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;이를 구현하기 위해서는, 네이버 개발자 센터를 방문하여 &lt;/p&gt;
&lt;p&gt;&lt;br&gt;네이버 아이디로 로그인 API 키를 발급 받아야 합니다.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://developers.naver.com/apps/#/register&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developers.naver.com/apps/#/register&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;

&lt;img src=&quot;/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image1.png&quot; class=&quot;&quot;&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>allauth 를 사용하여, 소셜 로그인중 하나인 네이버로 로그인 하기를 구현 하고 싶습니다. <br></p><br><p>이를 구현하기 위해서는, 네이버 개발자 센터를 방문하여 </p><p><br>네이버 아이디로 로그인 API 키를 발급 받아야 합니다.<br><br></p><p> <a href="https://developers.naver.com/apps/#/register" target="_blank" rel="noopener">https://developers.naver.com/apps/#/register</a></p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image1.png" class=""><p><br><br></p><a id="more"></a><h2 id="네이버-아이디-로그인-API-키-발급"><a href="#네이버-아이디-로그인-API-키-발급" class="headerlink" title="네이버 아이디 로그인 API 키 발급"></a>네이버 아이디 로그인 API 키 발급</h2><p><br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image2.png" class=""><br><br><p>서비스 URL : <a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000</a></p><p>네이버아이디로그인 Callback URL : <a href="http://127.0.0.1:8000/accounts/naver/login/callback/" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/naver/login/callback/</a></p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image3.png" class=""><br><p>등록하기 버튼을 누르면, 앱이 등록 됩니다.<br></p><p>그리고, 클라이언트 ID 와 클라이언트 secret 생성이 됩니다.<br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image4.png" class=""><br><h2 id="INSTALLED-APPS-에-네이버-추가"><a href="#INSTALLED-APPS-에-네이버-추가" class="headerlink" title="INSTALLED_APPS 에 네이버 추가"></a>INSTALLED_APPS 에 네이버 추가</h2><br><p>settings.py 안에, INSTALLED_APPS 에 <br></p><p>소셜로그인 제공자로 네이버를 추가해줍니다. <br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># Allauth를 위한 Apps </span></span><br><span class="line">    <span class="string">'django.contrib.sites'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'allauth'</span>,</span><br><span class="line">    <span class="string">'allauth.account'</span>,</span><br><span class="line">    <span class="string">'allauth.socialaccount'</span>, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># ... 소셜로그인을 할 제공자 리스트를 아래에 포함 </span></span><br><span class="line">    <span class="string">'allauth.socialaccount.providers.naver'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="어드민에서-social-application-모델-추가"><a href="#어드민에서-social-application-모델-추가" class="headerlink" title="어드민에서 social application 모델 추가"></a>어드민에서 social application 모델 추가</h2><p><br><br></p><p>어드민에 접속하여, 소셜 계정 / 소셜 어플리케이션을 추가 해줍니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image5.png" class=""> <p><br><br></p><p>이름은, 아래와 같이 네아로 라고 쓰고,</p><p>클라이언트 아이디와 비밀 키는, 네이버 개발자 센터에서 앱을 등록했을때 발급받은,  <br></p><p>아이디와 키값을 입력합니다. </p><p><br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image6.png" class=""><br><p>그리고, 하단에 있는, 이용 가능한 Sites 에, example.com 을 선택하여, </p><p><br>오른쪽으로 옮겨 줍니다 </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image7.png" class=""><br><p>여기까지 설정을 마쳤으면, 저장 버튼을 눌러줍니다. </p><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>네이버 아이디로 로그인 하기 기능을 위한 기본 세팅을 마쳤습니다. </p><p><br>이제부터 잘 작동하는지 확인해 봅니다. 우선, 서버를 실행하고, 로그인 페이지로 갑니다. </p><p><br>기존 로그인 폼 위에, Naver 라고 텍스트 링크가 생겨난걸 확인 할수 있습니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image8.png" class=""><br><p>naver 텍스트를 클릭하면, 아래와 같이 네이버 로그인 페이지가 뜹니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image9.png" class=""><br><p>네이버 페이지에서 OK 버튼을 누르면, 로그인이 완료 됩니다.<br><br></p><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image10.png" class=""><p><br><br></p><p>다시 로그아웃 하고, 어드민으로 접속해서 소셜 계정 탭을 확인하면,<br></p><p>네이버 로그인을 사용해서 로그인 했던 사용자의 정보가 들어와 있는것을 확인 할수 있습니다. </p><br><img src="/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/image11.png" class=""><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/02/TodoList-17%ED%8E%B8-allauth%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B2%84%EB%A1%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 16편 - allauth를 사용하여 로그인, 로그아웃</title>
      <link>http://djangojeng-e.github.io/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/</link>
      <guid>http://djangojeng-e.github.io/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/</guid>
      <pubDate>Mon, 01 Jun 2020 02:32:02 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;allauth-사용-로그인-로그아웃-구현&quot;&gt;&lt;a href=&quot;#allauth-사용-로그인-로그아웃-구현&quot; class=&quot;headerlink&quot; title=&quot;allauth 사용 로그인, 로그아웃 구현&quot;&gt;&lt;/a&gt;allauth 사용 로그인, 로그아웃 구현&lt;/h2&gt;&lt;p&gt;지난 포스팅에서, allauth 패키지 설치를 완료 하였고, &lt;/p&gt;
&lt;p&gt;패키지를 통하여, 로그인, 로그아웃 기능을 구현 해보려 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;로그인 / 로그아웃을 사용하기 위해서는, allauth 에서 제공하는 로그인 / 로그아웃 URL 들을 알아야 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;allauth 에서, &lt;/p&gt;
&lt;p&gt;로그인 / 로그아웃을 위해 기본으로 제공하는 URL 은 아래와 같습니다 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:8000/accounts/login&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1:8000/accounts/login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1:8000/accounts/logout&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1:8000/accounts/logout&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;

&lt;p&gt;이 URL 들을 사용하여, 미니프로젝트에 적용하는 방법은 아래와 같습니다. &lt;/p&gt;
&lt;br&gt;

&lt;ol&gt;
&lt;li&gt;settings.py 파일에 LOGIN_REDIRECT_URL 설정 &lt;/li&gt;
&lt;li&gt;templates 페이지들에 회원가입 / 로그인 / 로그아웃 링크 추가 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="allauth-사용-로그인-로그아웃-구현"><a href="#allauth-사용-로그인-로그아웃-구현" class="headerlink" title="allauth 사용 로그인, 로그아웃 구현"></a>allauth 사용 로그인, 로그아웃 구현</h2><p>지난 포스팅에서, allauth 패키지 설치를 완료 하였고, </p><p>패키지를 통하여, 로그인, 로그아웃 기능을 구현 해보려 합니다. </p><br><p>로그인 / 로그아웃을 사용하기 위해서는, allauth 에서 제공하는 로그인 / 로그아웃 URL 들을 알아야 합니다. </p><br><blockquote><p>allauth 에서, </p><p>로그인 / 로그아웃을 위해 기본으로 제공하는 URL 은 아래와 같습니다 </p><p><a href="http://127.0.0.1:8000/accounts/login" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/login</a></p><p><a href="http://127.0.0.1:8000/accounts/logout" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/logout</a> </p></blockquote><br><p>이 URL 들을 사용하여, 미니프로젝트에 적용하는 방법은 아래와 같습니다. </p><br><ol><li>settings.py 파일에 LOGIN_REDIRECT_URL 설정 </li><li>templates 페이지들에 회원가입 / 로그인 / 로그아웃 링크 추가 </li></ol><p><br><a id="more"></a></p><h3 id="LOGIN-REDIRECT-URL-설정"><a href="#LOGIN-REDIRECT-URL-설정" class="headerlink" title="LOGIN_REDIRECT_URL 설정"></a>LOGIN_REDIRECT_URL 설정</h3><br><p>settings.py 파일에, LOGIN_REDIRECT_URL 설정을 해 놓아야지만, </p><p><br>회원가입 / 로그인 / 로그아웃 기능이 잘 작동 합니다. </p><br><p>config/settings.py 파일에 아래 한줄을 추가해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Allauth 관련 세팅 </span></span><br><span class="line">LOGIN_REDIRECT_URL = <span class="string">'/'</span></span><br></pre></td></tr></table></figure><br><br><h2 id="템플릿-파일에-회원가입-로그인-로그아웃-링크-추가"><a href="#템플릿-파일에-회원가입-로그인-로그아웃-링크-추가" class="headerlink" title="템플릿 파일에 회원가입, 로그인, 로그아웃 링크 추가"></a>템플릿 파일에 회원가입, 로그인, 로그아웃 링크 추가</h2><br><ul><li>templates/base.html 파일, </li><li>templates/todo/todolist.html 파일 </li><li>templates/todo/update.html  파일 </li></ul><br><p>위 3개의 파일들을 수정해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span></span><br><span class="line"><span class="xml">           </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> user.is_authenticated %&#125;</span></span><br><span class="line"><span class="xml">           # 사용자가 로그인 되어 있으면, 로그아웃 버튼을 화면에 표시 </span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'account_logout' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             Log Out</span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">           </span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span></span><br><span class="line"><span class="xml">           # 그렇지 않다면, 회원가입과 로그아웃 버튼 표시 </span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'account_signup' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'account_login' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">             Log in</span></span><br><span class="line"><span class="xml">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">           </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><p>서버를 시작하고, 메인 페이지로 들어가서, </p><p><br>signup 을 눌러 새로운 사용자를 생성해 봅니다. </p><p><br>CSS 를 따로 적용해야 하겠지만, 그래도 BULMA 스타일로 출력되어 나오긴 합니다. </p><p><br>디테일을 입력하고, 회원가입을 진행해봅니다. </p><br><br><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image1.png" class=""><br><p>회원가입을 완료하면, 자동으로 로그인이 되고, </p><p><br>화면 상단에 로그아웃 버튼이 표시되는것을 볼수 있습니다. </p><br><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image2.png" class=""><br><p>로그아웃 버튼도 눌러보면, 로그아웃 컨펌 페이지가 표시가 되고,</p><p><br>컨펌 페이지에서, 로그아웃 버튼을 누르면, 다시 메인페이지로 이동이 되는데.  </p><p><br><br></p><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image3.png" class=""><br><p>로그인 되어 있는 상태가 아니니까, Sign Up 과 Log in 만 표시되어 나옵니다. </p><p><br><br></p><p>로그인도 한번 진행해 보면, 화면 상단에 로그인 버튼을 눌러서</p><p><br>아래와 같이 아이디와 비밀번호를 화면에 입력하고, 로그인을 진행 해 보면<br><br> <img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image4.png" class=""></p><p><br><br></p><p>아이디와 비밀번호를 입력하면, </p><p><br>메인 페이지로 다시 들어오는데, 화면 상단에 Logout 버튼이 표시가 됩니다. <br><br></p><img src="/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/image5.png" class=""> <p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><p><br><br></p><p>일단, 직접 구현 하는것 보다는, <br></p><p>훨씬 간단하게 회원가입, 로그인, 로그아웃 기능을 구현해 보았습니다.<br>그렇지만, 패키지의 내부 동작을 파악하는것은 아직 다 마친것이 아니라 무엇인가 찝찝하긴 합니다<br><br></p><p>회원가입 / 로그인 / 로그아웃 폼이 좀 맘에 들지 않는다면, allauth 의 템플릿을 수정해 주면 되는데. </p><br><p>이는, 다음 미니 프로젝트때 진행해보려 합니다. <br></p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/06/01/TodoList-16%ED%8E%B8-allauth%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 15편 - allauth 패키지 설치</title>
      <link>http://djangojeng-e.github.io/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/</link>
      <guid>http://djangojeng-e.github.io/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/</guid>
      <pubDate>Fri, 29 May 2020 21:13:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;allauth-패키지-설치&quot;&gt;&lt;a href=&quot;#allauth-패키지-설치&quot; class=&quot;headerlink&quot; title=&quot;allauth 패키지 설치&quot;&gt;&lt;/a&gt;allauth 패키지 설치&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;django 패키지중 하나인, allauth 를 사용하여, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;기본 로그인, 로그아웃을 구현하고, 가능하면, 네이버 로그인 까지 구현해 볼까 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;로그인, 로그아웃을 직접 구현하기 보다는, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;아무래도 이런 편리한 패키지를 이용하여 소셜 로그인까지 구현이 가능해 보여서 사용해 보려 합니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="allauth-패키지-설치"><a href="#allauth-패키지-설치" class="headerlink" title="allauth 패키지 설치"></a>allauth 패키지 설치</h2><br><p>django 패키지중 하나인, allauth 를 사용하여, </p><p><br>기본 로그인, 로그아웃을 구현하고, 가능하면, 네이버 로그인 까지 구현해 볼까 합니다. </p><br><p>로그인, 로그아웃을 직접 구현하기 보다는, </p><p><br>아무래도 이런 편리한 패키지를 이용하여 소셜 로그인까지 구현이 가능해 보여서 사용해 보려 합니다. </p><br><a id="more"></a><br><p>순서는 아래와 같습니다. </p><br><ol><li><p>allauth 설치 </p></li><li><p>config/settings.py 파일 수정 </p><ul><li>TEMPLATES</li><li>AUTHENTICATION_BACKENDS</li><li>INSTALLED_APPS</li><li>SITE_ID </li></ul></li><li><p>config/urls.py 파일 수정 </p></li><li><p>python mange.py migrate </p></li><li><p>어드민에 접속해서 도메인을 위한 Site  추가 </p></li></ol><br><h2 id="allauth-설치"><a href="#allauth-설치" class="headerlink" title="allauth 설치"></a>allauth 설치</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-allauth</span><br></pre></td></tr></table></figure><br><h2 id="config-settings-py-파일-수정"><a href="#config-settings-py-파일-수정" class="headerlink" title="config/settings.py 파일 수정"></a>config/settings.py 파일 수정</h2><br><ul><li>AUTHENTICATION_BACKENDS</li><li>INSTALLED_APPS </li><li>SITE_ID </li></ul><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="comment"># allauth 와 상관없이 username 으로 장고 어드민에 로그인이 필요할때 </span></span><br><span class="line">    <span class="string">'django.contrib.auth.backends.ModelBackend'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 'allauth' 특화 인증 방법, e-mail로 로그인 하는것 같은것 </span></span><br><span class="line">    <span class="string">'allauth.account.auth_backends.AuthenticationBackend'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="string">'todo'</span>,</span><br><span class="line">    <span class="string">'django_extensions'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Bulma CSS Framework </span></span><br><span class="line">    <span class="string">'bulma'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Allauth를 위한 Apps </span></span><br><span class="line">    <span class="string">'django.contrib.sites'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'allauth'</span>,</span><br><span class="line">    <span class="string">'allauth.account'</span>,</span><br><span class="line">    <span class="string">'allauth.socialaccount'</span>, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># ... 소셜로그인을 할 제공자 리스트를 아래에 포함 </span></span><br><span class="line">    <span class="comment"># 'allauth.socialaccount.providers.naver'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">SITE_ID = <span class="number">1</span></span><br></pre></td></tr></table></figure><br><br><h2 id="config-urls-py-파일-수정"><a href="#config-urls-py-파일-수정" class="headerlink" title="config/urls.py  파일 수정"></a>config/urls.py  파일 수정</h2><br><p>allauth 의 urls 들의 경로를 추가해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">    path(<span class="string">'accounts/'</span>, include(<span class="string">'allauth.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="python-manage-py-migrate"><a href="#python-manage-py-migrate" class="headerlink" title="python manage.py migrate"></a>python manage.py migrate</h2><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(to-do-list)  python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: account, admin, auth, contenttypes, sessions, sites, socialaccount, todo</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying account.0001_initial... OK</span><br><span class="line">  Applying account.0002_email_max_length... OK</span><br><span class="line">  Applying sites.0001_initial... OK</span><br><span class="line">  Applying sites.0002_alter_domain_unique... OK</span><br><span class="line">  Applying socialaccount.0001_initial... OK</span><br><span class="line">  Applying socialaccount.0002_token_max_lengths... OK</span><br><span class="line">  Applying socialaccount.0003_extra_data_default_dict... OK</span><br></pre></td></tr></table></figure><br><h2 id="어드민에-접속해서-설치-확인"><a href="#어드민에-접속해서-설치-확인" class="headerlink" title="어드민에 접속해서 설치 확인"></a>어드민에 접속해서 설치 확인</h2><br><p>설치후에, 어드민에 로그인하면, </p><p><br>아래와 같이 이전에는 볼수 없었던 메뉴들이 생겨납니다. </p><br><img src="/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/image1.png" class=""><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/30/TodoList-15%ED%8E%B8-allauth-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 14편 - 투두리스트 생성 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Fri, 29 May 2020 03:20:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;TodoList-Create-페이지-구현&quot;&gt;&lt;a href=&quot;#TodoList-Create-페이지-구현&quot; class=&quot;headerlink&quot; title=&quot;TodoList Create 페이지 구현&quot;&gt;&lt;/a&gt;TodoList Create 페이지 구현&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;투두리스트를 생성하는것을 구현해 보려 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;클래스 기반 뷰인 CreateView 를 사용해 보려 했었는데. 잘 모르겠어서. 함수형 으로 진행 했습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;forms 적용 하는것에서 꼬이고, 함수기반 뷰 작성할때 꼬이고, 클래스 기반 뷰에서도 꼬이고, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;Bulma CSS 적용할때 꼬이고, URL 설정할때 꼬여서. 매우 힘들게 구현한것 같습니다;;; &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;아래와 같이 진행 해봅니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TodoList-Create-페이지-구현"><a href="#TodoList-Create-페이지-구현" class="headerlink" title="TodoList Create 페이지 구현"></a>TodoList Create 페이지 구현</h2><br><p>투두리스트를 생성하는것을 구현해 보려 합니다. </p><p><br>클래스 기반 뷰인 CreateView 를 사용해 보려 했었는데. 잘 모르겠어서. 함수형 으로 진행 했습니다. </p><p><br>forms 적용 하는것에서 꼬이고, 함수기반 뷰 작성할때 꼬이고, 클래스 기반 뷰에서도 꼬이고, </p><p><br>Bulma CSS 적용할때 꼬이고, URL 설정할때 꼬여서. 매우 힘들게 구현한것 같습니다;;; </p><br><p>아래와 같이 진행 해봅니다. </p><br><a id="more"></a><br><h2 id="todo-list-html-파일-수정"><a href="#todo-list-html-파일-수정" class="headerlink" title="todo_list.html 파일 수정"></a>todo_list.html 파일 수정</h2><br><p>templates/todo/todo_list.html 파일을 수정해줍니다. </p><p><br>생성하기 버튼을 추가 하고, 링크를 연결해줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 목록</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box has-text-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist_create' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-info is-rounded is-fullwidth"</span>&gt;</span>할일 추가하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"><span class="xml">....</span></span><br></pre></td></tr></table></figure><br><h2 id="todo-forms-py-파일-생성-후-작성"><a href="#todo-forms-py-파일-생성-후-작성" class="headerlink" title="todo/forms.py 파일 생성 후 작성"></a>todo/forms.py 파일 생성 후 작성</h2><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoCreateForm</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    name = forms.CharField(</span><br><span class="line">    max_length=<span class="number">20</span>,</span><br><span class="line">    widget=forms.TextInput(</span><br><span class="line">        attrs=&#123;</span><br><span class="line">                <span class="string">'class'</span>: <span class="string">'input'</span>,</span><br><span class="line">                <span class="string">'placeholder'</span>: <span class="string">'해야할일'</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">description = forms.CharField(</span><br><span class="line">max_length=<span class="number">200</span>,</span><br><span class="line">widget=forms.Textarea(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'textarea'</span>,</span><br><span class="line">            <span class="string">'placeholder'</span>: <span class="string">'할일에 대한 디테일'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">date_deadline = forms.DateField(</span><br><span class="line">widget=forms.DateInput(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'id'</span>: <span class="string">'datepicker'</span>,</span><br><span class="line">            <span class="string">'placeholder'</span>: <span class="string">'YYYY-MM-DD'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">images = forms.ImageField(</span><br><span class="line">widget=forms.ClearableFileInput(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'multiple'</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'file-input'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    ), required=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">files = forms.FileField(</span><br><span class="line">widget=forms.ClearableFileInput(</span><br><span class="line">    attrs=&#123;</span><br><span class="line">            <span class="string">'multiple'</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'file-input'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    ), required=<span class="literal">False</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br><br><h2 id="todo-views-py-파일-수정"><a href="#todo-views-py-파일-수정" class="headerlink" title="todo/views.py 파일 수정"></a>todo/views.py 파일 수정</h2><br><p>함수기반 뷰인 TodoCreate 를 추가해줌 </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> TodoCreateForm</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">TodoCreate</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">        form = TodoCreateForm(request.POST)</span><br><span class="line">        </span><br><span class="line">        name = request.POST[<span class="string">'name'</span>]</span><br><span class="line">        description = request.POST[<span class="string">'description'</span>]</span><br><span class="line">        date_deadline = request.POST[<span class="string">'date_deadline'</span>]</span><br><span class="line">        images = request.FILES.getlist(<span class="string">'images'</span>)</span><br><span class="line">        files = request.FILES.getlist(<span class="string">'files'</span>)</span><br><span class="line">        date_created = date.today()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># valid 한 date_deadline value 를 넣지 않았을때 막을 방법이 없음.</span></span><br><span class="line">        <span class="comment"># date_created 가 date_deadline 보다 지난 날짜라도, Todo는 생성되는 문제점도 있음 </span></span><br><span class="line">        </span><br><span class="line">        t = TodoList.objects.create(</span><br><span class="line">        name=name,</span><br><span class="line">        description=description,</span><br><span class="line">        date_created=date_created,</span><br><span class="line">        date_deadline=date_deadline,</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        t.save()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">            TodoList_images.objects.create(todo=t, image=image)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> file_in_list <span class="keyword">in</span> files:</span><br><span class="line">            TodoList_files.objects.create(todo=t, files=file_in_list)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">'/'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        form = TodoCreateForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'todo/create.html'</span>, &#123;<span class="string">'form'</span>: form&#125;)</span><br></pre></td></tr></table></figure><br><h2 id="create-html-파일-생성후-작성-폼-작성"><a href="#create-html-파일-생성후-작성-폼-작성" class="headerlink" title="create.html 파일 생성후 작성 (폼 작성)"></a>create.html 파일 생성후 작성 (폼 작성)</h2><br><p>templates/todo/create.html 파일을 생성하고, 작성해 줍니다. </p><br><p>BULMA 공식 페이지에서, components 에 대한 섹션을 참고해 가면서. 하나하나 구현 해 봅니다. </p><p><br>포인트는, forms.py 에 작성된 필드들의 클래스가 Bulma css 에 존재하는 클래스명으로 나와야 합니다. </p><br><ul><li><p>그리고, image 인풋과 file 인풋은, 다른 클래스를 가지고 있기 때문에, </p><p>field.name 이 image 혹은 file 이라면, 일반 form div 가 아닌, 클래스명을 가진 div 로 표시되게 만들었습니다. (이게 if field.name == ‘image’ or filed.name == ‘file’ 이 하는 일입니다.)</p></li><li><p><code>script</code>태그 안에, datepicker() 함수를 넣어서, deadline_date 을 선택할때, 날짜를 선택하는 위젯을 구현해 주었습니다 </p></li></ul><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/resources/demos/style.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/ui/1.12.1/jquery-ui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">$( function() &#123;</span></span><br><span class="line"><span class="xml">  $( "#datepicker" ).datepicker();</span></span><br><span class="line"><span class="xml">&#125; );</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"message is-info"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Todo List 추가<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"delete"</span> <span class="attr">aria-label</span>=<span class="string">"delete"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      새로운 투두 리스트를 추가해 보세요! </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns is-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multiplart/form-data"</span> <span class="attr">style</span>=<span class="string">"margin-top: 50px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> field <span class="keyword">in</span> form %&#125;</span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> field.name == 'images' or field.name == 'files' %&#125;</span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"file has-name"</span> <span class="attr">style</span>=<span class="string">"margin-top: 10px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"file-label"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            </span><span class="template-variable">&#123;&#123; field &#125;&#125;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-cta"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-icon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-upload"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-label"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          Choose </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span><span class="xml"> to upload</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"file-name"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        Upload your </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span><span class="xml"> here</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">            </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span> <span class="attr">style</span>=<span class="string">"margin-top: 10px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; field.name &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; field &#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span> <span class="attr">style</span>=<span class="string">"margin-top: 30px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-light"</span>&gt;</span>Cancel<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br></pre></td></tr></table></figure><br><p>여기서 한가지 정말 아쉬운것 하나는, 날짜를 입력해야하는 필드에 date picker 를 <br>자바스크립트를 사용하여 구현하고 싶었지만, 짧은 지식으로 인하여, <br></p><p><br>아직까지 제대로 구현하지 못했다는 점입니다. </p><br><br><h2 id="URL-설정"><a href="#URL-설정" class="headerlink" title="URL 설정"></a>URL 설정</h2><br><p>todo/urls.py 파일에서, url 을 설정해주어야 합니다. </p><p><br>create/ 로 접속하면, TodoCreate 함수가 호출되게 URL 설정을 해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView, UpdateView, TodoCreate</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">    path(<span class="string">'update/&lt;int:pk&gt;/'</span>, UpdateView.as_view(), name=<span class="string">'todolist_update'</span>),</span><br><span class="line"></span><br><span class="line">    path(<span class="string">'create/'</span>, TodoCreate, name=<span class="string">'todolist_create'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>많은것이 찝찝한,,, 그리고 많이 아쉬운 부분이 많습니다;; </p><p><br>일단, 아래 같이 추가가 제대로 동작하긴 하지만, 개선점이 많아 보입니다. </p><br><br><img src="/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/image1.png" class=""><br><br><img src="/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/image2.png" class=""><p><br>submit 버튼을 누르면, 메인페이지 이동후, 방금 생성한 투두리스트가 나타나는것을 볼수 있습니다. </p><br><img src="/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/image3.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/29/TodoList-14%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 13편 - 업데이트 기능 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Thu, 28 May 2020 18:40:31 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todolist-업데이트-기능-구현&quot;&gt;&lt;a href=&quot;#Todolist-업데이트-기능-구현&quot; class=&quot;headerlink&quot; title=&quot;Todolist - 업데이트 기능 구현&quot;&gt;&lt;/a&gt;Todolist - 업데이트 기능 구현&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;p&gt;투두 리스트를 수정할수 있는 업데이트 기능을 구현해 봅니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;클래스 기반 뷰인 UpdateView 를 사용하여, 기능을 구현해 볼것입니다. &lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;p&gt;이를 구현하기 위해선, 대략적으로, 아래의 과정을 거쳐야 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;views.py 에 generic 뷰를 상속받는 UpdateView 클래스 작성 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;templates/todo/update.html 파일 생성 및 작성 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;templates/todo/todolist_list.html 파일 수정 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;templates/todo/todolist_detail.html 파일 수정 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;todo/urls.py 파일 수정 &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todolist-업데이트-기능-구현"><a href="#Todolist-업데이트-기능-구현" class="headerlink" title="Todolist - 업데이트 기능 구현"></a>Todolist - 업데이트 기능 구현</h2><br><br><p>투두 리스트를 수정할수 있는 업데이트 기능을 구현해 봅니다. </p><p><br>클래스 기반 뷰인 UpdateView 를 사용하여, 기능을 구현해 볼것입니다. </p><br><br><p>이를 구현하기 위해선, 대략적으로, 아래의 과정을 거쳐야 합니다. </p><br><ol><li><p>views.py 에 generic 뷰를 상속받는 UpdateView 클래스 작성 </p></li><li><p>templates/todo/update.html 파일 생성 및 작성 </p></li><li><p>templates/todo/todolist_list.html 파일 수정 </p></li><li><p>templates/todo/todolist_detail.html 파일 수정 </p></li><li><p>todo/urls.py 파일 수정 </p></li></ol><br><a id="more"></a><br><h2 id="UpdateView-클래스-작성"><a href="#UpdateView-클래스-작성" class="headerlink" title="UpdateView 클래스 작성"></a>UpdateView 클래스 작성</h2><br><p>todo/views.py 파일에 아래와 같이, UpdateView 를 추가해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateView</span><span class="params">(generic.UpdateView)</span>:</span></span><br><span class="line">    model = TodoList </span><br><span class="line">    fields = [<span class="string">'name'</span>, <span class="string">'description'</span>, <span class="string">'date_deadline'</span>]</span><br><span class="line">    template_name = <span class="string">'todo/update.html'</span></span><br><span class="line">    success_url = <span class="string">"/"</span></span><br></pre></td></tr></table></figure><br><br><h2 id="update-html-파일-생성-및-작성"><a href="#update-html-파일-생성-및-작성" class="headerlink" title="update.html 파일 생성 및 작성"></a>update.html 파일 생성 및 작성</h2><br><p>templates/todo/update.html 파일을 아래와 같이 생성해주고 작성해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"has-navbar-fixed-top"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List - </span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 정보</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar is-fixed-top"</span> <span class="attr">role</span>=<span class="string">"navigation"</span> <span class="attr">aria-label</span>=<span class="string">"main navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'images/todo_list.jpg' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"112"</span> <span class="attr">height</span>=<span class="string">"28"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-burger burger"</span> <span class="attr">aria-label</span>=<span class="string">"menu"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">data-target</span>=<span class="string">"navbarBasicExample"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbarBasicExample"</span> <span class="attr">class</span>=<span class="string">"navbar-menu"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          Home</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          To Do Lists</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item has-dropdown is-hoverable"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-link"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            More</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-dropdown"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              About</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Jobs</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Contact</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">"navbar-divider"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Report an issue</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Log in</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; form.as_p &#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Update"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><p>UpdateView를 통해서, form 을 html 에 표시할수 있습니다.<br></p><br><h2 id="todolist-list-html-파일-수정"><a href="#todolist-list-html-파일-수정" class="headerlink" title="todolist_list.html 파일 수정"></a>todolist_list.html 파일 수정</h2><br><p>templates/todo/todolist_list.html 파일을 수정해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/update/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/delete/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h3 id="todolist-detail-html-파일-수정"><a href="#todolist-detail-html-파일-수정" class="headerlink" title="todolist_detail.html 파일 수정"></a>todolist_detail.html 파일 수정</h3><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"># Detail 페이지에서도 update 가 가능하게끔, </span></span><br><span class="line"><span class="xml"># update/</span><span class="template-variable">&#123;&#123; todolist.pk &#125;&#125;</span><span class="xml"> 링크를 추가해 줍니다. </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link is-fullwidth"</span>&gt;</span>뒤로가기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/update/</span></span></span><span class="template-variable">&#123;&#123; todolist.pk &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h2 id="todo-urls-py-파일-수정"><a href="#todo-urls-py-파일-수정" class="headerlink" title="todo/urls.py 파일 수정"></a>todo/urls.py 파일 수정</h2><br><p><code>update/&lt;int:pk&gt;/</code> 로 접속하면, UpdateView 를 호출하게 되는 URL 세팅을 해줍니다 </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView, UpdateView</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">    path(<span class="string">'update/&lt;int:pk&gt;/'</span>, UpdateView.as_view(), name=<span class="string">'todolist_update'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>좀 아쉬운 부분들이 많이 존재하긴 하지만, 일단 잘 작동하는지 테스트를 진행 해보았습니다. <br></p><br><img src="/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image1.png" class=""><br><br><p><strong>수정하기 버튼을 누르면, todo/update.html 파일을 읽어오고,</strong><br></p><p><strong>그안에는 해당 폼이 있습니다. 내용을 추가하고, update 버튼을 누르면, 해당 투두 리스트의 정보가 변경 됩니다.</strong></p><br><img src="/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image2.png" class=""><br><p>마찬가지로, Detail 페이지에서 수정 버튼을 누르면, 위의 폼이 뜨고,<br> update 버튼을 누르면 투두리스트가 변경됩니다. </p><p><br><br></p><p>아직까지 구현이 너무너무 딸립니다만… 일단 기능 구현만 되게 해놓고 나중에 천천히 고치려 합니다… </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/29/TodoList-13%ED%8E%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 12편 - 투두리스트 삭제 기능 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Tue, 26 May 2020 15:31:20 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todo-List-투두리스트-삭제-기능-구현&quot;&gt;&lt;a href=&quot;#Todo-List-투두리스트-삭제-기능-구현&quot; class=&quot;headerlink&quot; title=&quot;Todo List - 투두리스트 삭제 기능 구현&quot;&gt;&lt;/a&gt;Todo List - 투두리스트 삭제 기능 구현&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;투두 리스트 삭제 기능을 추가해 보려 합니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;삭제 버튼은, 투두리스트 페이지와, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;투두리스트 디테일 페이지에 추가해 줄겁니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;DeleteView 를 사용하기 때문에, &lt;br&gt;&lt;br&gt;삭제 버튼을 누르면, ‘정말 삭제하겠습니까?’ 라는 문구를 가진 컨펌 페이지가 뜨고, &lt;br&gt;한번 더 삭제하기 버튼을 누르면, &lt;br&gt;삭제가 완료되고. &lt;br&gt;&lt;br&gt;취소 버튼을 누르면, 다시 투두리스트 리스트 페이지로 가게 됩니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todo-List-투두리스트-삭제-기능-구현"><a href="#Todo-List-투두리스트-삭제-기능-구현" class="headerlink" title="Todo List - 투두리스트 삭제 기능 구현"></a>Todo List - 투두리스트 삭제 기능 구현</h2><br><p>투두 리스트 삭제 기능을 추가해 보려 합니다. </p><br><p>삭제 버튼은, 투두리스트 페이지와, </p><p><br>투두리스트 디테일 페이지에 추가해 줄겁니다. </p><p><br>DeleteView 를 사용하기 때문에, <br><br>삭제 버튼을 누르면, ‘정말 삭제하겠습니까?’ 라는 문구를 가진 컨펌 페이지가 뜨고, <br>한번 더 삭제하기 버튼을 누르면, <br>삭제가 완료되고. <br><br>취소 버튼을 누르면, 다시 투두리스트 리스트 페이지로 가게 됩니다. </p><br><a id="more"></a><br><blockquote><p>DeleteView 는 클래스 기반 뷰로, </p><p>기본적으로, 정말로 삭제할것인지에 대한 컨펌 페이지를 가지고 있어서 </p><p>삭제 버튼을 눌렀을때, 이 컨펌 페이지를 거쳐서 삭제를 눌러야 </p><p>객체가 삭제 됩니다. </p></blockquote><br><p>구현 과정은 아래와 같습니다. </p><br><ol><li><p>todo/views.py 파일에 DeleteView 클래스를 추가 </p></li><li><p>templates/todo/delete.html 파일 생성및 작성 </p></li><li><p>templates/todo/todolist_list.html 파일 수정 (삭제버튼 설정) </p></li><li><p>templates/todo/todolist_detail.html 파일 수정 (삭제버튼 설정) </p></li><li><p>todo/urls.py 파일에서 delete URL 설정 </p></li></ol><br><br><h2 id="todo-views-py-파일에-DeleteView-클래스-추가"><a href="#todo-views-py-파일에-DeleteView-클래스-추가" class="headerlink" title="todo/views.py 파일에 DeleteView 클래스 추가"></a>todo/views.py 파일에 DeleteView 클래스 추가</h2><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeleteView</span><span class="params">(generic.DeleteView)</span>:</span></span><br><span class="line">    model = TodoList </span><br><span class="line">    success_url = <span class="string">'/'</span></span><br><span class="line">    tempalte_name = <span class="string">'todo/delete.html'</span></span><br></pre></td></tr></table></figure><br><br><h2 id="templates-todo-delete-html-파일-생성-및-작성"><a href="#templates-todo-delete-html-파일-생성-및-작성" class="headerlink" title="templates/todo/delete.html 파일 생성 및 작성"></a>templates/todo/delete.html 파일 생성 및 작성</h2><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">base.html 상속받는 대신에, </span><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span><span class="xml"> 을 사용하여, </span></span><br><span class="line"><span class="xml">static 폴더 안에 있는 style.css 파일을 직접 가져와 사용했습니다. </span></span><br><span class="line"></span><br><span class="line"><span class="xml">DeleteView 를 사용하기 때문에, </span><span class="template-variable">&#123;&#123; form &#125;&#125;</span><span class="xml"> 을 사용하여, 삭제 폼을 만들어 주었고, </span></span><br><span class="line"></span><br><span class="line"><span class="xml">삭제 버튼과 취소 버튼을 만들어 주었습니다.</span></span><br></pre></td></tr></table></figure><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; object &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; form &#125;&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">csrf_token</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"button is-danger"</span> <span class="attr">value</span>=<span class="string">"삭제"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        취소</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field is-grouped is-grouped-centered"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        해당 투두리스트를 삭제 하시겠습니까?</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><h2 id="templates-todo-todolist-list-html-파일-수정"><a href="#templates-todo-todolist-list-html-파일-수정" class="headerlink" title="templates/todo/todolist_list.html 파일 수정"></a>templates/todo/todolist_list.html 파일 수정</h2><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">삭제하기 버튼을 누르면, "/delete/</span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml">" url 로 넘어가서, </span></span><br><span class="line"><span class="xml">DeleteView 를 호출할것입니다. </span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/delete/</span></span></span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h2 id="templates-todo-todolist-detail-html-파일-수정"><a href="#templates-todo-todolist-detail-html-파일-수정" class="headerlink" title="templates/todo/todolist_detail.html 파일 수정"></a>templates/todo/todolist_detail.html 파일 수정</h2><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">삭제하기 버튼을 누르면, "/delete/</span><span class="template-variable">&#123;&#123; todo.id &#125;&#125;</span><span class="xml">" url 로 넘어가서, </span></span><br><span class="line"><span class="xml">DeleteView 를 호출하게 해서, </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">Detail 페이지에서도 삭제가 가능하게 하려 했지만, </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">DeleteView 를 Detail 페이지에서 호출하면, 에러가 납니다. (이에 대한 해결 방법을 찾지 못하고 있음) </span></span><br><span class="line"></span><br><span class="line"><span class="xml">따라서, 삭제 버튼을 누르면, 다시 리스트 페이지로 되돌아오게 해주었습니다..</span></span><br></pre></td></tr></table></figure><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link is-fullwidth"</span>&gt;</span>뒤로가기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><h2 id="todo-urls-py-파일에서-delete-URL-설정"><a href="#todo-urls-py-파일에서-delete-URL-설정" class="headerlink" title="todo/urls.py 파일에서 delete URL 설정"></a>todo/urls.py 파일에서 delete URL 설정</h2><br><p>‘delete/<a href="int:pk">int:pk</a>/‘ 라는 URL 을 가지면, DeleteView 를 호출하고, </p><p>삭제 페이지로 넘어가게 됩니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><p><br>서버를 시작하고, 삭제 테스트를 해봅니다. </p><br><p>투두 리스트 페이지에서 삭제 진행 </p><br><img src="/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image1.png" class=""><br><p>삭제 버튼을 누르면, 아래 컨펌 페이지가 뜨고, 여기서 한번 더 삭제를 누르면 객체가 삭제 완료 됩니다. </p><br><img src="/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/image2.png" class=""><br><p>삭제 버튼을 누르면, 투두리스트 삭제가 진행 되는것을 확인 하였습니다만. <br></p><p>디테일 페이지에서 삭제 동작을 구현하지 못한것이 아쉽습니다. <br>클래스 베이스 뷰에 있는 DeleteView 를 더 많이 경험해 봐야 알것 같습니다. </p><p><br><br></p><p><strong>만약, DeleteView 를 사용하지 않고, 함수형으로 이 기능을 구현하고 싶다면,</strong> </p><hr><p><br>views.py 에 아래와 같은 함수를 작성하고, 적절히 URL 을 연결하여 사용하면 됩니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># views.py </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_todo</span><span class="params">(request, pk)</span>:</span></span><br><span class="line">    t = TodoList.objects.get(pk=pk)</span><br><span class="line">    t.delete() </span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">'/'</span>)</span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># todo/urls.py </span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView, DeleteView, UpdateView, TodoCreate</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> delete_todo</span><br><span class="line">app_name = <span class="string">'todo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">    path(<span class="string">'delete/&lt;int:pk&gt;/'</span>, DeleteView.as_view(), name=<span class="string">"todolist_delete"</span>),</span><br><span class="line">    path(<span class="string">'delete_todo/&lt;int:pk&gt;/'</span>, delete_todo, name=<span class="string">"delete_todo"</span>),</span><br><span class="line">    path(<span class="string">'update/&lt;int:pk&gt;/'</span>, UpdateView.as_view(), name=<span class="string">'todolist_update'</span>),</span><br><span class="line">    path(<span class="string">'create/'</span>, TodoCreate, name=<span class="string">'todolist_create'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br>다만, 이렇게 구현 하면, DeleteView 를 사용했을때랑은 다르게, </p><p>Confirm page 가 나오지 않고. 바로 삭제가 됩니다. <br></p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/27/TodoList-12%ED%8E%B8-%ED%88%AC%EB%91%90%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 11편 - 디테일 페이지에 이미지와 파일 표시</title>
      <link>http://djangojeng-e.github.io/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/</link>
      <guid>http://djangojeng-e.github.io/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/</guid>
      <pubDate>Tue, 26 May 2020 10:30:31 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;디테일-페이지에-이미지와-파일-표시&quot;&gt;&lt;a href=&quot;#디테일-페이지에-이미지와-파일-표시&quot; class=&quot;headerlink&quot; title=&quot;디테일 페이지에 이미지와 파일 표시&quot;&gt;&lt;/a&gt;디테일 페이지에 이미지와 파일 표시&lt;/h2&gt;&lt;br&gt;

&lt;h2 id=&quot;MEDIA-경로-설정&quot;&gt;&lt;a href=&quot;#MEDIA-경로-설정&quot; class=&quot;headerlink&quot; title=&quot;MEDIA 경로 설정&quot;&gt;&lt;/a&gt;MEDIA 경로 설정&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;p&gt;개발 단계에서 MEDIA 파일을 업로드 해줄 MEDIA 경로를 설정해 주어야 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;confit/settings.py 파일로 가서, 아래와 같이 MEDIA 경로를 설정해 줍니다. &lt;/p&gt;
&lt;br&gt;

&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# MEDIA_ROOT 설정 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 사용자가 업로드하는 미디어 정적 파일들의 기본 경로 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MEDIA_ROOT = os.path.join(BASE_DIR, &lt;span class=&quot;string&quot;&gt;&#39;.media&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MEDIA_URL = &lt;span class=&quot;string&quot;&gt;&#39;/media/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;br&gt;

&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="디테일-페이지에-이미지와-파일-표시"><a href="#디테일-페이지에-이미지와-파일-표시" class="headerlink" title="디테일 페이지에 이미지와 파일 표시"></a>디테일 페이지에 이미지와 파일 표시</h2><br><h2 id="MEDIA-경로-설정"><a href="#MEDIA-경로-설정" class="headerlink" title="MEDIA 경로 설정"></a>MEDIA 경로 설정</h2><br><br><p>개발 단계에서 MEDIA 파일을 업로드 해줄 MEDIA 경로를 설정해 주어야 합니다. </p><p><br>confit/settings.py 파일로 가서, 아래와 같이 MEDIA 경로를 설정해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MEDIA_ROOT 설정 </span></span><br><span class="line"><span class="comment"># 사용자가 업로드하는 미디어 정적 파일들의 기본 경로 </span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'.media'</span>)</span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br></pre></td></tr></table></figure><br><br><a id="more"></a><h2 id="image-와-file-URL-을-위한-쿼리셋-연습"><a href="#image-와-file-URL-을-위한-쿼리셋-연습" class="headerlink" title="image 와 file URL 을 위한 쿼리셋 연습"></a>image 와 file URL 을 위한 쿼리셋 연습</h2><br><p>쿼리셋을 연습하기 위해서</p><p><br>두개의 이미지 파일과, 두개의 파일을 가지고 있는 투두리스트 하나를 어드민에서 생성해 주었습니다. </p><p><br>image 의 URL을 얻기위해서, Shell_plus 에서 연습한 내용은 아래와 같습니다. </p><br><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">In [1]: t = TodoList.objects.get(pk=3)   </span><br><span class="line">In [2]: images = TodoList_images.objects.filter(todo=t) </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> images 에, 해당 todo에 관련된 TodoList_images images 들을 담고, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 이를 순회하면서, 각 image 가 어떤 속성이 있는지 프린트 해봅니다. </span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">In [3]: for image in images: </span><br><span class="line">   ...:     print(dir(image))    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 각 image 마다, image 라는 속성이 존재 하는것을 확인 할수 있습니다 </span></span><br><span class="line">In [4]: for image in images: </span><br><span class="line">   ...:     print(dir(image.image)) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> image.image 에는 url 속성이 있어서, image.image.url 을 출력하면, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 각 이미지들의 url 을 얻을수 있습니다. </span></span><br><span class="line"></span><br><span class="line">In [6]: for image in images: </span><br><span class="line">   ...:     print(image.image.url)</span><br><span class="line">/media/todo/images/2020/05/todolist_logo.jpg</span><br><span class="line">/media/todo/images/2020/05/main.jpg</span><br></pre></td></tr></table></figure><br><br><h2 id="이미지-URL-적용하기"><a href="#이미지-URL-적용하기" class="headerlink" title="이미지 URL 적용하기"></a>이미지 URL 적용하기</h2><br><p>이를 잘 활용하여, templates/todo/todo_list.html 파일에 적용해봅니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">       남은 일수 : </span><span class="template-variable">&#123;&#123; todolist.remaining_days &#125;&#125;</span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">       관련 이미지 : </span></span><br><span class="line"><span class="xml">       </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> image <span class="keyword">in</span> todolist.todolist_images_set.all %&#125;</span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; image.image.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">height</span>=<span class="string">"350px"</span> <span class="attr">alt</span>=<span class="string">"reference_image"</span>&gt;</span></span></span><br><span class="line"><span class="xml">       </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><p>이렇게 까지 작업을 하고, 다시 투두 리스트의 디테일을 확인해보면, <br>이미지가 화면에 나올것이라고 생각하고 확인해 보면, 이미지가 화면에 표시되지 않는것을 확인 할수 있습니다. </p><br><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image1.png" class=""><br><p>브라우저를 열어서 요소 검사를 해보면, 아래와 같이 HTML 은 잘 작성이 되어 있는데, </p><p><br>이미지 표시가 안됩니다. </p><br><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image2.png" class=""><br><h2 id="URL-patterns-에-MEDIA-URL-추가"><a href="#URL-patterns-에-MEDIA-URL-추가" class="headerlink" title="URL patterns 에 MEDIA_URL 추가"></a>URL patterns 에 MEDIA_URL 추가</h2><br><p>이 문제를 해결하기 위해서는, </p><p><br>config/urls.py 파일을 수정해 주어야 합니다. <br>기존 urlpatterns 에, MEDIA_URL 그리고, 루트를 설정해 주어야 합니다. <br><br></p><h3 id="config-urls-py-파일-수정"><a href="#config-urls-py-파일-수정" class="headerlink" title="config/urls.py 파일 수정"></a>config/urls.py 파일 수정</h3><p><br><br></p><ol><li>from django.conf import settings </li><li>from django.conf.urls.static import static </li></ol><p><br><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static </span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.stie.urls),</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">urlpatterns += static(</span><br><span class="line">prefix=settings.MEDIA_URL, </span><br><span class="line">    document_root=settings.MEDIA_ROOT, </span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><br><br></p><blockquote><p>위와 같이 수정을 해주었다면, </p><p>브라우저에서 한번 확인 해 봅니다. 투두리스트의 디테일을 확인하면, </p><p>해당 투두리스트의 관련 이미지가 화면에 표시되는것을 확인할수 있습니다. </p></blockquote><br><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image3.png" class=""><p><br><br></p><h2 id="파일-정보도-표시해주기"><a href="#파일-정보도-표시해주기" class="headerlink" title="파일 정보도 표시해주기"></a>파일 정보도 표시해주기</h2><br><p>매우매우 비슷한 방식으로, </p><p><br>파일 정보도 디테일 페이지에 표시해줄수 있습니다.<br><br></p><p>일단, templates/todo/todolist_detail.html 파일에, 파일정보 부분을 아래와 같이 고쳐줍니다.<br><br></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">          관련 이미지 : </span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> image <span class="keyword">in</span> todolist.todolist_images_set.all %&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; image.image.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">height</span>=<span class="string">"350px"</span> <span class="attr">alt</span>=<span class="string">"reference_image"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">          관련 파일 : <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> file <span class="keyword">in</span> todolist.todolist_files_set.all %&#125;</span></span><br><span class="line"><span class="xml">          </span><span class="template-variable">&#123;&#123; file.files.url &#125;&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; file.files.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>(파일보기)<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">          </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br></pre></td></tr></table></figure><br><p>파일과 이미지를 표시하는 templates/todo/todolist_detail.html 을 위와 같이 수정해 주었다면, <br></p><p>브라우저로 어떻게 표시되는지 확인하러 갑니다. <br><br></p><img src="/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/image4.png" class=""><br><p>관련 파일이라고 하는 항목에, 파일 주소가 표시되고, <br>파일보기 링크가 표시되는것을 확인 할수 있습니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/26/TodoList-11%ED%8E%B8-%EB%94%94%ED%85%8C%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%99%80-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 10편 - 리스트 더보기 (디테일) 기능 구현</title>
      <link>http://djangojeng-e.github.io/2020/05/25/TodoList-10%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B3%B4%EA%B8%B0-%EB%94%94%ED%85%8C%EC%9D%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <guid>http://djangojeng-e.github.io/2020/05/25/TodoList-10%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B3%B4%EA%B8%B0-%EB%94%94%ED%85%8C%EC%9D%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <pubDate>Mon, 25 May 2020 00:14:22 GMT</pubDate>
      <description>
      
        &lt;br&gt;

&lt;p&gt;하나의 TodoList 는, 아래의 필드들을 가지고 있습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Field&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;비고&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;할일의 제목&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;할일에 대한 설명&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date_created&lt;/td&gt;
&lt;td&gt;생성 날짜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date_deadline&lt;/td&gt;
&lt;td&gt;데드라인 날짜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TodoList_images&lt;/td&gt;
&lt;td&gt;외래키로, 관련된 이미지파일들을 보유&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TodoList_files&lt;/td&gt;
&lt;td&gt;외래키로, 관련된 파일들을 보유&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;리스트만 보여주는 페이지에서는, &lt;/p&gt;
&lt;p&gt;간략하게만 보여주기 때문에, 관련 이미지와 파일들을 보여주고 있지 않지만, &lt;/p&gt;
&lt;p&gt;더보기 버튼을 눌러서, 디테일을 보여줄때에는, 관련 이미지와 파일도 보여져야 될것 같습니다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<br><p>하나의 TodoList 는, 아래의 필드들을 가지고 있습니다. </p><p><br><br></p><table><thead><tr><th><strong>Field</strong></th><th><strong>비고</strong></th></tr></thead><tbody><tr><td>name</td><td>할일의 제목</td></tr><tr><td>description</td><td>할일에 대한 설명</td></tr><tr><td>date_created</td><td>생성 날짜</td></tr><tr><td>date_deadline</td><td>데드라인 날짜</td></tr><tr><td>TodoList_images</td><td>외래키로, 관련된 이미지파일들을 보유</td></tr><tr><td>TodoList_files</td><td>외래키로, 관련된 파일들을 보유</td></tr></tbody></table><br><blockquote><p>리스트만 보여주는 페이지에서는, </p><p>간략하게만 보여주기 때문에, 관련 이미지와 파일들을 보여주고 있지 않지만, </p><p>더보기 버튼을 눌러서, 디테일을 보여줄때에는, 관련 이미지와 파일도 보여져야 될것 같습니다. </p></blockquote><br><a id="more"></a><br><p>이를 진행하기 위해서는, 아래와 같은 순서를 거쳐야 합니다. </p><br><ol><li><p>templates/todo/todolist_detail.html 파일을 생성후 작성 </p></li><li><p>todo/views.py 파일에 detailview  를 추가 </p></li><li><p>todo/urls.py 파일에서 detailview 를 호출할 url 설정 </p></li><li><p>templates/todo/todolist_list.html 에서 todollist_detail 로 가는 URL 링크 추가 </p></li></ol><br><br><h2 id="templates-todo-todolist-detail-html"><a href="#templates-todo-todolist-detail-html" class="headerlink" title="templates/todo/todolist_detail.html"></a>templates/todo/todolist_detail.html</h2><br><br><p>templates/todo/todolist_detail.html 파일을 생성 후 아래와 같이 작성합니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 정보</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card column"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-header-title"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            할일 : </span><span class="template-variable">&#123;&#123; todolist.name &#125;&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-header-icon"</span> <span class="attr">aria-label</span>=<span class="string">"more options"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-angle-down"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            해야 할일 : </span><span class="template-variable">&#123;&#123; todolist.description &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            생성 날짜 : </span><span class="template-variable">&#123;&#123; todolist.date_created &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">            데드 라인 : </span><span class="template-variable">&#123;&#123; todolist.date_deadline &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            남은 일수 : </span><span class="template-variable">&#123;&#123; todolist.remaining_days &#125;&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            관련 이미지 : </span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> image <span class="keyword">in</span> todolist_images_set.all %&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; image &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">            관련 파일 : </span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> file <span class="keyword">in</span> todolist_files_set.all %&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><span class="template-variable">&#123;&#123; file &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'todo:todolist' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-link is-fullwidth"</span>&gt;</span>뒤로가기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><br><br><h2 id="todo-views-py-파일에-DetailView-추가"><a href="#todo-views-py-파일에-DetailView-추가" class="headerlink" title="todo/views.py 파일에 DetailView 추가"></a>todo/views.py 파일에 DetailView 추가</h2><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render </span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoList_images </span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic </span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here. </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(generic.ListView)</span>:</span></span><br><span class="line">    context_object_name = <span class="string">'to_do_list'</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all() </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailView</span><span class="params">(generic.DetailView)</span>:</span></span><br><span class="line">    model = TodoList </span><br><span class="line">    contxt_object_name = <span class="string">'todolist'</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all()</span><br></pre></td></tr></table></figure><br><br><h2 id="DetailView-를-호출할-URL-설정"><a href="#DetailView-를-호출할-URL-설정" class="headerlink" title="DetailView 를 호출할 URL 설정"></a>DetailView 를 호출할 URL 설정</h2><br><br><p>todo/urls.py 파일을 아래와 같이 DetailView 를 호출하는 URL 을 등록해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin </span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path </span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView, DetailView </span><br><span class="line"></span><br><span class="line">app_name = <span class="string">'tdodo'</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">    path(<span class="string">'detail/&lt;int:pk&gt;/'</span>, DetailView.as_view(), name=<span class="string">"todolist_detail"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="todolist-detail-로-가는-URL-링크를-추가"><a href="#todolist-detail-로-가는-URL-링크를-추가" class="headerlink" title="todolist_detail 로 가는 URL 링크를 추가"></a>todolist_detail 로 가는 URL 링크를 추가</h2><br><p>templates/todo/todolist_list.html 에서 todolist_detail 로 가는 링크를 추가 해줍니다. </p><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail/&#123;&#123; todo.id &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>투두리스트의 디테일 보기 구현이 간단하게 되었습니다. </p><p><br>순서대로 하면 잘 구현 되는것을 확인할수 있었습니다. 하지만, 문제가 하나 발생합니다. </p><p><br>투두리스트에 이미지와 파일이 있어도, 이것이 디테일 페이지에서 표시가 되지 않습니다. </p><p><br>이를 위해서는, MEDIA 경로를 설정하고, URL 패턴에 MEDIA_URL 을 추가해주어야 합니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/25/TodoList-10%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B3%B4%EA%B8%B0-%EB%94%94%ED%85%8C%EC%9D%BC-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 9편 - 리스트페이지 카드형태로 꾸미기</title>
      <link>http://djangojeng-e.github.io/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/</guid>
      <pubDate>Sat, 23 May 2020 20:14:08 GMT</pubDate>
      <description>
      
        &lt;img src=&quot;/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;



&lt;br&gt;

&lt;p&gt;템플릿 작업을 마친 메인 페이지 하단에 보면, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;할일 목록들이 나오긴 하는데, 이쁘지가 않습니다. 이것을, BULMA CSS 를 사용하여, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;카드형태로 나오게 할겁니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/image1.png" class=""><br><p>템플릿 작업을 마친 메인 페이지 하단에 보면, </p><p><br>할일 목록들이 나오긴 하는데, 이쁘지가 않습니다. 이것을, BULMA CSS 를 사용하여, </p><p><br>카드형태로 나오게 할겁니다. </p><br><a id="more"></a><br><h2 id="todolist-list-html-파일-수정하기"><a href="#todolist-list-html-파일-수정하기" class="headerlink" title="todolist_list.html 파일 수정하기"></a>todolist_list.html 파일 수정하기</h2><br><p>templates/todo/todolist_list.html 파일을 아래와 같이 수정해 줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 목록</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"columns"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card column"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-header-title"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        할일 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-header-icon"</span> <span class="attr">aria-label</span>=<span class="string">"more options"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fas fa-angle-down"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        해야 할일 : </span><span class="template-variable">&#123;&#123; todo.description|<span class="name">truncatechars</span>:30 &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        데드 라인 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"card-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-primary is-fullwidth"</span>&gt;</span>더보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-warning is-fullwidth"</span>&gt;</span>수정하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"card-footer-item"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button is-danger is-fullwidth"</span>&gt;</span>삭제하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><br><p>파일을 수정하고, 서버를 시작한다음, </p><p><br><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a> 으로 접속해 보면, 아래와 같이 투두 리스트 정보가 카드 형태로 나옵니다. </p><br><img src="/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/image2.png" class=""> <br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>디자인이 많이 아쉽습니다..<br></p><p>역시 부트스트랩이 컴포넌트도 더 많은거 같고, 예제도 더 많아서 사용하기 편리한거 같습니다. <br><br></p><p>Bulma 는 예제도, 설명도, CSS 사이즈 자체도 좀 빈약한 감이 있습니다. </p> <br><p>더보기, 수정하기, 삭제하기 버튼을 추가하게 되어서. 매우 일이 커지게 된것 같습니다만.. </p><p>진행 하면서 알아가는것이 클테니.. 계속 진행 합니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/24/TodoList-9%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B9%B4%EB%93%9C%ED%98%95%ED%83%9C%EB%A1%9C-%EA%BE%B8%EB%AF%B8%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 8편 - 프로젝트 Templates 설정</title>
      <link>http://djangojeng-e.github.io/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/</link>
      <guid>http://djangojeng-e.github.io/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/</guid>
      <pubDate>Sat, 23 May 2020 02:29:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;이전 포스팅에서, &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;BULMA CSS를 프로젝트에서 사용하기 위한 준비를 하였습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;static 폴더안에 Bulma 폴더가 생성되고, 그안에 CSS 폴더안에, style.css 파일이 생성되었습니다. &lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;p&gt;이제 이 CSS 를 적용한 기본 템플릿을 생성하고, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이 기본 템플릿을 다른 페이지들이 상속받아 사용하게 해봅니다. &lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&quot;Templates-폴더-생성&quot;&gt;&lt;a href=&quot;#Templates-폴더-생성&quot; class=&quot;headerlink&quot; title=&quot;Templates 폴더 생성&quot;&gt;&lt;/a&gt;Templates 폴더 생성&lt;/h2&gt;&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>이전 포스팅에서, </p><br><p>BULMA CSS를 프로젝트에서 사용하기 위한 준비를 하였습니다. </p><p><br>static 폴더안에 Bulma 폴더가 생성되고, 그안에 CSS 폴더안에, style.css 파일이 생성되었습니다. </p><br><br><p>이제 이 CSS 를 적용한 기본 템플릿을 생성하고, </p><p><br>이 기본 템플릿을 다른 페이지들이 상속받아 사용하게 해봅니다. </p><br><h2 id="Templates-폴더-생성"><a href="#Templates-폴더-생성" class="headerlink" title="Templates 폴더 생성"></a>Templates 폴더 생성</h2><br><a id="more"></a><br><p>프로젝트 폴더안에, templates 폴더를 생성합니다.</p><p><br>그리고, 그 폴더안에, base.html 파일을 생성합니다. 아래 트리 구조 형태로 생성합니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   ├── asgi.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── db.sqlite3</span><br><span class="line">├── manage.py</span><br><span class="line">├── requirements.txt</span><br><span class="line">├── static</span><br><span class="line">│   └── bulma</span><br><span class="line">│       ├── css</span><br><span class="line">│       │   ├── style.css</span><br><span class="line">│       │   ├── style.css.map</span><br><span class="line">│       │   └── style.min.css</span><br><span class="line">│       └── sass</span><br><span class="line">│           ├── package.json</span><br><span class="line">│           ├── package-lock.json</span><br><span class="line">│           └── style.sass</span><br><span class="line">├── templates</span><br><span class="line">│   └── base.html</span><br><span class="line">└── todo</span><br><span class="line">    ├── admin.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    │   ├── 0001_initial.py</span><br><span class="line">    │   ├── 0002_auto_20200511_1242.py</span><br><span class="line">    │   ├── __init__.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── templates</span><br><span class="line">    │   └── todo</span><br><span class="line">    │       └── todo-lists.html</span><br><span class="line">    ├── tests.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── views.py</span><br></pre></td></tr></table></figure><br><br><h2 id="생성된-templates-폴더-설정하기"><a href="#생성된-templates-폴더-설정하기" class="headerlink" title="생성된 templates 폴더 설정하기"></a>생성된 templates 폴더 설정하기</h2><br><p>생성된 templates 폴더를, </p><p><br>프로젝트의 templates 폴더로 사용하기 위해서, <br>config/settings.py 파일에 templates  폴더를 지정해주어야 합니다. </p><br><p>settings.py 파일안에, TEMPLATES 부분에, DIR 값을 아래와 같이 설정해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># settings.py</span></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)], <span class="comment"># Templates folder 설정 </span></span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="base-html-파일-꾸미기"><a href="#base-html-파일-꾸미기" class="headerlink" title="base.html 파일 꾸미기"></a>base.html 파일 꾸미기</h2><br><p>templates/base.html 파일은, 다른 템플릿 페이지들이 상속받아서 사용할 페이지 입니다. <br></p><p>base.html 파일을 아래와 같이 생성해 줍니다. 이 파일은 BULMA CSS 프레임워크가 적용되어 있고, <br>이 파일을 상속받는 다른 페이지들도, BULMA CSS 적용이 될것입니다. </p><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><p>위와 같은 구조를 만들었으면, <br></p><p>이제 BULMA CSS 프레임워크를 이용하여, 기본 레이아웃 구조를 만들어 줍니다. <br></p><p><br><br></p><p>첫번째로, 네비게이션 바를 만들어 놓을겁니다. <br></p><p>이 네비게이션 바를 base.html 파일에 만들어놓고, <br>다른 페이지들이 이 base.html 파일을 확장하여 사용하면, <br></p><p>base.html 파일에 있는 네비게이션 바가, 기본으로 다른 페이지들에도 보이게 될것입니다. <br></p><p><br><br></p><p>Bulma CSS Navbar  를 적용하기 위해서, 아래 사이트를 참조합니다. </p><br><p><a href="https://bulma.io/documentation/components/navbar/" target="_blank" rel="noopener">https://bulma.io/documentation/components/navbar/</a></p><br><p>이곳에 나와 있는 Basic Navbar 를 조금 수정하여, 사용할것입니다. <br></p><p>위에 작성한, base.html 파일에, 이 Bulma Navbar 를 아래와 같이 수정하여 붙여 놓습니다. </p><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"has-navbar-fixed-top"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List - </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar is-fixed-top"</span> <span class="attr">role</span>=<span class="string">"navigation"</span> <span class="attr">aria-label</span>=<span class="string">"main navigation"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'images/todo_list.jpg' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"112"</span> <span class="attr">height</span>=<span class="string">"28"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-burger burger"</span> <span class="attr">aria-label</span>=<span class="string">"menu"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">data-target</span>=<span class="string">"navbarBasicExample"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbarBasicExample"</span> <span class="attr">class</span>=<span class="string">"navbar-menu"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-end"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          Home</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          To Do Lists</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item has-dropdown is-hoverable"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-link"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            More</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-dropdown"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              About</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Jobs</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Contact</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">"navbar-divider"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Report an issue</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buttons"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-primary"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"button is-light"</span>&gt;</span></span></span><br><span class="line"><span class="xml">              Log in</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'images/main.jpg' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml">   </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="todolist-list-html-을-메인페이지로-사용"><a href="#todolist-list-html-을-메인페이지로-사용" class="headerlink" title="todolist_list.html 을 메인페이지로 사용"></a>todolist_list.html 을 메인페이지로 사용</h2><br><p>base.html 파일을 확장하는, templates/todollist_list.html 파일을 만들고, <br></p><p>여기에 Todo list 들이 나오게 할겁니다. </p><p><br><br></p><ol><li><p>templates/todolist_list.html  파일 생성</p></li><li><p>todo/views.py 파일 수정 </p></li><li><p>todo/urls.py 파일 수정 </p></li></ol><br><h3 id="templates-todolist-list-html-파일-생성후-작성"><a href="#templates-todolist-list-html-파일-생성후-작성" class="headerlink" title="templates/todolist_list.html 파일 생성후 작성"></a>templates/todolist_list.html 파일 생성후 작성</h3><p><br><br></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">할일 목록</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>할일 제목 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>데드라인 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="todo-views-py-파일-수정"><a href="#todo-views-py-파일-수정" class="headerlink" title="todo/views.py 파일 수정"></a>todo/views.py 파일 수정</h3><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoList_images</span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(generic.ListView)</span>:</span></span><br><span class="line">    context_object_name = <span class="string">'to_do_list'</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all()</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="config-urls-py-파일-수정"><a href="#config-urls-py-파일-수정" class="headerlink" title="config/urls.py 파일 수정"></a>config/urls.py 파일 수정</h3><p><br><br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">''</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><p>위와 같은 작업을 마치고 나서, </p><br><blockquote><p>서버를 시작하고 </p><p><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a> 으로 접속하면, </p><p>아래와 같은 화면이 나옵니다. </p></blockquote><br><img src="/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/image1.png" class=""><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><p><br><br></p><p>아직 익숙치 않아서, 여러가지로 꼬이고 꼬였지만, 레슨이 하나 있었습니다.<br></p><br><p>View 에서 ListView 클래스를 사용하는데. <br></p><p>예네는 templates 을, templates/todolist_list.html 파일에서 찾습니다;;; <br><br>이 파일이 없으면, 렌더가 안되서. </p><p>이 파일을 생성하고 메인 url 로 설정해 주었습니다. </p><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/23/TodoList-8%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Templates-%EC%84%A4%EC%A0%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 7편 - BULMA CSS 적용하기</title>
      <link>http://djangojeng-e.github.io/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 22 May 2020 06:32:33 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Bulma-CSS-Framework-적용&quot;&gt;&lt;a href=&quot;#Bulma-CSS-Framework-적용&quot; class=&quot;headerlink&quot; title=&quot;Bulma CSS Framework 적용&quot;&gt;&lt;/a&gt;Bulma CSS Framework 적용&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;img src=&quot;/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;

&lt;br&gt;

&lt;br&gt;

&lt;p&gt;부트스트랩과 비슷한 CSS Framework 의 하나인 BULMA 를, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이번 투두 리스트 미니 프로젝트에 적용해 보려 합니다.&lt;br&gt; 처음 접해보는 CSS 프레임워크지만, 시도한번 해보려 합니다. &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Bulma-CSS-Framework-적용"><a href="#Bulma-CSS-Framework-적용" class="headerlink" title="Bulma CSS Framework 적용"></a>Bulma CSS Framework 적용</h2><br><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image1.png" class=""><br><br><p>부트스트랩과 비슷한 CSS Framework 의 하나인 BULMA 를, </p><p><br>이번 투두 리스트 미니 프로젝트에 적용해 보려 합니다.<br> 처음 접해보는 CSS 프레임워크지만, 시도한번 해보려 합니다. </p><br><a id="more"></a><br><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><br><p>CSS 를 프로젝트에 적용하기 위한 참고 사이트는 아래와 같습니다.</p><br><ol><li>django-bulma 패키지  <a href="https://github.com/timonweb/django-bulma" target="_blank" rel="noopener">https://github.com/timonweb/django-bulma</a></li><li>bulma 공식 페이지 <a href="https://bulma.io" target="_blank" rel="noopener">https://bulma.io</a> </li></ol><br><br><h2 id="django-bulma-패키지-설치"><a href="#django-bulma-패키지-설치" class="headerlink" title="django-bulma 패키지 설치"></a>django-bulma 패키지 설치</h2><br><br><p>아래 명령어를 실행하여, bulma  프레임워크를 장고 프로젝트에 설치해 줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-bulma</span><br></pre></td></tr></table></figure><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image2.png" class=""><br><h2 id="settings-py-파일-INSTALLED-APPS-등록"><a href="#settings-py-파일-INSTALLED-APPS-등록" class="headerlink" title="settings.py 파일 INSTALLED_APPS 등록"></a>settings.py 파일 INSTALLED_APPS 등록</h2><br><br><p>config/settings.py 파일안, INSTALLED_APPS 에 아래와 같이,</p><p><br>bulma 를 등록해줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="string">'todo'</span>,</span><br><span class="line">    <span class="string">'django_extensions'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Bulma CSS Framework </span></span><br><span class="line">    <span class="string">'bulma'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><br><h2 id="Bulma-프레임워크를-사용할-static-폴더"><a href="#Bulma-프레임워크를-사용할-static-폴더" class="headerlink" title="Bulma 프레임워크를 사용할 static 폴더"></a>Bulma 프레임워크를 사용할 static 폴더</h2><br><p>프레임워크 파일들을 가지고 있을, 정적파일 폴더를 생성하고 설정해 줍니다.  </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   ├── asgi.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── db.sqlite3</span><br><span class="line">├── manage.py</span><br><span class="line">├── requirements.txt</span><br><span class="line">├── static            <span class="comment"># 프로젝트 폴더에, static 폴더를 생성 (manage.py와 같은 위치)</span></span><br><span class="line">└── todo</span><br><span class="line">    ├── admin.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── templates</span><br><span class="line">    │   └── todo</span><br><span class="line">    │       └── todo-lists.html</span><br><span class="line">    ├── tests.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── views.py</span><br></pre></td></tr></table></figure><p><br><br></p><blockquote><p>static 폴더 생성을 완료 하였으면, </p><p>settings.py 파일을 열고, STATICFILES_DIRS = [] 을 설정해주어야 합니다.</p></blockquote><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/3.0/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, <span class="string">'static'</span>)]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="Bulma-프레임워크-복사하기"><a href="#Bulma-프레임워크-복사하기" class="headerlink" title="Bulma 프레임워크 복사하기"></a>Bulma 프레임워크 복사하기</h2><p><br><br></p><p>static 폴더에, 수동으로 BULMA 프레임워크 파일들을 복사해주어도 괜찮지만, </p><p><br>아래 명령어를 실행해서, bulma css 파일들을 static 폴더로 복사해 올수 있습니다.<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py copy_bulma_static_into_project</span><br></pre></td></tr></table></figure><br><p>명령어를 실행하면,<br>static 폴더안에, bulma 폴더가 생기고, 그 안에 css 파일들이 들어 있는것을 확인 할수 있습니다.<br><br></p><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image3.png" class=""><p><br><br></p><h2 id="bulma-CSS-를-템플릿에-적용하기"><a href="#bulma-CSS-를-템플릿에-적용하기" class="headerlink" title="bulma CSS 를 템플릿에 적용하기"></a>bulma CSS 를 템플릿에 적용하기</h2><br><p>CSS 파일들을 프로젝트에 가져왔으면, 이제 적용해 보아야 겟죠? </p><br><h3 id="base-html-파일-생성하기"><a href="#base-html-파일-생성하기" class="headerlink" title="base.html 파일 생성하기"></a>base.html 파일 생성하기</h3><br><p>프로젝트 전반에 걸쳐서, 이 프레임워크를 적용시킬수 있는 base.html 파일을</p><p><br>templates/base.html 경로에 생성을 합니다<br><br></p><p>이 base.html 파일에, static 폴더에 있는 bulma css 파일들을 적용하고. <br>이 base.html 파일이 다른 페이지들에 확장되서 쓰여질겁니다.</p><br><p>templates/base.html 파일을 아래와 같이 생성하고 작성해줍니다. </p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">load</span></span> static %&#125;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">class</span>=<span class="string">"has-navbar-fixed-top"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>To do List - </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">static</span></span> 'bulma/css/style.css' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> head %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> contents %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><h3 id="todolist-템플릿을-수정"><a href="#todolist-템플릿을-수정" class="headerlink" title="todolist 템플릿을 수정"></a>todolist 템플릿을 수정</h3><p><br>이전 포스팅에 만들어 놓은 투두리스트 - 리스트페이지인 <br></p><p>todo/templates/todo/todo-lists.html 파일 상단에 아래와 같은 내용을 추가해주고, 수정해 줍니다<br><br></p><p>base.html 파일을 상속 받습니다.</p><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'base.html' %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">내가 할일 뭐지?</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>할일 제목 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>데드라인 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> content %&#125;</span></span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="Bulma-프레임워크-적용-확인"><a href="#Bulma-프레임워크-적용-확인" class="headerlink" title="Bulma 프레임워크 적용 확인"></a>Bulma 프레임워크 적용 확인</h2><br><p>투두리스트를 리스트 해주는 페이지에 다시 접속해서, </p><p><br>CSS 프레임워크가 잘 적용 되었을지 확인 해봅니다 <br><br></p><p>적용전, </p><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image4.png" class=""><p><br><br></p><p>적용후, </p><br><img src="/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/image5.png" class=""><p><br><br></p><p>해당 이미지는, 기본 템플릿만 적용한 이미지이지만, <br>어쨋든, 글씨꼴이나 색깔이 느낌이 전반적으로 바뀌었다면, 잘 적용 된것입니다. </p><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/22/TodoList-7%ED%8E%B8-BULMA-CSS-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 6편 - 리스트 페이지 만들기</title>
      <link>http://djangojeng-e.github.io/2020/05/21/TodoList-6%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/21/TodoList-6%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Thu, 21 May 2020 09:19:30 GMT</pubDate>
      <description>
      
        &lt;p&gt;Todo 리스트가 출력될 화면을 만들어 볼겁니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;현재까지는, 서버를 실행하고, 브라우저로 접속하면, 아래와 같은 화면이 뜹니다. &lt;/p&gt;
&lt;br&gt;

&lt;img src=&quot;/2020/05/21/TodoList-6%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;

&lt;br&gt;

&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Todo 리스트가 출력될 화면을 만들어 볼겁니다. </p><p><br>현재까지는, 서버를 실행하고, 브라우저로 접속하면, 아래와 같은 화면이 뜹니다. </p><br><img src="/2020/05/21/TodoList-6%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/image1.png" class=""><br><br><a id="more"></a><h2 id="Todo리스트를-화면에-출력해줄-View-작성하기"><a href="#Todo리스트를-화면에-출력해줄-View-작성하기" class="headerlink" title="Todo리스트를 화면에 출력해줄 View 작성하기"></a>Todo리스트를 화면에 출력해줄 View 작성하기</h2><br><p>현재 데이터베이스에는, Todo List 두개가 추가 되어 있습니다. (수동으로 생성해줌) </p><p><br>이것을 화면에 뿌려줄 페이지가 필요한데, 페이지에 화면을 출력해 주기 위해서는,</p><p><br>이를 처리하는 함수나 클래스가 필요합니다. </p><p><br>이 함수나 클래스들은, todo/views.py 파일에 작성 합니다. 이를 클래스뷰를 사용하여 진행해 봅니다. </p><p><br>todo/views.py 파일을 아래와 같이 작성해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoList_images </span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic </span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here. </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(generic.ListView)</span>:</span></span><br><span class="line">    context_object_name = <span class="string">'to_do_list'</span></span><br><span class="line">    template_name = <span class="string">'todo/todo-lists.html'</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> TodoList.objects.all()</span><br></pre></td></tr></table></figure><br><br><h2 id="View-를-통해-그려줄-페이지-템플릿-생성"><a href="#View-를-통해-그려줄-페이지-템플릿-생성" class="headerlink" title="View 를 통해 그려줄 페이지 (템플릿) 생성"></a>View 를 통해 그려줄 페이지 (템플릿) 생성</h2><br><p>todo/templates/todo/ 폴더를 생성한 후에,</p><p><br>폴더 안에, todo-lists.html 파일을 생성하고, 아래와 같이 작성해 줍니다. </p><br><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> todo <span class="keyword">in</span> to_do_list %&#125;</span><span class="xml">   </span></span><br><span class="line"><span class="xml">    # to_do_list 는 클래스에서 지정된 객체 리스트, context_object_name 에 지정된 값 </span></span><br><span class="line"><span class="xml">    # 이 객체에는, 모든 TodoList 를 포함한, TodoList.objects.all() 을 포함 </span></span><br><span class="line"><span class="xml">    # def get_queryset(self) 를 통해서 객체를 포함함 </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>할일 제목 : </span><span class="template-variable">&#123;&#123; todo.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>생성 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_created &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>데드라인 날짜 : </span><span class="template-variable">&#123;&#123; todo.date_deadline &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>남은 일수 : </span><span class="template-variable">&#123;&#123; todo.remaining_days &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><br><h2 id="요청을-보낼-URL-설정"><a href="#요청을-보낼-URL-설정" class="headerlink" title="요청을 보낼 URL 설정"></a>요청을 보낼 URL 설정</h2><p><br><br></p><p>todo/urls.py 파일을 설정해 줍니다 </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin </span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path </span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> IndexView </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, IndexView.as_view(), name=<span class="string">'todolist'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br><p>config/urls.py 파일에서, todo/urls.py 파일을 연결해 줍니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'todo/'</span>, include(<span class="string">'todo.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="투두리스트-화면-확인하기"><a href="#투두리스트-화면-확인하기" class="headerlink" title="투두리스트 화면 확인하기"></a>투두리스트 화면 확인하기</h2><p><br><br></p><p>python manage.py runserver 를 실행하여, 서버를 시작한 후에, </p><p><a href="http://127.0.0.1:8000/todo/" target="_blank" rel="noopener">http://127.0.0.1:8000/todo/</a> 에 접속합니다. </p><br><p>view 에서 투두리스트를 작업하여, 화면에 그려주고 있다는것을 확인할수 있습니다<br><br></p><img src="/2020/05/21/TodoList-6%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/image2.png" class=""><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/21/TodoList-6%ED%8E%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 5편 - 어드민 수정하기</title>
      <link>http://djangojeng-e.github.io/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 19 May 2020 18:29:57 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todo-List-어드민-수정하기&quot;&gt;&lt;a href=&quot;#Todo-List-어드민-수정하기&quot; class=&quot;headerlink&quot; title=&quot;Todo List 어드민 수정하기&quot;&gt;&lt;/a&gt;Todo List 어드민 수정하기&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;지난 포스팅에서, 모델이 잘 작동하는것을 확인 해 보았습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;하지만, 어드민 페이지에서 todo  를 추가할때 뭔가 아쉬운점이 있습니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;분명히, Todo 에는 연관된 이미지도 파일도 올라갈수 있어야 하는데. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;어드민에 등록되어 잇는 Todo 는, 아주 기본적인 필드들만 가진 TodoList 를 생성할수 있습니다. &lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;img src=&quot;/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;

&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;TodoList 를 생성할때, &lt;/p&gt;
&lt;p&gt;이미지와 파일도 추가할수 있게 어드민에 등록해 보겠습니다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todo-List-어드민-수정하기"><a href="#Todo-List-어드민-수정하기" class="headerlink" title="Todo List 어드민 수정하기"></a>Todo List 어드민 수정하기</h2><br><p>지난 포스팅에서, 모델이 잘 작동하는것을 확인 해 보았습니다. </p><p><br>하지만, 어드민 페이지에서 todo  를 추가할때 뭔가 아쉬운점이 있습니다. </p><br><p>분명히, Todo 에는 연관된 이미지도 파일도 올라갈수 있어야 하는데. </p><p><br>어드민에 등록되어 잇는 Todo 는, 아주 기본적인 필드들만 가진 TodoList 를 생성할수 있습니다. </p><br><br><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image1.png" class=""><br><blockquote><p>TodoList 를 생성할때, </p><p>이미지와 파일도 추가할수 있게 어드민에 등록해 보겠습니다. </p></blockquote><br><a id="more"></a> <br><h2 id="todo-admin-py-파일-수정하기"><a href="#todo-admin-py-파일-수정하기" class="headerlink" title="todo/admin.py 파일 수정하기"></a>todo/admin.py 파일 수정하기</h2><br><br><p>inline 클래스들을 작성해주고, </p><p>TodoListAdmin 클래스의 inlines = [] 에 넣어주면 됩니다. </p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin </span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoList_images </span><br><span class="line"><span class="comment"># Register your models here. </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList_filesInline</span><span class="params">(admin.StackedInline)</span>:</span></span><br><span class="line">    model = TodoList_files </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList_imageInline</span><span class="params">(admin.StackedInline)</span>:</span></span><br><span class="line">    model = TodoList_images</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoListAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    inlines = [TodoList_filesInline, TodoList_imageInline]</span><br><span class="line">    list_display = (<span class="string">'name'</span>, <span class="string">'description'</span>, <span class="string">'date_created'</span>, <span class="string">'date_deadline'</span>,                        <span class="string">'remaining_days'</span>)</span><br><span class="line">    list_filter = [<span class="string">'date_created'</span>]</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">admin.site.register(TodoList, TodoListAdmin)</span><br></pre></td></tr></table></figure><br><p>어드민을 위와 같이 고쳐주면, 어드민에서 TodoList 의 표시가 마법처럼 바뀝니다. </p><br><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image2.png" class=""><p><br><br></p><blockquote><p>그리고, 추가할때 </p><p>파일과 이미지도 넣을수 있습니다. </p></blockquote><br><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image3.png" class=""><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image4.png" class=""><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image5.png" class=""><p><br><br></p><p>파일 하나, 이미지 하나를 추가한뒤에, 저장 버튼을 눌러줍니다. </p><p><br>파일과 이미지를 가지고 있는 투두리스트 생성에 성공 했습니다.<br><br></p><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image6.png" class=""><p><br><br></p><p>모델에서 파일이나, 이미지를 upload 할시에, 저장할 폴더를 생성해 주었기 때문에,<br><br>todo/images 폴더와, todo/files 폴더가 생성된것을 확인 할수 있습니다. <br><br></p><img src="/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/image7.png" class=""><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>admin.py 파일을 어떻게 수정해 주었는지 복습하고 넘어갑니다. </p><br><p>Inline 클래스들을 생성해주고 (model 을 지정함).<br><br></p><p>기존 TodoListAdmin(models.ModelAdmin) 클래스에서, inlines = [] 에 넣어줍니다. </p><p>list_display 에 모델에 있는 필드명들을 넣어주고, list_filter 는 생성날짜 기준으로 해주었습니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/20/TodoList-5%ED%8E%B8-%EC%96%B4%EB%93%9C%EB%AF%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 4편 - 모델 확인하기</title>
      <link>http://djangojeng-e.github.io/2020/05/19/TodoList-4%ED%8E%B8-%EB%AA%A8%EB%8D%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/19/TodoList-4%ED%8E%B8-%EB%AA%A8%EB%8D%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 19 May 2020 11:12:31 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todo-List-모델-확인하기&quot;&gt;&lt;a href=&quot;#Todo-List-모델-확인하기&quot; class=&quot;headerlink&quot; title=&quot;Todo List 모델 확인하기&quot;&gt;&lt;/a&gt;Todo List 모델 확인하기&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;p&gt;지난 포스팅에 작성했던 모델이 잘 작동하는지 확인을 해보아야 겠습니다. &lt;/p&gt;
&lt;br&gt;

&lt;p&gt;어드민을 통해 확인을 진행 해보려 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;어드민에 todo 앱을 등록해 주는데서 부터 시작해 봅니다. &lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&quot;어드민-페이지에-todo-앱-등록하기&quot;&gt;&lt;a href=&quot;#어드민-페이지에-todo-앱-등록하기&quot; class=&quot;headerlink&quot; title=&quot;어드민 페이지에 todo 앱 등록하기&quot;&gt;&lt;/a&gt;어드민 페이지에 todo 앱 등록하기&lt;/h2&gt;&lt;p&gt;&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todo-List-모델-확인하기"><a href="#Todo-List-모델-확인하기" class="headerlink" title="Todo List 모델 확인하기"></a>Todo List 모델 확인하기</h2><br><br><p>지난 포스팅에 작성했던 모델이 잘 작동하는지 확인을 해보아야 겠습니다. </p><br><p>어드민을 통해 확인을 진행 해보려 합니다. </p><p><br>어드민에 todo 앱을 등록해 주는데서 부터 시작해 봅니다. </p><br><h2 id="어드민-페이지에-todo-앱-등록하기"><a href="#어드민-페이지에-todo-앱-등록하기" class="headerlink" title="어드민 페이지에 todo 앱 등록하기"></a>어드민 페이지에 todo 앱 등록하기</h2><p><br><a id="more"></a></p><p>todo/admin.py 파일을 열고, 아래와 같이 어드민에, TodoList 모델을 등록해 줍니다. </p><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin </span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> TodoList, TodoList_files, TodoLies_images </span><br><span class="line"><span class="comment"># Register your models here. </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoListAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList_imagesAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList_filesAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">admin.site.register(TodoList, TodoListAdmin)</span><br><span class="line">admin.site.register(TodoList_images, TodoList_imagesAdmin)</span><br><span class="line">admin.site.register(TodoList_images, TodoList_filesAdmin)</span><br></pre></td></tr></table></figure><br><br><h2 id="어드민-관리자-계정-생성하기"><a href="#어드민-관리자-계정-생성하기" class="headerlink" title="어드민 관리자 계정 생성하기"></a>어드민 관리자 계정 생성하기</h2><br><p>아래 명령어를 실행해서, 관리자 계정 하나를 생성합니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><br><p>계정 실행을 완료 하였으면, python manage.py runserver 를 실행하여, <br>서버를 실행한다음, 어드민 사이트로 접속 합니다.</p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><br><br><p><a href="http://127.0.0.1:8000/admin/" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/</a> 에 접속하여 로그인 하면,</p><p>아래와 같은 화면을 볼수 있을겁니다. </p><br><br><img src="/2020/05/19/TodoList-4%ED%8E%B8-%EB%AA%A8%EB%8D%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/image1.png" class=""><br><br><h2 id="Todo-List-하나-추가해-보기"><a href="#Todo-List-하나-추가해-보기" class="headerlink" title="Todo List 하나 추가해 보기"></a>Todo List 하나 추가해 보기</h2><br><p>Todo Lists 에 Add 버튼을 눌러서, todo list 하나를 추가해 보려 합니다. </p><p><br>아래와 같이, 디테일을 입력후, SAVE 버튼을 눌러봅니다.<br></p><br><img src="/2020/05/19/TodoList-4%ED%8E%B8-%EB%AA%A8%EB%8D%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/image2.png" class=""><br><p>아래와 같이 잘 생성이 됩니다 </p><p><br><br></p><img src="/2020/05/19/TodoList-4%ED%8E%B8-%EB%AA%A8%EB%8D%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/image3.png" class=""><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>아쉬운대로, 일단 모델의 기본 동작은 잘 되고 있는것 같습니다.<br></p><p>하지만, 프로젝트 진행중에, 모델을 다시 수정해 줘야 할일이 올지 몰릅니다. </p><br>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/19/TodoList-4%ED%8E%B8-%EB%AA%A8%EB%8D%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 3편 - 모델설계하기</title>
      <link>http://djangojeng-e.github.io/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 18 May 2020 08:30:22 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Todo-List-모델-설계하기&quot;&gt;&lt;a href=&quot;#Todo-List-모델-설계하기&quot; class=&quot;headerlink&quot; title=&quot;Todo List 모델 설계하기&quot;&gt;&lt;/a&gt;Todo List 모델 설계하기&lt;/h2&gt;&lt;br&gt;

&lt;br&gt;

&lt;h3 id=&quot;INSTALLED-APPS-에-앱등록하기&quot;&gt;&lt;a href=&quot;#INSTALLED-APPS-에-앱등록하기&quot; class=&quot;headerlink&quot; title=&quot;INSTALLED_APPS 에 앱등록하기&quot;&gt;&lt;/a&gt;INSTALLED_APPS 에 앱등록하기&lt;/h3&gt;&lt;br&gt;

&lt;p&gt;config/settings.py 파일에 INSTALLED_APPS 안에, todo 앱을 등록해 줍니다. &lt;/p&gt;
&lt;br&gt;

&lt;img src=&quot;/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/image1.png&quot; class=&quot;&quot;&gt;

&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Todo-List-모델-설계하기"><a href="#Todo-List-모델-설계하기" class="headerlink" title="Todo List 모델 설계하기"></a>Todo List 모델 설계하기</h2><br><br><h3 id="INSTALLED-APPS-에-앱등록하기"><a href="#INSTALLED-APPS-에-앱등록하기" class="headerlink" title="INSTALLED_APPS 에 앱등록하기"></a>INSTALLED_APPS 에 앱등록하기</h3><br><p>config/settings.py 파일에 INSTALLED_APPS 안에, todo 앱을 등록해 줍니다. </p><br><img src="/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/image1.png" class=""><br><a id="more"></a><blockquote><p>settings.py 파일을 수정해주는 김에, </p><p>언어설정과, 타임존 세팅까지 해줍니다. </p></blockquote><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE - <span class="string">'ko-kr'</span></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Seoul'</span></span><br></pre></td></tr></table></figure><br><br><img src="/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/image2.png" class=""><br><br><h2 id="모델-계획하기"><a href="#모델-계획하기" class="headerlink" title="모델 계획하기"></a>모델 계획하기</h2><br><blockquote><p>내가 할일 이라는, Todo List 의 모델을 설계해 봅니다. </p><p>기본적으로, 아래와 같이 테이블로 정리된 사항들을 가지고 있었으면 좋겠습니다. </p></blockquote><br><table><thead><tr><th><strong>번호</strong></th><th><strong>필드명</strong></th><th><strong>설명</strong></th><th><strong>데이터타입</strong></th></tr></thead><tbody><tr><td>1</td><td>name</td><td>내가 할일에 대한 짧은 이름</td><td>문자</td></tr><tr><td>2</td><td>description</td><td>내가 할일에 대한 정보</td><td>긴 문자열</td></tr><tr><td>3</td><td>date_created</td><td>할일 생성 날짜</td><td>날짜</td></tr><tr><td>4</td><td>date_deadline</td><td>데드라인 날짜</td><td>날짜</td></tr><tr><td>5</td><td>images_related</td><td>관련된 이미지 (선택사항)</td><td>이미지</td></tr><tr><td>6</td><td>files_related</td><td>관련된 파일들 (선택사항)</td><td>파일</td></tr></tbody></table><br><br><p>하나의 TodoList 는, 관련된 images 와 files 필드들을 가지어, </p><p>할일에 대한 더 많은 세부정보를 첨부할수 있게 해주었습니다. 이를 모두 한 테이블에 넣기 보다는, </p><p><br> <br></p><p>아래와 같이,  3가지 테이블로 나누고, 필드들을 정리해보았습니다. </p><br><table><thead><tr><th><strong>TodoList</strong></th><th></th><th><strong>TodoList_images</strong></th><th></th><th><strong>TodoList_files</strong></th><th></th></tr></thead><tbody><tr><td>필드명</td><td>데이터 타입</td><td>필드명</td><td>데이터 타입</td><td>필드명</td><td>데이터 타입</td></tr><tr><td>name</td><td>CharField</td><td>todo</td><td>ForeignKey</td><td>todo</td><td>ForeignKey</td></tr><tr><td>description</td><td>TextField</td><td>image</td><td>ImageField</td><td>file</td><td>FileField</td></tr><tr><td>date_created</td><td>DateField()</td><td></td><td></td><td></td><td></td></tr><tr><td>date_deadline</td><td>DateField()</td><td></td><td></td><td></td><td></td></tr></tbody></table><br><br><blockquote><p>하나의 Todo 는 여러개의 이미지들을 가질수 있고, </p><p>하나의 Todo 는 여러개의 파일들을 가질수 있습니다. </p><p>두 테이블은 하나의 Todo 에 ForeignKey 로 연결 됩니다. </p></blockquote><br><br><h2 id="models-py-파일-작성하기"><a href="#models-py-파일-작성하기" class="headerlink" title="models.py 파일 작성하기"></a>models.py 파일 작성하기</h2><br><br><p>위에서 계획했던 모델링 대로, models.py 파일을 실제로 작성해 봅니다. </p><p><br>저는 아래와 같이 작성해 주었습니다. </p><br><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">40</span>, verbose_name=<span class="string">"할일제목"</span>)</span><br><span class="line">    description = models.TextField(max_length=<span class="number">200</span>, verbose_name=<span class="string">"할일세부사항"</span>)</span><br><span class="line">    date_created = models.DateField(auto_now_add=<span class="literal">True</span>, verbose_name=<span class="string">"생성날짜"</span>)</span><br><span class="line">    date_deadline = models.DateField(verbose_name=<span class="string">"데드라인"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remaining_days</span><span class="params">(self)</span>:</span></span><br><span class="line">        delta = self.date_deadline - date.today()</span><br><span class="line">        days = delta.days </span><br><span class="line">        <span class="keyword">return</span> days</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.name&#125;</span> | <span class="subst">&#123;self.description&#125;</span> | <span class="subst">&#123;self.date_created&#125;</span> |   <span class="subst">&#123;self.date_deadline&#125;</span>'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList_images</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    todo = models.ForeignKey(TodoList, on_delete=models.CASCADE)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'todo/images/%Y/%m'</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodoList_files</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    todo = models.ForeignKey(TodoList, on_delete=models.CASCADE)</span><br><span class="line">    files = models.FileField(upload_to=<span class="string">'todo/files/%Y/%m'</span>, blank=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="Images-를-위한-패키지-Pillow-설치"><a href="#Images-를-위한-패키지-Pillow-설치" class="headerlink" title="Images 를 위한 패키지 Pillow 설치"></a>Images 를 위한 패키지 Pillow 설치</h2><p><br><br></p><p>모델을 다 작성한 다음, migrations 를 시도하면, 아래와 같은 오류 메시지가 뜹니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">SystemCheckError: System check identified some issues:</span><br><span class="line"></span><br><span class="line">ERRORS:</span><br><span class="line">todo.TodoList_images.image: (fields.E210) Cannot use ImageField because Pillow is not installed.</span><br><span class="line">        HINT: Get Pillow at https://pypi.org/project/Pillow/ or run <span class="built_in">command</span> <span class="string">"python -m pip install Pillow"</span>.</span><br></pre></td></tr></table></figure><br><p> 이 에러를 해결하기 위해서는, 이미지 파일을 위한 패키지인, pillow 를 설치해야만 합니다. </p><p><br>아래 명령어를 실행하여, 패키지를 설치해 줍니다.<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Pillow</span><br></pre></td></tr></table></figure><p><br><br></p><p>설치가 완료되었으면, makemigrations 와 migrate 를 실행하여, 데이터베이스를 생성해 줍니다. </p><br><h2 id="makemigrations-migrate-해주기"><a href="#makemigrations-migrate-해주기" class="headerlink" title="makemigrations, migrate 해주기"></a>makemigrations, migrate 해주기</h2><br><br><p>python manage.py makemigrations 를 실행, </p><br><img src="/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/image3.png" class=""><br><p>python manage.py migrate 를 실행, </p><br><img src="/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/image4.png" class="">]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/18/TodoList-3%ED%8E%B8-%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 2편 - 프로젝트와 앱 생성하기</title>
      <link>http://djangojeng-e.github.io/2020/05/15/TodoList-2%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%95%B1-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <guid>http://djangojeng-e.github.io/2020/05/15/TodoList-2%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%95%B1-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Thu, 14 May 2020 17:20:35 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;프로젝트-생성하기&quot;&gt;&lt;a href=&quot;#프로젝트-생성하기&quot; class=&quot;headerlink&quot; title=&quot;프로젝트 생성하기&quot;&gt;&lt;/a&gt;프로젝트 생성하기&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;프로젝트 폴더에서, 아래 터미널 명령어를 실행하여, todo li
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="프로젝트-생성하기"><a href="#프로젝트-생성하기" class="headerlink" title="프로젝트 생성하기"></a>프로젝트 생성하기</h2><br><p>프로젝트 폴더에서, 아래 터미널 명령어를 실행하여, todo list 프로젝트 설정 폴더를 생성해 줍니다.  </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject config .</span><br></pre></td></tr></table></figure><br><p>아래와 같은 구조가 나오면 됩니다.</p><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> ~/mini_projects/todolist   master  django<span class="literal">-admin</span> startproject config .</span><br><span class="line">~/mini_projects/todolist   master  ls</span><br><span class="line">config  manage.py  requirements.txt</span><br><span class="line">~/mini_projects/todolist   master  tree</span><br><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   ├── asgi.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── manage.py</span><br><span class="line">└── requirements.txt</span><br></pre></td></tr></table></figure><br><p>프로젝트 설정 폴더가 잘 생성되었으면, 앱을 생성해 줍니다. </p><br><h2 id="프로젝트-앱-생성하기"><a href="#프로젝트-앱-생성하기" class="headerlink" title="프로젝트 앱 생성하기"></a>프로젝트 앱 생성하기</h2><br><blockquote><p>todo 앱을 생성하여,</p><p>todo list 의 등록, 관리, 삭제를 수행하는 어플리케이션을 만들것입니다. </p></blockquote><br><p>아래 명령어를 실행하여, 프로젝트 폴더안에 todo 라는 앱을 만들어 줍시다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp todo</span><br></pre></td></tr></table></figure><br><br><p>생성후의 디렉토리 구조는 아래와 같습니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── config</span><br><span class="line">│   ├── asgi.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── manage.py</span><br><span class="line">├── requirements.txt</span><br><span class="line">└── todo</span><br><span class="line">    ├── admin.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    │   └── __init__.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── tests.py</span><br><span class="line">    └── views.py</span><br></pre></td></tr></table></figure><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>프로젝트와 앱이 생성되었으니, </p><p>이제 개발을 위한 모든 준비가 완료 되었습니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/15/TodoList-2%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%95%B1-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TodoList 1편 - 초기설정</title>
      <link>http://djangojeng-e.github.io/2020/05/15/TodoList-1%ED%8E%B8-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/</link>
      <guid>http://djangojeng-e.github.io/2020/05/15/TodoList-1%ED%8E%B8-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/</guid>
      <pubDate>Thu, 14 May 2020 17:06:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;미니프로젝트-시작&quot;&gt;&lt;a href=&quot;#미니프로젝트-시작&quot; class=&quot;headerlink&quot; title=&quot;미니프로젝트 시작&quot;&gt;&lt;/a&gt;미니프로젝트 시작&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;간단한 todolist 프로젝트를 진행하며, &lt;/p&gt;
&lt;p&gt;&lt;br&gt;이제까지 공부한 내용을 복습도 하고, 그동안 구현하지 못했던것들도 찾으면서 구현해 보려 합니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;내가 할일을 생성하고, 업데이트하고, 삭제하는, Todolist 사이트를 만들어 봅니다. &lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&quot;개발-개요&quot;&gt;&lt;a href=&quot;#개발-개요&quot; class=&quot;headerlink&quot; title=&quot;개발 개요&quot;&gt;&lt;/a&gt;개발 개요&lt;/h2&gt;&lt;br&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;개발 정보&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;디테일&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;python version&lt;/td&gt;
&lt;td&gt;3.8.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;os&lt;/td&gt;
&lt;td&gt;ubuntu18.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;django version&lt;/td&gt;
&lt;td&gt;3.06&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSS Framework&lt;/td&gt;
&lt;td&gt;Bulma&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;개발 툴&lt;/td&gt;
&lt;td&gt;visual studio code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;배포&lt;/td&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;데이터베이스&lt;/td&gt;
&lt;td&gt;sqlite3 혹은 postgreSQL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;개발내역은, 프로젝트의 진행 상황과 숙련도에 따라서 달라질수 있음. &lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="미니프로젝트-시작"><a href="#미니프로젝트-시작" class="headerlink" title="미니프로젝트 시작"></a>미니프로젝트 시작</h2><br><p>간단한 todolist 프로젝트를 진행하며, </p><p><br>이제까지 공부한 내용을 복습도 하고, 그동안 구현하지 못했던것들도 찾으면서 구현해 보려 합니다. </p><p><br>내가 할일을 생성하고, 업데이트하고, 삭제하는, Todolist 사이트를 만들어 봅니다. </p><br><h2 id="개발-개요"><a href="#개발-개요" class="headerlink" title="개발 개요"></a>개발 개요</h2><br><table><thead><tr><th><strong>개발 정보</strong></th><th><strong>디테일</strong></th></tr></thead><tbody><tr><td>python version</td><td>3.8.0</td></tr><tr><td>os</td><td>ubuntu18.04</td></tr><tr><td>django version</td><td>3.06</td></tr><tr><td>CSS Framework</td><td>Bulma</td></tr><tr><td>개발 툴</td><td>visual studio code</td></tr><tr><td>배포</td><td>AWS</td></tr><tr><td>데이터베이스</td><td>sqlite3 혹은 postgreSQL</td></tr></tbody></table><br><ul><li>개발내역은, 프로젝트의 진행 상황과 숙련도에 따라서 달라질수 있음. </li></ul><br><a id="more"></a> <br><br><h2 id="가상환경-세팅"><a href="#가상환경-세팅" class="headerlink" title="가상환경 세팅"></a>가상환경 세팅</h2><br><br><p>터미널에서 아래 명령어를 실행하여, 가상환경을 설정하고, 프로젝트 폴더에 적용해 줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv virtualenv 3.8.0 to-do-list</span><br></pre></td></tr></table></figure><br><p>스크린샷, </p><br><img src="/2020/05/15/TodoList-1%ED%8E%B8-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/image1.png" class=""><br><p>프로젝트 폴더앞에, (to-do-list) 라고 써지면, 잘 적용 된겁니다. </p><br><h2 id="VisualStudioCode-열기"><a href="#VisualStudioCode-열기" class="headerlink" title="VisualStudioCode 열기"></a>VisualStudioCode 열기</h2><br><p>프로젝트 폴더에 가상환경이 잘 적용 되었으면, </p><p>Visual Studio Code 로 해당 프로젝트 폴더를 열어줍니다. </p><br><img src="/2020/05/15/TodoList-1%ED%8E%B8-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/image2.png" class=""><br><br><h3 id="가상환경에-장고-설치"><a href="#가상환경에-장고-설치" class="headerlink" title="가상환경에 장고 설치"></a>가상환경에 장고 설치</h3><br><br><p>가장 중요한 Django 를 설치해 줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><br><img src="/2020/05/15/TodoList-1%ED%8E%B8-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/image3.png" class=""><br><br><blockquote><p>pip list 를 통하여, </p><p>현재 가상환경에 설치된 패키지를 확인해 봅니다. </p><p>Django 3.0.6 이 정상적으로 설치된것을 확인 할수 있습니다. </p></blockquote><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Package    Version</span><br><span class="line">---------- -------</span><br><span class="line">asgiref    3.2.7  </span><br><span class="line">Django     3.0.6  </span><br><span class="line">pip        19.2.3 </span><br><span class="line">pytz       2020.1 </span><br><span class="line">setuptools 41.2.0 </span><br><span class="line">sqlparse   0.3.1  </span><br><span class="line">WARNING: You are using pip version 19.2.3, however version 20.1 is available.</span><br><span class="line">You should consider upgrading via the <span class="string">'pip install --upgrade pip'</span> <span class="built_in">command</span>.</span><br></pre></td></tr></table></figure><br><br><h2 id="가상환경의-패키지-목록"><a href="#가상환경의-패키지-목록" class="headerlink" title="가상환경의 패키지 목록"></a>가상환경의 패키지 목록</h2><p><br><br></p><blockquote><p>pip freeze &gt; requirements.txt 명령어를 실행하여, </p><p>해당 가상환경에 설치된 모든 패키지들을 리스트 해줍니다. </p></blockquote><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p><br><br></p><blockquote><p>이 프로젝트가 나중에 누군가와 공유된다면, </p><p>이 프로젝트를 사용하고 싶은 사람들은, 나중에 아래 명령어를 통해서 </p><p>프로젝트에 들어간 패키지들을 설치하고 사용합니다. </p></blockquote><p><br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>기본적인 개발 환경 설정을 마쳤습니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/15/TodoList-1%ED%8E%B8-%EC%B4%88%EA%B8%B0%EC%84%A4%EC%A0%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Writing your first Django app, part 7 - 5편</title>
      <link>http://djangojeng-e.github.io/2020/05/10/Writing-your-first-Django-app-part-7-5%ED%8E%B8/</link>
      <guid>http://djangojeng-e.github.io/2020/05/10/Writing-your-first-Django-app-part-7-5%ED%8E%B8/</guid>
      <pubDate>Sat, 09 May 2020 16:39:10 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;admin-인덱스-페이지-꾸미기&quot;&gt;&lt;a href=&quot;#admin-인덱스-페이지-꾸미기&quot; class=&quot;headerlink&quot; title=&quot;admin 인덱스 페이지 꾸미기&quot;&gt;&lt;/a&gt;admin 인덱스 페이지 꾸미기&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;이전 포
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="admin-인덱스-페이지-꾸미기"><a href="#admin-인덱스-페이지-꾸미기" class="headerlink" title="admin 인덱스 페이지 꾸미기"></a>admin 인덱스 페이지 꾸미기</h2><br><p>이전 포스팅과 비슷하게, Django 의 admin 인덱스 페이지를 고치고 싶어질지 모릅니다.</p><br><p>기본값으로, 인덱스 페이지에는, admin 어플리케이션과 함께 </p><p><br>INSTALLED_APPS 에 등록된 모든 앱들을 출력합니다. </p><p><br>레이아웃에 큰 변화를 주고 싶어질지도 모릅니다. 인덱스 페이지는 아마 가장 중요한 어드민 페이지중에 하나일것이고, </p><p><br>사용하기 쉬어야 합니다. </p><br><blockquote><p>수정해야할 템플릿은, admin/index.html 입니다.</p><p>admin/base_site.html 파일과 같은 방식으로, </p><p>프로젝트 폴더내에, templates/admin 으로 복사해 옵니다. </p></blockquote><br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> dhkang  ~/.pyenv/versions/3.7.4/envs/django-tutorial/lib/python3.7/site-packages/django/contrib/admin/templates/admin   master  </span><br><span class="line">cp index.html ~/django_tutorial/mysite/templates/admin</span><br></pre></td></tr></table></figure><br><br><p>이 파일을 수정하면, app_list 라는 템플릿 변수를 사용하는것을 볼수 있습니다.</p><p><br>이 변수는 설치된 모든 Django app 을 포함하고 있습니다. 이것을 사용하기 보다는, 객체 특화된 어드민 페이지를 하드코드된 링크들을 사용해서 어드민 페이지를 꾸밀수 있습니다. </p><br><br><h2 id="What’s-next"><a href="#What’s-next" class="headerlink" title="What’s next?"></a>What’s next?</h2><br><br><p>초심자를 위한 튜토리얼은 여기서 끝입니다.</p><br><p>python 패키지와 어떻게 이 polls 앱을 재사용 가능한 앱으로 만들지에 대해서 배우고 싶다면, </p><p><br>심화과정 튜토리얼 : 재사용가능한 앱 만들기를 보시면 됩니다. </p><br><br><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><br><p>첫번째 Django 앱 만들기 기본 튜토리얼이 끝났습니다. </p><p>첫번째 튜토리얼인데도 아직도 이해가 안가는 부분이 많습니다. </p><br><p>다시 한번 또 리뷰하면서 보면, 더 이해가 많아지겠죠;;; 당분간 reusable app 만들기는 건들지 않고. <br></p><p>실력이 더 쌓이면 건들 생각입니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/10/Writing-your-first-Django-app-part-7-5%ED%8E%B8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Writing your first Django app, part 7 - 4편</title>
      <link>http://djangojeng-e.github.io/2020/05/09/Writing-your-first-Django-app-part-7-4%ED%8E%B8/</link>
      <guid>http://djangojeng-e.github.io/2020/05/09/Writing-your-first-Django-app-part-7-4%ED%8E%B8/</guid>
      <pubDate>Sat, 09 May 2020 02:44:01 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;admin-모양과-느낌-꾸미기&quot;&gt;&lt;a href=&quot;#admin-모양과-느낌-꾸미기&quot; class=&quot;headerlink&quot; title=&quot;admin 모양과 느낌 꾸미기&quot;&gt;&lt;/a&gt;admin 모양과 느낌 꾸미기&lt;/h2&gt;&lt;br&gt;

&lt;p&gt;확실히 django administration 을 어디믄 페이지 상단에 가지는것은 좋아보이지 않습니다.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;그저 따분한 타이틀 텍스트 같아 보여서 더더욱이 안좋아 보이고, 지루해 보입니다.&lt;/p&gt;
&lt;br&gt;

&lt;br&gt;

&lt;p&gt;Django 의 템플릿 시스템을 사용하여 바꿀수 있습니다. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;Django admin 은 Django 에 의해서 동작하고, 어드민 인터페이스는 Django 의 자체 템플릿 시스템을 사용합니다.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="admin-모양과-느낌-꾸미기"><a href="#admin-모양과-느낌-꾸미기" class="headerlink" title="admin 모양과 느낌 꾸미기"></a>admin 모양과 느낌 꾸미기</h2><br><p>확실히 django administration 을 어디믄 페이지 상단에 가지는것은 좋아보이지 않습니다.</p><p><br>그저 따분한 타이틀 텍스트 같아 보여서 더더욱이 안좋아 보이고, 지루해 보입니다.</p><br><br><p>Django 의 템플릿 시스템을 사용하여 바꿀수 있습니다. </p><p><br>Django admin 은 Django 에 의해서 동작하고, 어드민 인터페이스는 Django 의 자체 템플릿 시스템을 사용합니다.<br><br></p><a id="more"></a><br><h2 id="프로젝트의-templates-꾸미기"><a href="#프로젝트의-templates-꾸미기" class="headerlink" title="프로젝트의 templates 꾸미기"></a>프로젝트의 templates 꾸미기</h2><p><br><br></p><p>프로젝트 폴더내에 templates 라는 폴더를 생성합니다 (manage.py 파일과 같은 위치에 생성합니다) </p><br><p>templates 폴더는 Django 가 접근할수 있는 파일 시스템 어디에 위치해 있어도 상관없습니다. </p><p><br>하지만,  project 폴더 내에 templates 폴더를 갖게 하는것은 관례적으로 따라하기 좋습니다. </p><br><br><blockquote><p>mysite/settings.py 파일을 열고, </p><p>TEMPLATES 세팅에 DIR 옵션을 추가해 줍니다. </p></blockquote><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">TEMPLATES = [</span></span><br><span class="line"><span class="xml">    &#123;</span></span><br><span class="line"><span class="xml">        'BACKEND': 'django.template.backends.django.DjangoTemplates',</span></span><br><span class="line"><span class="xml">        'DIRS': [os.path.join(BASE_DIR, 'templates')],</span></span><br><span class="line"><span class="xml">        'APP_DIRS': True,</span></span><br><span class="line"><span class="xml">        'OPTIONS': &#123;</span></span><br><span class="line"><span class="xml">            'context_processors': [</span></span><br><span class="line"><span class="xml">                'django.template.context_processors.debug',</span></span><br><span class="line"><span class="xml">                'django.template.context_processors.request',</span></span><br><span class="line"><span class="xml">                'django.contrib.auth.context_processors.auth',</span></span><br><span class="line"><span class="xml">                'django.contrib.messages.context_processors.messages',</span></span><br><span class="line"><span class="xml">            ],</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">]</span></span><br></pre></td></tr></table></figure><p><br><br></p><blockquote><p>DIRS 는 파일시스템 폴더들을 가진 리스트입니다. </p><p>Django 가 templates 를 읽을때 확인 합니다. </p></blockquote><br><br><blockquote><p>템플릿 정리하기 </p><p>static files 들과 비슷하게, </p><p>우리는 모든 템플릿들을 하나의 큰 템플릿 폴더안에 넣어둘수 있고, 완벽하게 작동할것입니다. </p><p>하지만, 특정 어플리케이션을 따르는 템플릿들은 </p><p>프로젝트의 tempaltes 폴더안에 넣기보다는 어플리케이션의 templates 폴더에 넣습니다. </p><p>(예, polls/templates)</p><p>resuable app 튜토리얼에서 이것에 대해 더 얘기해볼겁니다 </p></blockquote><br><br><p>생성된 templates 폴더 안에, admin 폴더를 생성합니다. <br>그리고, django/contrib/admin/templates 에서 admin/base_site.html 을 복사해서 붙여놓습니다. </p><p><br>아래 커맨드를 실행해서, django 소스 파일들이 어디있는지 찾아냅니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python -c <span class="string">"import django; print(django.__path__)"</span></span><br><span class="line">(django-tutorial)  dhkang  ~/django_tutorial/mysite   master  python -c <span class="string">"import django; print(django.__path__)"</span></span><br><span class="line">[<span class="string">'/home/dhkang/.pyenv/versions/3.7.4/envs/django-tutorial/lib/python3.7/site-packages/django'</span>]</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p><br><br></p><p>해당 경로로 들어가서, base_site.html 파일을 cp 커멘드를 입력하여, mysite/templates 폴더 안에 카피해줍니다. </p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> dhkang  ~/.pyenv/versions/3.7.4/envs/django-tutorial/lib/python3.7/site-packages/django/contrib/admin/templates/admin   master  </span><br><span class="line">cp base_site.html ~/django_tutorial/mysite/templates/</span><br></pre></td></tr></table></figure><br><br><h2 id="admin-base-site-html-수정하기"><a href="#admin-base-site-html-수정하기" class="headerlink" title="admin base_site.html 수정하기"></a>admin base_site.html 수정하기</h2><br><blockquote><p>mysite/templates/admin/base_site.html </p><p>파일을, 아래와 같이 수정해 줍니다. </p></blockquote><br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> "admin/base.html" %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="template-variable">&#123;&#123; title &#125;&#125;</span><span class="xml"> | </span><span class="template-variable">&#123;&#123; site_title|<span class="name">default</span>:_('Django site admin') &#125;&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> branding %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"site-name"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">url</span></span> 'admin:index' %&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span>Polls Administration<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> nav-global %&#125;</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span></span><br></pre></td></tr></table></figure><br><p>이 방식을 사용해서 어떻게 템플릿들을 덮어쓸수 있는지 가르쳐줍니다. 실제 프로젝트에서는, django.contrib.admin.AdminSite.site_header 속성을 사용해서 이런 특수한 꾸미기를 더 쉽게 만들수 있습니다. </p><p><br><br></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> branding %&#125;</span><span class="xml"> 이나 </span><span class="template-variable">&#123;&#123; title &#125;&#125;</span><span class="xml"> 같은 템플릿 테그들이 이 템플릿 </span></span><br><span class="line"><span class="template-tag">&#123;% %&#125;</span><span class="xml"> 나 </span><span class="template-variable">&#123;&#123; &#125;&#125;</span><span class="xml"> 태그들은 django 언어들입니다. </span></span><br><span class="line"></span><br><span class="line"><span class="xml">Django admin/base_site.html 파일을 그릴때, </span></span><br><span class="line"><span class="xml">이 템플릿 언어들이 검토되어 마지막 HTML 페이지를 그려냅니다.</span></span><br><span class="line"></span><br><span class="line"><span class="xml">튜토리얼 part3 에서 이미 확인한 바 있습니다.</span></span><br></pre></td></tr></table></figure><br><br><p>Django 의 기본 어드민 템플릿 어떤것이든 덮어써서 사용할수 있습니다. </p><p><br>템플릿을 덮어쓸때에는, base_html 을 덮어쓴 방식과 같은 일을 수행하면 됩니다. <br></p><br><blockquote><p>admin 에 들어가서, </p><p>템플릿이 잘 수정되었는지 확인 합니다. </p><p>Polls Administration 이라고 어드민 페이지 상단에 잘 표시되는걸 확인할수 있습니다. </p></blockquote><br><img src="/2020/05/09/Writing-your-first-Django-app-part-7-4%ED%8E%B8/image1.png" class=""><br><h2 id="어플리케이션의-템플릿-꾸미기"><a href="#어플리케이션의-템플릿-꾸미기" class="headerlink" title="어플리케이션의 템플릿 꾸미기"></a>어플리케이션의 템플릿 꾸미기</h2><br><p>눈치빠른 독자들은, 물어볼것입니다. <br></p><p>만약, DIRS 가 기본값으로 비어 있으면, Django 는 어떻게 기본 admin templates 를 찾았을까요? </p><p><br>정답은, APP_DIRS 가 True 로 설정 되어 있었기 때문입니다. </p><p><br>Django 는 자동으로 각 어플리케이션 안에 있는 templates/ 서브 디렉토리를 찾고 폴백으로 사용합니다. <br></p><p>(django.contrib.admin 도 하나의 어플리케이션이란것을 잊지 않습니다) </p><br><p>poll 어플리케이션은 너무 복잡하지 않고, 사용자 정의 admin 템플릿들을 필요로 하지 않습니다. <br>하지만, 만약 앱이 더 복잡하게 자라나고 Django 의 기본 어드민 템플릿들을 어떤 기능들을 위해서 수정이 필요할때는,<br> 어플리케이션들의 템플릿들을 고쳐주는것이 프로젝트의 템플릿을 고쳐주는것보다 나을것입니다. </p><br><br><p>이 방식으로, polls application 을 새로운 프로젝트에 포함시킬수 있고, 사용자 정의 템플릿을 필요에 따라 찾을것입니다. </p><p><br><br></p><p>Django 가 어떻게 템플릿들을 찾는지에 대해서는, template loading documentation 문서를 참조합니다.  </p><p><br><br></p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며.."></a>마치며..</h2><br><p>Django 어드민 페이지의 템플릿을 수정해 보았습니다. <br></p><p>어드민 템플릿에서 기존 템플릿 파일을 프로젝트내에 templates/admin 폴더에 복사해서 붙여놓고. <br></p><p>파일을 수정하면 됩니다. </p>]]></content:encoded>
      
      <comments>http://djangojeng-e.github.io/2020/05/09/Writing-your-first-Django-app-part-7-4%ED%8E%B8/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
